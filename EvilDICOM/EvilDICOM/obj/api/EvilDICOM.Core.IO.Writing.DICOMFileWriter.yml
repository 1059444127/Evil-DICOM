items:
- uid: EvilDICOM.Core.IO.Writing.DICOMFileWriter
  id: DICOMFileWriter
  parent: EvilDICOM.Core.IO.Writing
  children:
  - EvilDICOM.Core.IO.Writing.DICOMFileWriter.Write(System.IO.Stream,EvilDICOM.Core.IO.Writing.DICOMWriteSettings,EvilDICOM.Core.DICOMObject)
  - EvilDICOM.Core.IO.Writing.DICOMFileWriter.Write(System.String,EvilDICOM.Core.IO.Writing.DICOMWriteSettings,EvilDICOM.Core.DICOMObject)
  - EvilDICOM.Core.IO.Writing.DICOMFileWriter.WriteLittleEndian(System.String,EvilDICOM.Core.DICOMObject)
  langs:
  - csharp
  - vb
  name: DICOMFileWriter
  fullName: EvilDICOM.Core.IO.Writing.DICOMFileWriter
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Writing/DICOMFileWriter.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/IO/Writing/DICOMFileWriter.cs
    startLine: 7
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Writing
  syntax:
    content: public class DICOMFileWriter
    content.vb: Public Class DICOMFileWriter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: EvilDICOM.Core.IO.Writing.DICOMFileWriter.Write(System.String,EvilDICOM.Core.IO.Writing.DICOMWriteSettings,EvilDICOM.Core.DICOMObject)
  id: Write(System.String,EvilDICOM.Core.IO.Writing.DICOMWriteSettings,EvilDICOM.Core.DICOMObject)
  parent: EvilDICOM.Core.IO.Writing.DICOMFileWriter
  langs:
  - csharp
  - vb
  name: Write(String, DICOMWriteSettings, DICOMObject)
  fullName: EvilDICOM.Core.IO.Writing.DICOMFileWriter.Write(System.String, EvilDICOM.Core.IO.Writing.DICOMWriteSettings, EvilDICOM.Core.DICOMObject)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Writing/DICOMFileWriter.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/IO/Writing/DICOMFileWriter.cs
    startLine: 15
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Writing
  summary: Writes DICOM file out as a file of a specified path
  example: []
  syntax:
    content: public static void Write(string filePath, DICOMWriteSettings settings, DICOMObject toWrite)
    content.vb: Public Shared Sub Write(filePath As String, settings As DICOMWriteSettings, toWrite As DICOMObject)
    parameters:
    - id: filePath
      type: System.String
      description: the path to which to write the file
    - id: settings
      type: EvilDICOM.Core.IO.Writing.DICOMWriteSettings
      description: the write settings
    - id: toWrite
      type: EvilDICOM.Core.DICOMObject
      description: the object to write
- uid: EvilDICOM.Core.IO.Writing.DICOMFileWriter.Write(System.IO.Stream,EvilDICOM.Core.IO.Writing.DICOMWriteSettings,EvilDICOM.Core.DICOMObject)
  id: Write(System.IO.Stream,EvilDICOM.Core.IO.Writing.DICOMWriteSettings,EvilDICOM.Core.DICOMObject)
  parent: EvilDICOM.Core.IO.Writing.DICOMFileWriter
  langs:
  - csharp
  - vb
  name: Write(Stream, DICOMWriteSettings, DICOMObject)
  fullName: EvilDICOM.Core.IO.Writing.DICOMFileWriter.Write(System.IO.Stream, EvilDICOM.Core.IO.Writing.DICOMWriteSettings, EvilDICOM.Core.DICOMObject)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Writing/DICOMFileWriter.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/IO/Writing/DICOMFileWriter.cs
    startLine: 29
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Writing
  summary: Write DICOM file out (bytes) to a specified stream
  example: []
  syntax:
    content: public static void Write(Stream stream, DICOMWriteSettings settings, DICOMObject toWrite)
    content.vb: Public Shared Sub Write(stream As Stream, settings As DICOMWriteSettings, toWrite As DICOMObject)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: the stream to which to write the file
    - id: settings
      type: EvilDICOM.Core.IO.Writing.DICOMWriteSettings
      description: the write settings
    - id: toWrite
      type: EvilDICOM.Core.DICOMObject
      description: the object to write
- uid: EvilDICOM.Core.IO.Writing.DICOMFileWriter.WriteLittleEndian(System.String,EvilDICOM.Core.DICOMObject)
  id: WriteLittleEndian(System.String,EvilDICOM.Core.DICOMObject)
  parent: EvilDICOM.Core.IO.Writing.DICOMFileWriter
  langs:
  - csharp
  - vb
  name: WriteLittleEndian(String, DICOMObject)
  fullName: EvilDICOM.Core.IO.Writing.DICOMFileWriter.WriteLittleEndian(System.String, EvilDICOM.Core.DICOMObject)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Writing/DICOMFileWriter.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/IO/Writing/DICOMFileWriter.cs
    startLine: 40
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Writing
  syntax:
    content: public static void WriteLittleEndian(string filePath, DICOMObject toWrite)
    content.vb: Public Shared Sub WriteLittleEndian(filePath As String, toWrite As DICOMObject)
    parameters:
    - id: filePath
      type: System.String
    - id: toWrite
      type: EvilDICOM.Core.DICOMObject
references:
- uid: EvilDICOM.Core.IO.Writing
  isExternal: false
  name: EvilDICOM.Core.IO.Writing
  fullName: EvilDICOM.Core.IO.Writing
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: EvilDICOM.Core.IO.Writing.DICOMWriteSettings
  parent: EvilDICOM.Core.IO.Writing
  isExternal: false
  name: DICOMWriteSettings
  fullName: EvilDICOM.Core.IO.Writing.DICOMWriteSettings
- uid: EvilDICOM.Core.DICOMObject
  parent: EvilDICOM.Core
  isExternal: false
  name: DICOMObject
  fullName: EvilDICOM.Core.DICOMObject
- uid: EvilDICOM.Core
  isExternal: false
  name: EvilDICOM.Core
  fullName: EvilDICOM.Core
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  fullName: System.IO.Stream
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
