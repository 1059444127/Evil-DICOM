items:
- uid: EvilDICOM.Core.IO.Writing.DICOMWriteSettings
  id: DICOMWriteSettings
  parent: EvilDICOM.Core.IO.Writing
  children:
  - EvilDICOM.Core.IO.Writing.DICOMWriteSettings.Default
  - EvilDICOM.Core.IO.Writing.DICOMWriteSettings.DefaultExplicit
  - EvilDICOM.Core.IO.Writing.DICOMWriteSettings.DoWriteIndefiniteSequences
  - EvilDICOM.Core.IO.Writing.DICOMWriteSettings.GetFileMetaSettings
  - EvilDICOM.Core.IO.Writing.DICOMWriteSettings.TransferSyntax
  langs:
  - csharp
  - vb
  name: DICOMWriteSettings
  fullName: EvilDICOM.Core.IO.Writing.DICOMWriteSettings
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Writing/DICOMWriteSettings.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/IO/Writing/DICOMWriteSettings.cs
    startLine: 4
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Writing
  syntax:
    content: public class DICOMWriteSettings
    content.vb: Public Class DICOMWriteSettings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: EvilDICOM.Core.IO.Writing.DICOMWriteSettings.TransferSyntax
  id: TransferSyntax
  parent: EvilDICOM.Core.IO.Writing.DICOMWriteSettings
  langs:
  - csharp
  - vb
  name: TransferSyntax
  fullName: EvilDICOM.Core.IO.Writing.DICOMWriteSettings.TransferSyntax
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Writing/DICOMWriteSettings.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/IO/Writing/DICOMWriteSettings.cs
    startLine: 6
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Writing
  syntax:
    content: public TransferSyntax TransferSyntax { get; set; }
    content.vb: Public Property TransferSyntax As TransferSyntax
    parameters: []
    return:
      type: EvilDICOM.Core.Enums.TransferSyntax
- uid: EvilDICOM.Core.IO.Writing.DICOMWriteSettings.DoWriteIndefiniteSequences
  id: DoWriteIndefiniteSequences
  parent: EvilDICOM.Core.IO.Writing.DICOMWriteSettings
  langs:
  - csharp
  - vb
  name: DoWriteIndefiniteSequences
  fullName: EvilDICOM.Core.IO.Writing.DICOMWriteSettings.DoWriteIndefiniteSequences
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Writing/DICOMWriteSettings.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/IO/Writing/DICOMWriteSettings.cs
    startLine: 7
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Writing
  syntax:
    content: public bool DoWriteIndefiniteSequences { get; set; }
    content.vb: Public Property DoWriteIndefiniteSequences As Boolean
    parameters: []
    return:
      type: System.Boolean
- uid: EvilDICOM.Core.IO.Writing.DICOMWriteSettings.Default
  id: Default
  parent: EvilDICOM.Core.IO.Writing.DICOMWriteSettings
  langs:
  - csharp
  - vb
  name: Default()
  fullName: EvilDICOM.Core.IO.Writing.DICOMWriteSettings.Default()
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Writing/DICOMWriteSettings.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/IO/Writing/DICOMWriteSettings.cs
    startLine: 9
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Writing
  syntax:
    content: public static DICOMWriteSettings Default()
    content.vb: Public Shared Function Default As DICOMWriteSettings
    return:
      type: EvilDICOM.Core.IO.Writing.DICOMWriteSettings
- uid: EvilDICOM.Core.IO.Writing.DICOMWriteSettings.DefaultExplicit
  id: DefaultExplicit
  parent: EvilDICOM.Core.IO.Writing.DICOMWriteSettings
  langs:
  - csharp
  - vb
  name: DefaultExplicit()
  fullName: EvilDICOM.Core.IO.Writing.DICOMWriteSettings.DefaultExplicit()
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Writing/DICOMWriteSettings.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/IO/Writing/DICOMWriteSettings.cs
    startLine: 18
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Writing
  syntax:
    content: public static DICOMWriteSettings DefaultExplicit()
    content.vb: Public Shared Function DefaultExplicit As DICOMWriteSettings
    return:
      type: EvilDICOM.Core.IO.Writing.DICOMWriteSettings
- uid: EvilDICOM.Core.IO.Writing.DICOMWriteSettings.GetFileMetaSettings
  id: GetFileMetaSettings
  parent: EvilDICOM.Core.IO.Writing.DICOMWriteSettings
  langs:
  - csharp
  - vb
  name: GetFileMetaSettings()
  fullName: EvilDICOM.Core.IO.Writing.DICOMWriteSettings.GetFileMetaSettings()
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Writing/DICOMWriteSettings.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/IO/Writing/DICOMWriteSettings.cs
    startLine: 31
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Writing
  summary: Write settings when writing the meta header group 0002
  example: []
  syntax:
    content: public DICOMWriteSettings GetFileMetaSettings()
    content.vb: Public Function GetFileMetaSettings As DICOMWriteSettings
    return:
      type: EvilDICOM.Core.IO.Writing.DICOMWriteSettings
      description: 
references:
- uid: EvilDICOM.Core.IO.Writing
  isExternal: false
  name: EvilDICOM.Core.IO.Writing
  fullName: EvilDICOM.Core.IO.Writing
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: EvilDICOM.Core.Enums.TransferSyntax
  parent: EvilDICOM.Core.Enums
  isExternal: false
  name: TransferSyntax
  fullName: EvilDICOM.Core.Enums.TransferSyntax
- uid: EvilDICOM.Core.Enums
  isExternal: false
  name: EvilDICOM.Core.Enums
  fullName: EvilDICOM.Core.Enums
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: EvilDICOM.Core.IO.Writing.DICOMWriteSettings
  parent: EvilDICOM.Core.IO.Writing
  isExternal: false
  name: DICOMWriteSettings
  fullName: EvilDICOM.Core.IO.Writing.DICOMWriteSettings
