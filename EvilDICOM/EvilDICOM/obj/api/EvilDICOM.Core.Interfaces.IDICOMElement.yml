items:
- uid: EvilDICOM.Core.Interfaces.IDICOMElement
  id: IDICOMElement
  parent: EvilDICOM.Core.Interfaces
  children:
  - EvilDICOM.Core.Interfaces.IDICOMElement.DatType
  - EvilDICOM.Core.Interfaces.IDICOMElement.DData
  - EvilDICOM.Core.Interfaces.IDICOMElement.DData_
  - EvilDICOM.Core.Interfaces.IDICOMElement.Tag
  langs:
  - csharp
  - vb
  name: IDICOMElement
  fullName: EvilDICOM.Core.Interfaces.IDICOMElement
  type: Interface
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Interfaces/IDICOMElement.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/Interfaces/IDICOMElement.cs
    startLine: 6
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Interfaces
  syntax:
    content: public interface IDICOMElement
    content.vb: Public Interface IDICOMElement
- uid: EvilDICOM.Core.Interfaces.IDICOMElement.Tag
  id: Tag
  parent: EvilDICOM.Core.Interfaces.IDICOMElement
  langs:
  - csharp
  - vb
  name: Tag
  fullName: EvilDICOM.Core.Interfaces.IDICOMElement.Tag
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Interfaces/IDICOMElement.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/Interfaces/IDICOMElement.cs
    startLine: 8
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Interfaces
  syntax:
    content: Tag Tag { get; set; }
    content.vb: Property Tag As Tag
    parameters: []
    return:
      type: EvilDICOM.Core.Element.Tag
- uid: EvilDICOM.Core.Interfaces.IDICOMElement.DatType
  id: DatType
  parent: EvilDICOM.Core.Interfaces.IDICOMElement
  langs:
  - csharp
  - vb
  name: DatType
  fullName: EvilDICOM.Core.Interfaces.IDICOMElement.DatType
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Interfaces/IDICOMElement.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/Interfaces/IDICOMElement.cs
    startLine: 9
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Interfaces
  syntax:
    content: Type DatType { get; }
    content.vb: ReadOnly Property DatType As Type
    parameters: []
    return:
      type: System.Type
- uid: EvilDICOM.Core.Interfaces.IDICOMElement.DData
  id: DData
  parent: EvilDICOM.Core.Interfaces.IDICOMElement
  langs:
  - csharp
  - vb
  name: DData
  fullName: EvilDICOM.Core.Interfaces.IDICOMElement.DData
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Interfaces/IDICOMElement.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/Interfaces/IDICOMElement.cs
    startLine: 14
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Interfaces
  summary: The dynamic single value data in the element of the first datum in the array (in the case of multiple datum)
  example: []
  syntax:
    content: object DData { get; set; }
    content.vb: Property DData As Object
    parameters: []
    return:
      type: System.Object
- uid: EvilDICOM.Core.Interfaces.IDICOMElement.DData_
  id: DData_
  parent: EvilDICOM.Core.Interfaces.IDICOMElement
  langs:
  - csharp
  - vb
  name: DData_
  fullName: EvilDICOM.Core.Interfaces.IDICOMElement.DData_
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Interfaces/IDICOMElement.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/Interfaces/IDICOMElement.cs
    startLine: 19
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Interfaces
  summary: The dynamic data in the element stored in a list of type T
  example: []
  syntax:
    content: ICollection DData_ { get; set; }
    content.vb: Property DData_ As ICollection
    parameters: []
    return:
      type: System.Collections.ICollection
references:
- uid: EvilDICOM.Core.Interfaces
  isExternal: false
  name: EvilDICOM.Core.Interfaces
  fullName: EvilDICOM.Core.Interfaces
- uid: EvilDICOM.Core.Element.Tag
  parent: EvilDICOM.Core.Element
  isExternal: false
  name: Tag
  fullName: EvilDICOM.Core.Element.Tag
- uid: EvilDICOM.Core.Element
  isExternal: false
  name: EvilDICOM.Core.Element
  fullName: EvilDICOM.Core.Element
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  fullName: System.Type
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
