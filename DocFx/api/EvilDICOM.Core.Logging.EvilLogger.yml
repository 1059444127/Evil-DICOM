### YamlMime:ManagedReference
items:
- uid: EvilDICOM.Core.Logging.EvilLogger
  commentId: T:EvilDICOM.Core.Logging.EvilLogger
  id: EvilLogger
  parent: EvilDICOM.Core.Logging
  children:
  - EvilDICOM.Core.Logging.EvilLogger.Instance
  langs:
  - csharp
  - vb
  name: EvilLogger
  nameWithType: EvilLogger
  fullName: EvilDICOM.Core.Logging.EvilLogger
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Logging/EvilLogger.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: EvilLogger
    path: ../EvilDICOM/EvilDICOM/Core/Logging/EvilLogger.cs
    startLine: 8
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Logging
  summary: "\nThe singleton instance of a logging system for the core Evil DICOM operations. Can subscribe, to\nsee this stream\n"
  example: []
  syntax:
    content: 'public sealed class EvilLogger : EventLogger'
    content.vb: >-
      Public NotInheritable Class EvilLogger
          Inherits EventLogger
  inheritance:
  - System.Object
  - EvilDICOM.Core.Logging.EventLogger
  inheritedMembers:
  - EvilDICOM.Core.Logging.EventLogger.LogRequested
  - EvilDICOM.Core.Logging.EventLogger.Log(System.String,System.Object[])
  - EvilDICOM.Core.Logging.EventLogger.Log(System.Object)
  - EvilDICOM.Core.Logging.EventLogger.Log(System.String,EvilDICOM.Core.Enums.LogPriority,System.Object[])
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: EvilDICOM.Core.Logging.EvilLogger.Instance
  commentId: P:EvilDICOM.Core.Logging.EvilLogger.Instance
  id: Instance
  parent: EvilDICOM.Core.Logging.EvilLogger
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: EvilLogger.Instance
  fullName: EvilDICOM.Core.Logging.EvilLogger.Instance
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Logging/EvilLogger.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: Instance
    path: ../EvilDICOM/EvilDICOM/Core/Logging/EvilLogger.cs
    startLine: 17
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Logging
  syntax:
    content: public static EvilLogger Instance { get; }
    parameters: []
    return:
      type: EvilDICOM.Core.Logging.EvilLogger
    content.vb: Public Shared ReadOnly Property Instance As EvilLogger
  overload: EvilDICOM.Core.Logging.EvilLogger.Instance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: EvilDICOM.Core.Logging
  commentId: N:EvilDICOM.Core.Logging
  isExternal: false
  name: EvilDICOM.Core.Logging
  nameWithType: EvilDICOM.Core.Logging
  fullName: EvilDICOM.Core.Logging
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EvilDICOM.Core.Logging.EventLogger
  commentId: T:EvilDICOM.Core.Logging.EventLogger
  parent: EvilDICOM.Core.Logging
  isExternal: false
  name: EventLogger
  nameWithType: EventLogger
  fullName: EvilDICOM.Core.Logging.EventLogger
- uid: EvilDICOM.Core.Logging.EventLogger.LogRequested
  commentId: E:EvilDICOM.Core.Logging.EventLogger.LogRequested
  parent: EvilDICOM.Core.Logging.EventLogger
  isExternal: false
  name: LogRequested
  nameWithType: EventLogger.LogRequested
  fullName: EvilDICOM.Core.Logging.EventLogger.LogRequested
- uid: EvilDICOM.Core.Logging.EventLogger.Log(System.String,System.Object[])
  commentId: M:EvilDICOM.Core.Logging.EventLogger.Log(System.String,System.Object[])
  parent: EvilDICOM.Core.Logging.EventLogger
  isExternal: true
  name: Log(String, Object[])
  nameWithType: EventLogger.Log(String, Object[])
  fullName: EvilDICOM.Core.Logging.EventLogger.Log(System.String, System.Object[])
  nameWithType.vb: EventLogger.Log(String, Object())
  fullName.vb: EvilDICOM.Core.Logging.EventLogger.Log(System.String, System.Object())
  name.vb: Log(String, Object())
  spec.csharp:
  - uid: EvilDICOM.Core.Logging.EventLogger.Log(System.String,System.Object[])
    name: Log
    nameWithType: EventLogger.Log
    fullName: EvilDICOM.Core.Logging.EventLogger.Log
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EvilDICOM.Core.Logging.EventLogger.Log(System.String,System.Object[])
    name: Log
    nameWithType: EventLogger.Log
    fullName: EvilDICOM.Core.Logging.EventLogger.Log
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Core.Logging.EventLogger.Log(System.Object)
  commentId: M:EvilDICOM.Core.Logging.EventLogger.Log(System.Object)
  parent: EvilDICOM.Core.Logging.EventLogger
  isExternal: true
  name: Log(Object)
  nameWithType: EventLogger.Log(Object)
  fullName: EvilDICOM.Core.Logging.EventLogger.Log(System.Object)
  spec.csharp:
  - uid: EvilDICOM.Core.Logging.EventLogger.Log(System.Object)
    name: Log
    nameWithType: EventLogger.Log
    fullName: EvilDICOM.Core.Logging.EventLogger.Log
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EvilDICOM.Core.Logging.EventLogger.Log(System.Object)
    name: Log
    nameWithType: EventLogger.Log
    fullName: EvilDICOM.Core.Logging.EventLogger.Log
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Core.Logging.EventLogger.Log(System.String,EvilDICOM.Core.Enums.LogPriority,System.Object[])
  commentId: M:EvilDICOM.Core.Logging.EventLogger.Log(System.String,EvilDICOM.Core.Enums.LogPriority,System.Object[])
  parent: EvilDICOM.Core.Logging.EventLogger
  isExternal: true
  name: Log(String, LogPriority, Object[])
  nameWithType: EventLogger.Log(String, LogPriority, Object[])
  fullName: EvilDICOM.Core.Logging.EventLogger.Log(System.String, EvilDICOM.Core.Enums.LogPriority, System.Object[])
  nameWithType.vb: EventLogger.Log(String, LogPriority, Object())
  fullName.vb: EvilDICOM.Core.Logging.EventLogger.Log(System.String, EvilDICOM.Core.Enums.LogPriority, System.Object())
  name.vb: Log(String, LogPriority, Object())
  spec.csharp:
  - uid: EvilDICOM.Core.Logging.EventLogger.Log(System.String,EvilDICOM.Core.Enums.LogPriority,System.Object[])
    name: Log
    nameWithType: EventLogger.Log
    fullName: EvilDICOM.Core.Logging.EventLogger.Log
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EvilDICOM.Core.Enums.LogPriority
    name: LogPriority
    nameWithType: LogPriority
    fullName: EvilDICOM.Core.Enums.LogPriority
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EvilDICOM.Core.Logging.EventLogger.Log(System.String,EvilDICOM.Core.Enums.LogPriority,System.Object[])
    name: Log
    nameWithType: EventLogger.Log
    fullName: EvilDICOM.Core.Logging.EventLogger.Log
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EvilDICOM.Core.Enums.LogPriority
    name: LogPriority
    nameWithType: LogPriority
    fullName: EvilDICOM.Core.Enums.LogPriority
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Core.Logging.EvilLogger.Instance*
  commentId: Overload:EvilDICOM.Core.Logging.EvilLogger.Instance
  isExternal: false
  name: Instance
  nameWithType: EvilLogger.Instance
  fullName: EvilDICOM.Core.Logging.EvilLogger.Instance
- uid: EvilDICOM.Core.Logging.EvilLogger
  commentId: T:EvilDICOM.Core.Logging.EvilLogger
  parent: EvilDICOM.Core.Logging
  isExternal: false
  name: EvilLogger
  nameWithType: EvilLogger
  fullName: EvilDICOM.Core.Logging.EvilLogger
