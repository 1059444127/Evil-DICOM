### YamlMime:ManagedReference
items:
- uid: EvilDICOM.Core.Logging.EventLogger
  commentId: T:EvilDICOM.Core.Logging.EventLogger
  id: EventLogger
  parent: EvilDICOM.Core.Logging
  children:
  - EvilDICOM.Core.Logging.EventLogger.Log(System.Object)
  - EvilDICOM.Core.Logging.EventLogger.Log(System.String,EvilDICOM.Core.Enums.LogPriority,System.Object[])
  - EvilDICOM.Core.Logging.EventLogger.Log(System.String,System.Object[])
  - EvilDICOM.Core.Logging.EventLogger.LogRequested
  langs:
  - csharp
  - vb
  name: EventLogger
  nameWithType: EventLogger
  fullName: EvilDICOM.Core.Logging.EventLogger
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Logging/EventLogger.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: EventLogger
    path: ../EvilDICOM/EvilDICOM/Core/Logging/EventLogger.cs
    startLine: 4
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Logging
  syntax:
    content: 'public class EventLogger : object'
    content.vb: >-
      Public Class EventLogger
          Inherits Object
  inheritance:
  - System.Object
  derivedClasses:
  - EvilDICOM.Core.Logging.EvilLogger
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EvilDICOM.Core.Logging.EventLogger.LogRequested
  commentId: E:EvilDICOM.Core.Logging.EventLogger.LogRequested
  id: LogRequested
  parent: EvilDICOM.Core.Logging.EventLogger
  langs:
  - csharp
  - vb
  name: LogRequested
  nameWithType: EventLogger.LogRequested
  fullName: EvilDICOM.Core.Logging.EventLogger.LogRequested
  type: Event
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Logging/EventLogger.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: LogRequested
    path: ../EvilDICOM/EvilDICOM/Core/Logging/EventLogger.cs
    startLine: 9
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Logging
  syntax:
    content: public event EventLogger.LogHandler LogRequested
    return:
      type: EvilDICOM.Core.Logging.EventLogger.LogHandler
    content.vb: Public Event LogRequested As EventLogger.LogHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Core.Logging.EventLogger.Log(System.String,System.Object[])
  commentId: M:EvilDICOM.Core.Logging.EventLogger.Log(System.String,System.Object[])
  id: Log(System.String,System.Object[])
  parent: EvilDICOM.Core.Logging.EventLogger
  langs:
  - csharp
  - vb
  name: Log(String, Object[])
  nameWithType: EventLogger.Log(String, Object[])
  fullName: EvilDICOM.Core.Logging.EventLogger.Log(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Logging/EventLogger.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: Log
    path: ../EvilDICOM/EvilDICOM/Core/Logging/EventLogger.cs
    startLine: 11
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Logging
  syntax:
    content: public void Log(string toLogMessage, params object[] args)
    parameters:
    - id: toLogMessage
      type: System.String
    - id: args
      type: System.Object[]
    content.vb: Public Sub Log(toLogMessage As String, ParamArray args As Object())
  overload: EvilDICOM.Core.Logging.EventLogger.Log*
  nameWithType.vb: EventLogger.Log(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EvilDICOM.Core.Logging.EventLogger.Log(System.String, System.Object())
  name.vb: Log(String, Object())
- uid: EvilDICOM.Core.Logging.EventLogger.Log(System.Object)
  commentId: M:EvilDICOM.Core.Logging.EventLogger.Log(System.Object)
  id: Log(System.Object)
  parent: EvilDICOM.Core.Logging.EventLogger
  langs:
  - csharp
  - vb
  name: Log(Object)
  nameWithType: EventLogger.Log(Object)
  fullName: EvilDICOM.Core.Logging.EventLogger.Log(System.Object)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Logging/EventLogger.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: Log
    path: ../EvilDICOM/EvilDICOM/Core/Logging/EventLogger.cs
    startLine: 16
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Logging
  syntax:
    content: public void Log(object toLogMessage)
    parameters:
    - id: toLogMessage
      type: System.Object
    content.vb: Public Sub Log(toLogMessage As Object)
  overload: EvilDICOM.Core.Logging.EventLogger.Log*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Core.Logging.EventLogger.Log(System.String,EvilDICOM.Core.Enums.LogPriority,System.Object[])
  commentId: M:EvilDICOM.Core.Logging.EventLogger.Log(System.String,EvilDICOM.Core.Enums.LogPriority,System.Object[])
  id: Log(System.String,EvilDICOM.Core.Enums.LogPriority,System.Object[])
  parent: EvilDICOM.Core.Logging.EventLogger
  langs:
  - csharp
  - vb
  name: Log(String, LogPriority, Object[])
  nameWithType: EventLogger.Log(String, LogPriority, Object[])
  fullName: EvilDICOM.Core.Logging.EventLogger.Log(System.String, EvilDICOM.Core.Enums.LogPriority, System.Object[])
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Logging/EventLogger.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: Log
    path: ../EvilDICOM/EvilDICOM/Core/Logging/EventLogger.cs
    startLine: 21
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Logging
  syntax:
    content: public void Log(string toLogMessage, LogPriority priority, params object[] args)
    parameters:
    - id: toLogMessage
      type: System.String
    - id: priority
      type: EvilDICOM.Core.Enums.LogPriority
    - id: args
      type: System.Object[]
    content.vb: Public Sub Log(toLogMessage As String, priority As LogPriority, ParamArray args As Object())
  overload: EvilDICOM.Core.Logging.EventLogger.Log*
  nameWithType.vb: EventLogger.Log(String, LogPriority, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EvilDICOM.Core.Logging.EventLogger.Log(System.String, EvilDICOM.Core.Enums.LogPriority, System.Object())
  name.vb: Log(String, LogPriority, Object())
references:
- uid: EvilDICOM.Core.Logging
  commentId: N:EvilDICOM.Core.Logging
  isExternal: false
  name: EvilDICOM.Core.Logging
  nameWithType: EvilDICOM.Core.Logging
  fullName: EvilDICOM.Core.Logging
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EvilDICOM.Core.Logging.EventLogger.LogHandler
  commentId: T:EvilDICOM.Core.Logging.EventLogger.LogHandler
  parent: EvilDICOM.Core.Logging
  isExternal: false
  name: EventLogger.LogHandler
  nameWithType: EventLogger.LogHandler
  fullName: EvilDICOM.Core.Logging.EventLogger.LogHandler
- uid: EvilDICOM.Core.Logging.EventLogger.Log*
  commentId: Overload:EvilDICOM.Core.Logging.EventLogger.Log
  isExternal: false
  name: Log
  nameWithType: EventLogger.Log
  fullName: EvilDICOM.Core.Logging.EventLogger.Log
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EvilDICOM.Core.Enums.LogPriority
  commentId: T:EvilDICOM.Core.Enums.LogPriority
  parent: EvilDICOM.Core.Enums
  isExternal: false
  name: LogPriority
  nameWithType: LogPriority
  fullName: EvilDICOM.Core.Enums.LogPriority
- uid: EvilDICOM.Core.Enums
  commentId: N:EvilDICOM.Core.Enums
  isExternal: false
  name: EvilDICOM.Core.Enums
  nameWithType: EvilDICOM.Core.Enums
  fullName: EvilDICOM.Core.Enums
