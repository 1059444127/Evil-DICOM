### YamlMime:ManagedReference
items:
- uid: EvilDICOM.Core.Dictionaries.VRDictionary
  commentId: T:EvilDICOM.Core.Dictionaries.VRDictionary
  id: VRDictionary
  parent: EvilDICOM.Core.Dictionaries
  children:
  - EvilDICOM.Core.Dictionaries.VRDictionary.GetAbbreviationFromType(EvilDICOM.Core.Interfaces.IDICOMElement)
  - EvilDICOM.Core.Dictionaries.VRDictionary.GetAbbreviationFromType(Type)
  - EvilDICOM.Core.Dictionaries.VRDictionary.GetAbbreviationFromVR(EvilDICOM.Core.Enums.VR)
  - EvilDICOM.Core.Dictionaries.VRDictionary.GetEncodingFromVR(EvilDICOM.Core.Enums.VR)
  - EvilDICOM.Core.Dictionaries.VRDictionary.GetVRFromAbbreviation(System.String)
  - EvilDICOM.Core.Dictionaries.VRDictionary.GetVRFromType(EvilDICOM.Core.Interfaces.IDICOMElement)
  - EvilDICOM.Core.Dictionaries.VRDictionary.GetVRFromType(Type)
  langs:
  - csharp
  - vb
  name: VRDictionary
  nameWithType: VRDictionary
  fullName: EvilDICOM.Core.Dictionaries.VRDictionary
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Dictionaries/VRDictionary.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: VRDictionary
    path: ../EvilDICOM/EvilDICOM/Core/Dictionaries/VRDictionary.cs
    startLine: 12
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Dictionaries
  summary: "\nGeneral purpose class for working with VRs. It contains methods to convert ASCII string abbreviations into VR type,\nthe reverse,\nand a few more useful methods when working with VR enums.\n"
  example: []
  syntax:
    content: 'public class VRDictionary : object'
    content.vb: >-
      Public Class VRDictionary
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EvilDICOM.Core.Dictionaries.VRDictionary.GetVRFromAbbreviation(System.String)
  commentId: M:EvilDICOM.Core.Dictionaries.VRDictionary.GetVRFromAbbreviation(System.String)
  id: GetVRFromAbbreviation(System.String)
  parent: EvilDICOM.Core.Dictionaries.VRDictionary
  langs:
  - csharp
  - vb
  name: GetVRFromAbbreviation(String)
  nameWithType: VRDictionary.GetVRFromAbbreviation(String)
  fullName: EvilDICOM.Core.Dictionaries.VRDictionary.GetVRFromAbbreviation(System.String)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Dictionaries/VRDictionary.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: GetVRFromAbbreviation
    path: ../EvilDICOM/EvilDICOM/Core/Dictionaries/VRDictionary.cs
    startLine: 19
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Dictionaries
  summary: "\nFinds the VR type from an DICOM two letter abbreviation.\n"
  example: []
  syntax:
    content: public static VR GetVRFromAbbreviation(string vrAbbreviation)
    parameters:
    - id: vrAbbreviation
      type: System.String
      description: an DICOM two letter abbreviation
    return:
      type: EvilDICOM.Core.Enums.VR
      description: the VR type
    content.vb: Public Shared Function GetVRFromAbbreviation(vrAbbreviation As String) As VR
  overload: EvilDICOM.Core.Dictionaries.VRDictionary.GetVRFromAbbreviation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Core.Dictionaries.VRDictionary.GetAbbreviationFromVR(EvilDICOM.Core.Enums.VR)
  commentId: M:EvilDICOM.Core.Dictionaries.VRDictionary.GetAbbreviationFromVR(EvilDICOM.Core.Enums.VR)
  id: GetAbbreviationFromVR(EvilDICOM.Core.Enums.VR)
  parent: EvilDICOM.Core.Dictionaries.VRDictionary
  langs:
  - csharp
  - vb
  name: GetAbbreviationFromVR(VR)
  nameWithType: VRDictionary.GetAbbreviationFromVR(VR)
  fullName: EvilDICOM.Core.Dictionaries.VRDictionary.GetAbbreviationFromVR(EvilDICOM.Core.Enums.VR)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Dictionaries/VRDictionary.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: GetAbbreviationFromVR
    path: ../EvilDICOM/EvilDICOM/Core/Dictionaries/VRDictionary.cs
    startLine: 87
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Dictionaries
  summary: "\nCreates the DICOM two letter abbreviation from a VR type.\n"
  example: []
  syntax:
    content: public static string GetAbbreviationFromVR(VR vr)
    parameters:
    - id: vr
      type: EvilDICOM.Core.Enums.VR
      description: the VR type
    return:
      type: System.String
      description: the DICOM two letter abbreviation
    content.vb: Public Shared Function GetAbbreviationFromVR(vr As VR) As String
  overload: EvilDICOM.Core.Dictionaries.VRDictionary.GetAbbreviationFromVR*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Core.Dictionaries.VRDictionary.GetVRFromType(EvilDICOM.Core.Interfaces.IDICOMElement)
  commentId: M:EvilDICOM.Core.Dictionaries.VRDictionary.GetVRFromType(EvilDICOM.Core.Interfaces.IDICOMElement)
  id: GetVRFromType(EvilDICOM.Core.Interfaces.IDICOMElement)
  parent: EvilDICOM.Core.Dictionaries.VRDictionary
  langs:
  - csharp
  - vb
  name: GetVRFromType(IDICOMElement)
  nameWithType: VRDictionary.GetVRFromType(IDICOMElement)
  fullName: EvilDICOM.Core.Dictionaries.VRDictionary.GetVRFromType(EvilDICOM.Core.Interfaces.IDICOMElement)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Dictionaries/VRDictionary.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: GetVRFromType
    path: ../EvilDICOM/EvilDICOM/Core/Dictionaries/VRDictionary.cs
    startLine: 155
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Dictionaries
  summary: "\nFinds the VR enum from a specific DICOM element.\n"
  example: []
  syntax:
    content: public static VR GetVRFromType(IDICOMElement el)
    parameters:
    - id: el
      type: EvilDICOM.Core.Interfaces.IDICOMElement
      description: the DICOM element
    return:
      type: EvilDICOM.Core.Enums.VR
      description: the VR type
    content.vb: Public Shared Function GetVRFromType(el As IDICOMElement) As VR
  overload: EvilDICOM.Core.Dictionaries.VRDictionary.GetVRFromType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Core.Dictionaries.VRDictionary.GetVRFromType(Type)
  commentId: M:EvilDICOM.Core.Dictionaries.VRDictionary.GetVRFromType(Type)
  id: GetVRFromType(Type)
  parent: EvilDICOM.Core.Dictionaries.VRDictionary
  langs:
  - csharp
  - vb
  name: GetVRFromType(Type)
  nameWithType: VRDictionary.GetVRFromType(Type)
  fullName: EvilDICOM.Core.Dictionaries.VRDictionary.GetVRFromType(Type)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Dictionaries/VRDictionary.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: GetVRFromType
    path: ../EvilDICOM/EvilDICOM/Core/Dictionaries/VRDictionary.cs
    startLine: 166
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Dictionaries
  summary: "\nFinds the VR enum from a specific DICOM element type.\n"
  example: []
  syntax:
    content: public static VR GetVRFromType(Type t)
    parameters:
    - id: t
      type: Type
    return:
      type: EvilDICOM.Core.Enums.VR
      description: the VR type
    content.vb: Public Shared Function GetVRFromType(t As Type) As VR
  overload: EvilDICOM.Core.Dictionaries.VRDictionary.GetVRFromType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Core.Dictionaries.VRDictionary.GetAbbreviationFromType(EvilDICOM.Core.Interfaces.IDICOMElement)
  commentId: M:EvilDICOM.Core.Dictionaries.VRDictionary.GetAbbreviationFromType(EvilDICOM.Core.Interfaces.IDICOMElement)
  id: GetAbbreviationFromType(EvilDICOM.Core.Interfaces.IDICOMElement)
  parent: EvilDICOM.Core.Dictionaries.VRDictionary
  langs:
  - csharp
  - vb
  name: GetAbbreviationFromType(IDICOMElement)
  nameWithType: VRDictionary.GetAbbreviationFromType(IDICOMElement)
  fullName: EvilDICOM.Core.Dictionaries.VRDictionary.GetAbbreviationFromType(EvilDICOM.Core.Interfaces.IDICOMElement)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Dictionaries/VRDictionary.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: GetAbbreviationFromType
    path: ../EvilDICOM/EvilDICOM/Core/Dictionaries/VRDictionary.cs
    startLine: 176
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Dictionaries
  summary: "\nFinds the VR enum from a specific DICOM element.\n"
  example: []
  syntax:
    content: public static string GetAbbreviationFromType(IDICOMElement el)
    parameters:
    - id: el
      type: EvilDICOM.Core.Interfaces.IDICOMElement
      description: the DICOM element
    return:
      type: System.String
      description: the VR abbreviation
    content.vb: Public Shared Function GetAbbreviationFromType(el As IDICOMElement) As String
  overload: EvilDICOM.Core.Dictionaries.VRDictionary.GetAbbreviationFromType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Core.Dictionaries.VRDictionary.GetAbbreviationFromType(Type)
  commentId: M:EvilDICOM.Core.Dictionaries.VRDictionary.GetAbbreviationFromType(Type)
  id: GetAbbreviationFromType(Type)
  parent: EvilDICOM.Core.Dictionaries.VRDictionary
  langs:
  - csharp
  - vb
  name: GetAbbreviationFromType(Type)
  nameWithType: VRDictionary.GetAbbreviationFromType(Type)
  fullName: EvilDICOM.Core.Dictionaries.VRDictionary.GetAbbreviationFromType(Type)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Dictionaries/VRDictionary.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: GetAbbreviationFromType
    path: ../EvilDICOM/EvilDICOM/Core/Dictionaries/VRDictionary.cs
    startLine: 188
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Dictionaries
  summary: "\nFinds the VR enum from a specific DICOM element.\n"
  example: []
  syntax:
    content: public static string GetAbbreviationFromType(Type t)
    parameters:
    - id: t
      type: Type
    return:
      type: System.String
      description: the VR abbreviation
    content.vb: Public Shared Function GetAbbreviationFromType(t As Type) As String
  overload: EvilDICOM.Core.Dictionaries.VRDictionary.GetAbbreviationFromType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Core.Dictionaries.VRDictionary.GetEncodingFromVR(EvilDICOM.Core.Enums.VR)
  commentId: M:EvilDICOM.Core.Dictionaries.VRDictionary.GetEncodingFromVR(EvilDICOM.Core.Enums.VR)
  id: GetEncodingFromVR(EvilDICOM.Core.Enums.VR)
  parent: EvilDICOM.Core.Dictionaries.VRDictionary
  langs:
  - csharp
  - vb
  name: GetEncodingFromVR(VR)
  nameWithType: VRDictionary.GetEncodingFromVR(VR)
  fullName: EvilDICOM.Core.Dictionaries.VRDictionary.GetEncodingFromVR(EvilDICOM.Core.Enums.VR)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Dictionaries/VRDictionary.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: GetEncodingFromVR
    path: ../EvilDICOM/EvilDICOM/Core/Dictionaries/VRDictionary.cs
    startLine: 201
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Dictionaries
  summary: "\nDetermines the encoding, meaning how many bytes to write the VR and length parameters, from a VR type.\nOptions are explicit long (8 bytes), explicit short (4 bytes), or implicit (4 bytes). In Evil DICOM, the null\nVR is used to represent an unknown VR (before dictionary lookup) that is implicitly encoded.\n"
  example: []
  syntax:
    content: public static VREncoding GetEncodingFromVR(VR vr)
    parameters:
    - id: vr
      type: EvilDICOM.Core.Enums.VR
      description: the VR type
    return:
      type: EvilDICOM.Core.Enums.VREncoding
      description: the encoding method for this type
    content.vb: Public Shared Function GetEncodingFromVR(vr As VR) As VREncoding
  overload: EvilDICOM.Core.Dictionaries.VRDictionary.GetEncodingFromVR*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EvilDICOM.Core.Dictionaries
  commentId: N:EvilDICOM.Core.Dictionaries
  isExternal: false
  name: EvilDICOM.Core.Dictionaries
  nameWithType: EvilDICOM.Core.Dictionaries
  fullName: EvilDICOM.Core.Dictionaries
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EvilDICOM.Core.Dictionaries.VRDictionary.GetVRFromAbbreviation*
  commentId: Overload:EvilDICOM.Core.Dictionaries.VRDictionary.GetVRFromAbbreviation
  isExternal: false
  name: GetVRFromAbbreviation
  nameWithType: VRDictionary.GetVRFromAbbreviation
  fullName: EvilDICOM.Core.Dictionaries.VRDictionary.GetVRFromAbbreviation
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EvilDICOM.Core.Enums.VR
  commentId: T:EvilDICOM.Core.Enums.VR
  parent: EvilDICOM.Core.Enums
  isExternal: false
  name: VR
  nameWithType: VR
  fullName: EvilDICOM.Core.Enums.VR
- uid: EvilDICOM.Core.Enums
  commentId: N:EvilDICOM.Core.Enums
  isExternal: false
  name: EvilDICOM.Core.Enums
  nameWithType: EvilDICOM.Core.Enums
  fullName: EvilDICOM.Core.Enums
- uid: EvilDICOM.Core.Dictionaries.VRDictionary.GetAbbreviationFromVR*
  commentId: Overload:EvilDICOM.Core.Dictionaries.VRDictionary.GetAbbreviationFromVR
  isExternal: false
  name: GetAbbreviationFromVR
  nameWithType: VRDictionary.GetAbbreviationFromVR
  fullName: EvilDICOM.Core.Dictionaries.VRDictionary.GetAbbreviationFromVR
- uid: EvilDICOM.Core.Dictionaries.VRDictionary.GetVRFromType*
  commentId: Overload:EvilDICOM.Core.Dictionaries.VRDictionary.GetVRFromType
  isExternal: false
  name: GetVRFromType
  nameWithType: VRDictionary.GetVRFromType
  fullName: EvilDICOM.Core.Dictionaries.VRDictionary.GetVRFromType
- uid: EvilDICOM.Core.Interfaces.IDICOMElement
  commentId: T:EvilDICOM.Core.Interfaces.IDICOMElement
  parent: EvilDICOM.Core.Interfaces
  isExternal: false
  name: IDICOMElement
  nameWithType: IDICOMElement
  fullName: EvilDICOM.Core.Interfaces.IDICOMElement
- uid: EvilDICOM.Core.Interfaces
  commentId: N:EvilDICOM.Core.Interfaces
  isExternal: false
  name: EvilDICOM.Core.Interfaces
  nameWithType: EvilDICOM.Core.Interfaces
  fullName: EvilDICOM.Core.Interfaces
- uid: Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: Type
- uid: EvilDICOM.Core.Dictionaries.VRDictionary.GetAbbreviationFromType*
  commentId: Overload:EvilDICOM.Core.Dictionaries.VRDictionary.GetAbbreviationFromType
  isExternal: false
  name: GetAbbreviationFromType
  nameWithType: VRDictionary.GetAbbreviationFromType
  fullName: EvilDICOM.Core.Dictionaries.VRDictionary.GetAbbreviationFromType
- uid: EvilDICOM.Core.Dictionaries.VRDictionary.GetEncodingFromVR*
  commentId: Overload:EvilDICOM.Core.Dictionaries.VRDictionary.GetEncodingFromVR
  isExternal: false
  name: GetEncodingFromVR
  nameWithType: VRDictionary.GetEncodingFromVR
  fullName: EvilDICOM.Core.Dictionaries.VRDictionary.GetEncodingFromVR
- uid: EvilDICOM.Core.Enums.VREncoding
  commentId: T:EvilDICOM.Core.Enums.VREncoding
  parent: EvilDICOM.Core.Enums
  isExternal: false
  name: VREncoding
  nameWithType: VREncoding
  fullName: EvilDICOM.Core.Enums.VREncoding
