### YamlMime:ManagedReference
items:
- uid: EvilDICOM.Network.DICOMSCU
  commentId: T:EvilDICOM.Network.DICOMSCU
  id: DICOMSCU
  parent: EvilDICOM.Network
  children:
  - EvilDICOM.Network.DICOMSCU.#ctor(EvilDICOM.Network.Entity)
  - EvilDICOM.Network.DICOMSCU.GenerateCStoreRequest(EvilDICOM.Core.DICOMObject,System.UInt16)
  - EvilDICOM.Network.DICOMSCU.GetResponse(EvilDICOM.Network.DIMSE.CFindRequest,EvilDICOM.Network.Entity)
  - EvilDICOM.Network.DICOMSCU.GetResponse(EvilDICOM.Network.DIMSE.CMoveRequest,EvilDICOM.Network.Entity)
  - EvilDICOM.Network.DICOMSCU.Ping(EvilDICOM.Network.Entity,System.Int32)
  - EvilDICOM.Network.DICOMSCU.SendCMoveImage(EvilDICOM.Network.Entity,EvilDICOM.Network.DIMSE.IOD.CFindImageIOD,System.String,System.UInt16@)
  - EvilDICOM.Network.DICOMSCU.SendCMoveImage(EvilDICOM.Network.Entity,System.String,System.String,System.String,System.UInt16@)
  - EvilDICOM.Network.DICOMSCU.SendMessage(EvilDICOM.Network.DIMSE.AbstractDIMSERequest,EvilDICOM.Network.Entity)
  langs:
  - csharp
  - vb
  name: DICOMSCU
  nameWithType: DICOMSCU
  fullName: EvilDICOM.Network.DICOMSCU
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: DICOMSCU
    path: ../EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
    startLine: 16
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: 'public class DICOMSCU : DICOMServiceClass'
    content.vb: >-
      Public Class DICOMSCU
          Inherits DICOMServiceClass
  inheritance:
  - System.Object
  - EvilDICOM.Network.DICOMServiceClass
  inheritedMembers:
  - EvilDICOM.Network.DICOMServiceClass.AssociationService
  - EvilDICOM.Network.DICOMServiceClass.DIMSEService
  - EvilDICOM.Network.DICOMServiceClass.ApplicationEntity
  - EvilDICOM.Network.DICOMServiceClass.SupportedTransferSyntaxes
  - EvilDICOM.Network.DICOMServiceClass.SupportedAbstractSyntaxes
  - EvilDICOM.Network.DICOMServiceClass.Logger
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EvilDICOM.Network.DICOMSCU.#ctor(EvilDICOM.Network.Entity)
  commentId: M:EvilDICOM.Network.DICOMSCU.#ctor(EvilDICOM.Network.Entity)
  id: '#ctor(EvilDICOM.Network.Entity)'
  parent: EvilDICOM.Network.DICOMSCU
  langs:
  - csharp
  - vb
  name: DICOMSCU(Entity)
  nameWithType: DICOMSCU.DICOMSCU(Entity)
  fullName: EvilDICOM.Network.DICOMSCU.DICOMSCU(EvilDICOM.Network.Entity)
  type: Constructor
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: .ctor
    path: ../EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
    startLine: 18
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public DICOMSCU(Entity ae)
    parameters:
    - id: ae
      type: EvilDICOM.Network.Entity
    content.vb: Public Sub New(ae As Entity)
  overload: EvilDICOM.Network.DICOMSCU.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.DICOMSCU.SendMessage(EvilDICOM.Network.DIMSE.AbstractDIMSERequest,EvilDICOM.Network.Entity)
  commentId: M:EvilDICOM.Network.DICOMSCU.SendMessage(EvilDICOM.Network.DIMSE.AbstractDIMSERequest,EvilDICOM.Network.Entity)
  id: SendMessage(EvilDICOM.Network.DIMSE.AbstractDIMSERequest,EvilDICOM.Network.Entity)
  parent: EvilDICOM.Network.DICOMSCU
  langs:
  - csharp
  - vb
  name: SendMessage(AbstractDIMSERequest, Entity)
  nameWithType: DICOMSCU.SendMessage(AbstractDIMSERequest, Entity)
  fullName: EvilDICOM.Network.DICOMSCU.SendMessage(EvilDICOM.Network.DIMSE.AbstractDIMSERequest, EvilDICOM.Network.Entity)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: SendMessage
    path: ../EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
    startLine: 20
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public void SendMessage(AbstractDIMSERequest dimse, Entity ae)
    parameters:
    - id: dimse
      type: EvilDICOM.Network.DIMSE.AbstractDIMSERequest
    - id: ae
      type: EvilDICOM.Network.Entity
    content.vb: Public Sub SendMessage(dimse As AbstractDIMSERequest, ae As Entity)
  overload: EvilDICOM.Network.DICOMSCU.SendMessage*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.DICOMSCU.GetResponse(EvilDICOM.Network.DIMSE.CFindRequest,EvilDICOM.Network.Entity)
  commentId: M:EvilDICOM.Network.DICOMSCU.GetResponse(EvilDICOM.Network.DIMSE.CFindRequest,EvilDICOM.Network.Entity)
  id: GetResponse(EvilDICOM.Network.DIMSE.CFindRequest,EvilDICOM.Network.Entity)
  parent: EvilDICOM.Network.DICOMSCU
  langs:
  - csharp
  - vb
  name: GetResponse(CFindRequest, Entity)
  nameWithType: DICOMSCU.GetResponse(CFindRequest, Entity)
  fullName: EvilDICOM.Network.DICOMSCU.GetResponse(EvilDICOM.Network.DIMSE.CFindRequest, EvilDICOM.Network.Entity)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: GetResponse
    path: ../EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
    startLine: 29
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public IEnumerable<CFindResponse> GetResponse(CFindRequest cFind, Entity ae)
    parameters:
    - id: cFind
      type: EvilDICOM.Network.DIMSE.CFindRequest
    - id: ae
      type: EvilDICOM.Network.Entity
    return:
      type: IEnumerable{EvilDICOM.Network.DIMSE.CFindResponse}
    content.vb: Public Function GetResponse(cFind As CFindRequest, ae As Entity) As IEnumerable(Of CFindResponse)
  overload: EvilDICOM.Network.DICOMSCU.GetResponse*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.DICOMSCU.GetResponse(EvilDICOM.Network.DIMSE.CMoveRequest,EvilDICOM.Network.Entity)
  commentId: M:EvilDICOM.Network.DICOMSCU.GetResponse(EvilDICOM.Network.DIMSE.CMoveRequest,EvilDICOM.Network.Entity)
  id: GetResponse(EvilDICOM.Network.DIMSE.CMoveRequest,EvilDICOM.Network.Entity)
  parent: EvilDICOM.Network.DICOMSCU
  langs:
  - csharp
  - vb
  name: GetResponse(CMoveRequest, Entity)
  nameWithType: DICOMSCU.GetResponse(CMoveRequest, Entity)
  fullName: EvilDICOM.Network.DICOMSCU.GetResponse(EvilDICOM.Network.DIMSE.CMoveRequest, EvilDICOM.Network.Entity)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: GetResponse
    path: ../EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
    startLine: 51
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public IEnumerable<CMoveResponse> GetResponse(CMoveRequest cMove, Entity ae)
    parameters:
    - id: cMove
      type: EvilDICOM.Network.DIMSE.CMoveRequest
    - id: ae
      type: EvilDICOM.Network.Entity
    return:
      type: IEnumerable{EvilDICOM.Network.DIMSE.CMoveResponse}
    content.vb: Public Function GetResponse(cMove As CMoveRequest, ae As Entity) As IEnumerable(Of CMoveResponse)
  overload: EvilDICOM.Network.DICOMSCU.GetResponse*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.DICOMSCU.Ping(EvilDICOM.Network.Entity,System.Int32)
  commentId: M:EvilDICOM.Network.DICOMSCU.Ping(EvilDICOM.Network.Entity,System.Int32)
  id: Ping(EvilDICOM.Network.Entity,System.Int32)
  parent: EvilDICOM.Network.DICOMSCU
  langs:
  - csharp
  - vb
  name: Ping(Entity, Int32)
  nameWithType: DICOMSCU.Ping(Entity, Int32)
  fullName: EvilDICOM.Network.DICOMSCU.Ping(EvilDICOM.Network.Entity, System.Int32)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: Ping
    path: ../EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
    startLine: 79
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  summary: "\nSends a CEcho request to the input entity\n"
  example: []
  syntax:
    content: public bool Ping(Entity ae, int msTimeout = 3000)
    parameters:
    - id: ae
      type: EvilDICOM.Network.Entity
      description: the entity to send the request
    - id: msTimeout
      type: System.Int32
      description: how long to wait in milliseconds before a timeout
    return:
      type: System.Boolean
      description: true if success, false if failure
    content.vb: Public Function Ping(ae As Entity, msTimeout As Integer = 3000) As Boolean
  overload: EvilDICOM.Network.DICOMSCU.Ping*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.DICOMSCU.GenerateCStoreRequest(EvilDICOM.Core.DICOMObject,System.UInt16)
  commentId: M:EvilDICOM.Network.DICOMSCU.GenerateCStoreRequest(EvilDICOM.Core.DICOMObject,System.UInt16)
  id: GenerateCStoreRequest(EvilDICOM.Core.DICOMObject,System.UInt16)
  parent: EvilDICOM.Network.DICOMSCU
  langs:
  - csharp
  - vb
  name: GenerateCStoreRequest(DICOMObject, UInt16)
  nameWithType: DICOMSCU.GenerateCStoreRequest(DICOMObject, UInt16)
  fullName: EvilDICOM.Network.DICOMSCU.GenerateCStoreRequest(EvilDICOM.Core.DICOMObject, System.UInt16)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: GenerateCStoreRequest
    path: ../EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
    startLine: 93
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public CStoreRequest GenerateCStoreRequest(DICOMObject toSend, ushort messageId = null)
    parameters:
    - id: toSend
      type: EvilDICOM.Core.DICOMObject
    - id: messageId
      type: System.UInt16
    return:
      type: EvilDICOM.Network.DIMSE.CStoreRequest
    content.vb: Public Function GenerateCStoreRequest(toSend As DICOMObject, messageId As UShort = Nothing) As CStoreRequest
  overload: EvilDICOM.Network.DICOMSCU.GenerateCStoreRequest*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.DICOMSCU.SendCMoveImage(EvilDICOM.Network.Entity,EvilDICOM.Network.DIMSE.IOD.CFindImageIOD,System.String,System.UInt16@)
  commentId: M:EvilDICOM.Network.DICOMSCU.SendCMoveImage(EvilDICOM.Network.Entity,EvilDICOM.Network.DIMSE.IOD.CFindImageIOD,System.String,System.UInt16@)
  id: SendCMoveImage(EvilDICOM.Network.Entity,EvilDICOM.Network.DIMSE.IOD.CFindImageIOD,System.String,System.UInt16@)
  parent: EvilDICOM.Network.DICOMSCU
  langs:
  - csharp
  - vb
  name: SendCMoveImage(Entity, CFindImageIOD, String, ref UInt16)
  nameWithType: DICOMSCU.SendCMoveImage(Entity, CFindImageIOD, String, ref UInt16)
  fullName: EvilDICOM.Network.DICOMSCU.SendCMoveImage(EvilDICOM.Network.Entity, EvilDICOM.Network.DIMSE.IOD.CFindImageIOD, System.String, ref System.UInt16)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: SendCMoveImage
    path: ../EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
    startLine: 116
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  summary: "\nEmits a CMove operation to an entity which moves an image from the entity to the specified AETitle\n"
  example: []
  syntax:
    content: public CMoveResponse SendCMoveImage(Entity daemon, CFindImageIOD iod, string toAETite, ref ushort msgId)
    parameters:
    - id: daemon
      type: EvilDICOM.Network.Entity
    - id: iod
      type: EvilDICOM.Network.DIMSE.IOD.CFindImageIOD
    - id: toAETite
      type: System.String
      description: the entity title which will receive the image
    - id: msgId
      type: System.UInt16
      description: the message id
    return:
      type: EvilDICOM.Network.DIMSE.CMoveResponse
      description: the move response
    content.vb: Public Function SendCMoveImage(daemon As Entity, iod As CFindImageIOD, toAETite As String, ByRef msgId As UShort) As CMoveResponse
  overload: EvilDICOM.Network.DICOMSCU.SendCMoveImage*
  nameWithType.vb: DICOMSCU.SendCMoveImage(Entity, CFindImageIOD, String, ByRef UInt16)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EvilDICOM.Network.DICOMSCU.SendCMoveImage(EvilDICOM.Network.Entity, EvilDICOM.Network.DIMSE.IOD.CFindImageIOD, System.String, ByRef System.UInt16)
  name.vb: SendCMoveImage(Entity, CFindImageIOD, String, ByRef UInt16)
- uid: EvilDICOM.Network.DICOMSCU.SendCMoveImage(EvilDICOM.Network.Entity,System.String,System.String,System.String,System.UInt16@)
  commentId: M:EvilDICOM.Network.DICOMSCU.SendCMoveImage(EvilDICOM.Network.Entity,System.String,System.String,System.String,System.UInt16@)
  id: SendCMoveImage(EvilDICOM.Network.Entity,System.String,System.String,System.String,System.UInt16@)
  parent: EvilDICOM.Network.DICOMSCU
  langs:
  - csharp
  - vb
  name: SendCMoveImage(Entity, String, String, String, ref UInt16)
  nameWithType: DICOMSCU.SendCMoveImage(Entity, String, String, String, ref UInt16)
  fullName: EvilDICOM.Network.DICOMSCU.SendCMoveImage(EvilDICOM.Network.Entity, System.String, System.String, System.String, ref System.UInt16)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: SendCMoveImage
    path: ../EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
    startLine: 147
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  summary: "\nEmits a CMove operation to an entity which moves an image from the entity to the specified AETitle\n"
  example: []
  syntax:
    content: public CMoveResponse SendCMoveImage(Entity daemon, string patientId, string sopInstanceUid, string toAETite, ref ushort msgId)
    parameters:
    - id: daemon
      type: EvilDICOM.Network.Entity
    - id: patientId
      type: System.String
      description: the patient id of the image
    - id: sopInstanceUid
      type: System.String
    - id: toAETite
      type: System.String
      description: the entity title which will receive the image
    - id: msgId
      type: System.UInt16
      description: the message id
    return:
      type: EvilDICOM.Network.DIMSE.CMoveResponse
      description: the move response
    content.vb: Public Function SendCMoveImage(daemon As Entity, patientId As String, sopInstanceUid As String, toAETite As String, ByRef msgId As UShort) As CMoveResponse
  overload: EvilDICOM.Network.DICOMSCU.SendCMoveImage*
  nameWithType.vb: DICOMSCU.SendCMoveImage(Entity, String, String, String, ByRef UInt16)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EvilDICOM.Network.DICOMSCU.SendCMoveImage(EvilDICOM.Network.Entity, System.String, System.String, System.String, ByRef System.UInt16)
  name.vb: SendCMoveImage(Entity, String, String, String, ByRef UInt16)
references:
- uid: EvilDICOM.Network
  commentId: N:EvilDICOM.Network
  isExternal: false
  name: EvilDICOM.Network
  nameWithType: EvilDICOM.Network
  fullName: EvilDICOM.Network
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EvilDICOM.Network.DICOMServiceClass
  commentId: T:EvilDICOM.Network.DICOMServiceClass
  parent: EvilDICOM.Network
  isExternal: false
  name: DICOMServiceClass
  nameWithType: DICOMServiceClass
  fullName: EvilDICOM.Network.DICOMServiceClass
- uid: EvilDICOM.Network.DICOMServiceClass.AssociationService
  commentId: P:EvilDICOM.Network.DICOMServiceClass.AssociationService
  parent: EvilDICOM.Network.DICOMServiceClass
  isExternal: false
  name: AssociationService
  nameWithType: DICOMServiceClass.AssociationService
  fullName: EvilDICOM.Network.DICOMServiceClass.AssociationService
- uid: EvilDICOM.Network.DICOMServiceClass.DIMSEService
  commentId: P:EvilDICOM.Network.DICOMServiceClass.DIMSEService
  parent: EvilDICOM.Network.DICOMServiceClass
  isExternal: false
  name: DIMSEService
  nameWithType: DICOMServiceClass.DIMSEService
  fullName: EvilDICOM.Network.DICOMServiceClass.DIMSEService
- uid: EvilDICOM.Network.DICOMServiceClass.ApplicationEntity
  commentId: P:EvilDICOM.Network.DICOMServiceClass.ApplicationEntity
  parent: EvilDICOM.Network.DICOMServiceClass
  isExternal: false
  name: ApplicationEntity
  nameWithType: DICOMServiceClass.ApplicationEntity
  fullName: EvilDICOM.Network.DICOMServiceClass.ApplicationEntity
- uid: EvilDICOM.Network.DICOMServiceClass.SupportedTransferSyntaxes
  commentId: P:EvilDICOM.Network.DICOMServiceClass.SupportedTransferSyntaxes
  parent: EvilDICOM.Network.DICOMServiceClass
  isExternal: false
  name: SupportedTransferSyntaxes
  nameWithType: DICOMServiceClass.SupportedTransferSyntaxes
  fullName: EvilDICOM.Network.DICOMServiceClass.SupportedTransferSyntaxes
- uid: EvilDICOM.Network.DICOMServiceClass.SupportedAbstractSyntaxes
  commentId: P:EvilDICOM.Network.DICOMServiceClass.SupportedAbstractSyntaxes
  parent: EvilDICOM.Network.DICOMServiceClass
  isExternal: false
  name: SupportedAbstractSyntaxes
  nameWithType: DICOMServiceClass.SupportedAbstractSyntaxes
  fullName: EvilDICOM.Network.DICOMServiceClass.SupportedAbstractSyntaxes
- uid: EvilDICOM.Network.DICOMServiceClass.Logger
  commentId: P:EvilDICOM.Network.DICOMServiceClass.Logger
  parent: EvilDICOM.Network.DICOMServiceClass
  isExternal: false
  name: Logger
  nameWithType: DICOMServiceClass.Logger
  fullName: EvilDICOM.Network.DICOMServiceClass.Logger
- uid: EvilDICOM.Network.DICOMSCU.#ctor*
  commentId: Overload:EvilDICOM.Network.DICOMSCU.#ctor
  isExternal: false
  name: DICOMSCU
  nameWithType: DICOMSCU.DICOMSCU
  fullName: EvilDICOM.Network.DICOMSCU.DICOMSCU
- uid: EvilDICOM.Network.Entity
  commentId: T:EvilDICOM.Network.Entity
  parent: EvilDICOM.Network
  isExternal: false
  name: Entity
  nameWithType: Entity
  fullName: EvilDICOM.Network.Entity
- uid: EvilDICOM.Network.DICOMSCU.SendMessage*
  commentId: Overload:EvilDICOM.Network.DICOMSCU.SendMessage
  isExternal: false
  name: SendMessage
  nameWithType: DICOMSCU.SendMessage
  fullName: EvilDICOM.Network.DICOMSCU.SendMessage
- uid: EvilDICOM.Network.DIMSE.AbstractDIMSERequest
  commentId: T:EvilDICOM.Network.DIMSE.AbstractDIMSERequest
  parent: EvilDICOM.Network.DIMSE
  isExternal: false
  name: AbstractDIMSERequest
  nameWithType: AbstractDIMSERequest
  fullName: EvilDICOM.Network.DIMSE.AbstractDIMSERequest
- uid: EvilDICOM.Network.DIMSE
  commentId: N:EvilDICOM.Network.DIMSE
  isExternal: false
  name: EvilDICOM.Network.DIMSE
  nameWithType: EvilDICOM.Network.DIMSE
  fullName: EvilDICOM.Network.DIMSE
- uid: EvilDICOM.Network.DICOMSCU.GetResponse*
  commentId: Overload:EvilDICOM.Network.DICOMSCU.GetResponse
  isExternal: false
  name: GetResponse
  nameWithType: DICOMSCU.GetResponse
  fullName: EvilDICOM.Network.DICOMSCU.GetResponse
- uid: EvilDICOM.Network.DIMSE.CFindRequest
  commentId: T:EvilDICOM.Network.DIMSE.CFindRequest
  parent: EvilDICOM.Network.DIMSE
  isExternal: false
  name: CFindRequest
  nameWithType: CFindRequest
  fullName: EvilDICOM.Network.DIMSE.CFindRequest
- uid: IEnumerable{EvilDICOM.Network.DIMSE.CFindResponse}
  commentId: '!:IEnumerable{EvilDICOM.Network.DIMSE.CFindResponse}'
  definition: IEnumerable`1
  name: IEnumerable<CFindResponse>
  nameWithType: IEnumerable<CFindResponse>
  fullName: IEnumerable<EvilDICOM.Network.DIMSE.CFindResponse>
  nameWithType.vb: IEnumerable(Of CFindResponse)
  fullName.vb: IEnumerable(Of EvilDICOM.Network.DIMSE.CFindResponse)
  name.vb: IEnumerable(Of CFindResponse)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EvilDICOM.Network.DIMSE.CFindResponse
    name: CFindResponse
    nameWithType: CFindResponse
    fullName: EvilDICOM.Network.DIMSE.CFindResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EvilDICOM.Network.DIMSE.CFindResponse
    name: CFindResponse
    nameWithType: CFindResponse
    fullName: EvilDICOM.Network.DIMSE.CFindResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Network.DIMSE.CMoveRequest
  commentId: T:EvilDICOM.Network.DIMSE.CMoveRequest
  parent: EvilDICOM.Network.DIMSE
  isExternal: false
  name: CMoveRequest
  nameWithType: CMoveRequest
  fullName: EvilDICOM.Network.DIMSE.CMoveRequest
- uid: IEnumerable{EvilDICOM.Network.DIMSE.CMoveResponse}
  commentId: '!:IEnumerable{EvilDICOM.Network.DIMSE.CMoveResponse}'
  definition: IEnumerable`1
  name: IEnumerable<CMoveResponse>
  nameWithType: IEnumerable<CMoveResponse>
  fullName: IEnumerable<EvilDICOM.Network.DIMSE.CMoveResponse>
  nameWithType.vb: IEnumerable(Of CMoveResponse)
  fullName.vb: IEnumerable(Of EvilDICOM.Network.DIMSE.CMoveResponse)
  name.vb: IEnumerable(Of CMoveResponse)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EvilDICOM.Network.DIMSE.CMoveResponse
    name: CMoveResponse
    nameWithType: CMoveResponse
    fullName: EvilDICOM.Network.DIMSE.CMoveResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EvilDICOM.Network.DIMSE.CMoveResponse
    name: CMoveResponse
    nameWithType: CMoveResponse
    fullName: EvilDICOM.Network.DIMSE.CMoveResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Network.DICOMSCU.Ping*
  commentId: Overload:EvilDICOM.Network.DICOMSCU.Ping
  isExternal: false
  name: Ping
  nameWithType: DICOMSCU.Ping
  fullName: EvilDICOM.Network.DICOMSCU.Ping
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EvilDICOM.Network.DICOMSCU.GenerateCStoreRequest*
  commentId: Overload:EvilDICOM.Network.DICOMSCU.GenerateCStoreRequest
  isExternal: false
  name: GenerateCStoreRequest
  nameWithType: DICOMSCU.GenerateCStoreRequest
  fullName: EvilDICOM.Network.DICOMSCU.GenerateCStoreRequest
- uid: EvilDICOM.Core.DICOMObject
  commentId: T:EvilDICOM.Core.DICOMObject
  parent: EvilDICOM.Core
  isExternal: false
  name: DICOMObject
  nameWithType: DICOMObject
  fullName: EvilDICOM.Core.DICOMObject
- uid: System.UInt16
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: EvilDICOM.Network.DIMSE.CStoreRequest
  commentId: T:EvilDICOM.Network.DIMSE.CStoreRequest
  parent: EvilDICOM.Network.DIMSE
  isExternal: false
  name: CStoreRequest
  nameWithType: CStoreRequest
  fullName: EvilDICOM.Network.DIMSE.CStoreRequest
- uid: EvilDICOM.Core
  commentId: N:EvilDICOM.Core
  isExternal: false
  name: EvilDICOM.Core
  nameWithType: EvilDICOM.Core
  fullName: EvilDICOM.Core
- uid: EvilDICOM.Network.DICOMSCU.SendCMoveImage*
  commentId: Overload:EvilDICOM.Network.DICOMSCU.SendCMoveImage
  isExternal: false
  name: SendCMoveImage
  nameWithType: DICOMSCU.SendCMoveImage
  fullName: EvilDICOM.Network.DICOMSCU.SendCMoveImage
- uid: EvilDICOM.Network.DIMSE.IOD.CFindImageIOD
  commentId: T:EvilDICOM.Network.DIMSE.IOD.CFindImageIOD
  parent: EvilDICOM.Network.DIMSE.IOD
  isExternal: false
  name: CFindImageIOD
  nameWithType: CFindImageIOD
  fullName: EvilDICOM.Network.DIMSE.IOD.CFindImageIOD
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EvilDICOM.Network.DIMSE.CMoveResponse
  commentId: T:EvilDICOM.Network.DIMSE.CMoveResponse
  parent: EvilDICOM.Network.DIMSE
  isExternal: false
  name: CMoveResponse
  nameWithType: CMoveResponse
  fullName: EvilDICOM.Network.DIMSE.CMoveResponse
- uid: EvilDICOM.Network.DIMSE.IOD
  commentId: N:EvilDICOM.Network.DIMSE.IOD
  isExternal: false
  name: EvilDICOM.Network.DIMSE.IOD
  nameWithType: EvilDICOM.Network.DIMSE.IOD
  fullName: EvilDICOM.Network.DIMSE.IOD
