items:
- uid: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer
  id: PatientIdAnonymizer
  parent: EvilDICOM.Anonymization.Anonymizers
  children:
  - EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.#ctor(System.String,System.String,System.String)
  - EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.Anonymize(EvilDICOM.Core.DICOMObject)
  - EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.FirstName
  - EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.Id
  - EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.LastName
  langs:
  - csharp
  - vb
  name: PatientIdAnonymizer
  fullName: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Anonymization/Anonymizers/PatientIdAnonymizer.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Anonymization/Anonymizers/PatientIdAnonymizer.cs
    startLine: 14
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Anonymization.Anonymizers
  summary: Replaces patient identifier with specified name and id
  example: []
  syntax:
    content: 'public class PatientIdAnonymizer : IAnonymizer'
    content.vb: Public Class PatientIdAnonymizer Implements IAnonymizer
  inheritance:
  - System.Object
  implements:
  - EvilDICOM.Anonymization.IAnonymizer
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.FirstName
  id: FirstName
  parent: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer
  langs:
  - csharp
  - vb
  name: FirstName
  fullName: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.FirstName
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Anonymization/Anonymizers/PatientIdAnonymizer.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Anonymization/Anonymizers/PatientIdAnonymizer.cs
    startLine: 19
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Anonymization.Anonymizers
  summary: The first name to make the new patient Id
  example: []
  syntax:
    content: public string FirstName { get; set; }
    content.vb: Public Property FirstName As String
    parameters: []
    return:
      type: System.String
- uid: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.LastName
  id: LastName
  parent: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer
  langs:
  - csharp
  - vb
  name: LastName
  fullName: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.LastName
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Anonymization/Anonymizers/PatientIdAnonymizer.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Anonymization/Anonymizers/PatientIdAnonymizer.cs
    startLine: 23
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Anonymization.Anonymizers
  summary: The last name to make the new patient Id
  example: []
  syntax:
    content: public string LastName { get; set; }
    content.vb: Public Property LastName As String
    parameters: []
    return:
      type: System.String
- uid: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.Id
  id: Id
  parent: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer
  langs:
  - csharp
  - vb
  name: Id
  fullName: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.Id
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Anonymization/Anonymizers/PatientIdAnonymizer.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Anonymization/Anonymizers/PatientIdAnonymizer.cs
    startLine: 27
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Anonymization.Anonymizers
  summary: The new id for the anonymized file
  example: []
  syntax:
    content: public string Id { get; set; }
    content.vb: Public Property Id As String
    parameters: []
    return:
      type: System.String
- uid: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer
  langs:
  - csharp
  - vb
  name: PatientIdAnonymizer(String, String, String)
  fullName: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.PatientIdAnonymizer(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Anonymization/Anonymizers/PatientIdAnonymizer.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Anonymization/Anonymizers/PatientIdAnonymizer.cs
    startLine: 29
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Anonymization.Anonymizers
  syntax:
    content: public PatientIdAnonymizer(string firstName, string lastName, string id)
    content.vb: Public Sub New(firstName As String, lastName As String, id As String)
    parameters:
    - id: firstName
      type: System.String
    - id: lastName
      type: System.String
    - id: id
      type: System.String
- uid: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.Anonymize(EvilDICOM.Core.DICOMObject)
  id: Anonymize(EvilDICOM.Core.DICOMObject)
  parent: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer
  langs:
  - csharp
  - vb
  name: Anonymize(DICOMObject)
  fullName: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.Anonymize(EvilDICOM.Core.DICOMObject)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Anonymization/Anonymizers/PatientIdAnonymizer.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Anonymization/Anonymizers/PatientIdAnonymizer.cs
    startLine: 36
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Anonymization.Anonymizers
  syntax:
    content: public void Anonymize(DICOMObject d)
    content.vb: Public Sub Anonymize(d As DICOMObject)
    parameters:
    - id: d
      type: EvilDICOM.Core.DICOMObject
references:
- uid: EvilDICOM.Anonymization.Anonymizers
  isExternal: false
  name: EvilDICOM.Anonymization.Anonymizers
  fullName: EvilDICOM.Anonymization.Anonymizers
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: EvilDICOM.Anonymization.IAnonymizer
  parent: EvilDICOM.Anonymization
  isExternal: false
  name: IAnonymizer
  fullName: EvilDICOM.Anonymization.IAnonymizer
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: EvilDICOM.Anonymization
  isExternal: false
  name: EvilDICOM.Anonymization
  fullName: EvilDICOM.Anonymization
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: EvilDICOM.Core.DICOMObject
  parent: EvilDICOM.Core
  isExternal: false
  name: DICOMObject
  fullName: EvilDICOM.Core.DICOMObject
- uid: EvilDICOM.Core
  isExternal: false
  name: EvilDICOM.Core
  fullName: EvilDICOM.Core
