### YamlMime:ManagedReference
items:
- uid: EvilDICOM.Core.IO.Writing.DICOMObjectWriter
  commentId: T:EvilDICOM.Core.IO.Writing.DICOMObjectWriter
  id: DICOMObjectWriter
  parent: EvilDICOM.Core.IO.Writing
  children:
  - EvilDICOM.Core.IO.Writing.DICOMObjectWriter.IsFileMetaGroup(EvilDICOM.Core.Interfaces.IDICOMElement)
  - EvilDICOM.Core.IO.Writing.DICOMObjectWriter.Write(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,EvilDICOM.Core.IO.Writing.DICOMWriteSettings,EvilDICOM.Core.DICOMObject,System.Boolean)
  - EvilDICOM.Core.IO.Writing.DICOMObjectWriter.WriteSameSyntax(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,EvilDICOM.Core.IO.Writing.DICOMWriteSettings,EvilDICOM.Core.DICOMObject,System.Boolean)
  langs:
  - csharp
  - vb
  name: DICOMObjectWriter
  nameWithType: DICOMObjectWriter
  fullName: EvilDICOM.Core.IO.Writing.DICOMObjectWriter
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Writing/DICOMObjectWriter.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: DICOMObjectWriter
    path: ../EvilDICOM/EvilDICOM/Core/IO/Writing/DICOMObjectWriter.cs
    startLine: 5
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Writing
  syntax:
    content: 'public class DICOMObjectWriter : object'
    content.vb: >-
      Public Class DICOMObjectWriter
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EvilDICOM.Core.IO.Writing.DICOMObjectWriter.IsFileMetaGroup(EvilDICOM.Core.Interfaces.IDICOMElement)
  commentId: M:EvilDICOM.Core.IO.Writing.DICOMObjectWriter.IsFileMetaGroup(EvilDICOM.Core.Interfaces.IDICOMElement)
  id: IsFileMetaGroup(EvilDICOM.Core.Interfaces.IDICOMElement)
  parent: EvilDICOM.Core.IO.Writing.DICOMObjectWriter
  langs:
  - csharp
  - vb
  name: IsFileMetaGroup(IDICOMElement)
  nameWithType: DICOMObjectWriter.IsFileMetaGroup(IDICOMElement)
  fullName: EvilDICOM.Core.IO.Writing.DICOMObjectWriter.IsFileMetaGroup(EvilDICOM.Core.Interfaces.IDICOMElement)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Writing/DICOMObjectWriter.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: IsFileMetaGroup
    path: ../EvilDICOM/EvilDICOM/Core/IO/Writing/DICOMObjectWriter.cs
    startLine: 7
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Writing
  syntax:
    content: public static bool IsFileMetaGroup(IDICOMElement el)
    parameters:
    - id: el
      type: EvilDICOM.Core.Interfaces.IDICOMElement
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsFileMetaGroup(el As IDICOMElement) As Boolean
  overload: EvilDICOM.Core.IO.Writing.DICOMObjectWriter.IsFileMetaGroup*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Core.IO.Writing.DICOMObjectWriter.Write(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,EvilDICOM.Core.IO.Writing.DICOMWriteSettings,EvilDICOM.Core.DICOMObject,System.Boolean)
  commentId: M:EvilDICOM.Core.IO.Writing.DICOMObjectWriter.Write(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,EvilDICOM.Core.IO.Writing.DICOMWriteSettings,EvilDICOM.Core.DICOMObject,System.Boolean)
  id: Write(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,EvilDICOM.Core.IO.Writing.DICOMWriteSettings,EvilDICOM.Core.DICOMObject,System.Boolean)
  parent: EvilDICOM.Core.IO.Writing.DICOMObjectWriter
  langs:
  - csharp
  - vb
  name: Write(DICOMBinaryWriter, DICOMWriteSettings, DICOMObject, Boolean)
  nameWithType: DICOMObjectWriter.Write(DICOMBinaryWriter, DICOMWriteSettings, DICOMObject, Boolean)
  fullName: EvilDICOM.Core.IO.Writing.DICOMObjectWriter.Write(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter, EvilDICOM.Core.IO.Writing.DICOMWriteSettings, EvilDICOM.Core.DICOMObject, System.Boolean)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Writing/DICOMObjectWriter.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: Write
    path: ../EvilDICOM/EvilDICOM/Core/IO/Writing/DICOMObjectWriter.cs
    startLine: 12
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Writing
  syntax:
    content: public static void Write(DICOMBinaryWriter dw, DICOMWriteSettings settings, DICOMObject d, bool isSequenceItem = false)
    parameters:
    - id: dw
      type: EvilDICOM.Core.IO.Writing.DICOMBinaryWriter
    - id: settings
      type: EvilDICOM.Core.IO.Writing.DICOMWriteSettings
    - id: d
      type: EvilDICOM.Core.DICOMObject
    - id: isSequenceItem
      type: System.Boolean
    content.vb: Public Shared Sub Write(dw As DICOMBinaryWriter, settings As DICOMWriteSettings, d As DICOMObject, isSequenceItem As Boolean = False)
  overload: EvilDICOM.Core.IO.Writing.DICOMObjectWriter.Write*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Core.IO.Writing.DICOMObjectWriter.WriteSameSyntax(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,EvilDICOM.Core.IO.Writing.DICOMWriteSettings,EvilDICOM.Core.DICOMObject,System.Boolean)
  commentId: M:EvilDICOM.Core.IO.Writing.DICOMObjectWriter.WriteSameSyntax(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,EvilDICOM.Core.IO.Writing.DICOMWriteSettings,EvilDICOM.Core.DICOMObject,System.Boolean)
  id: WriteSameSyntax(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,EvilDICOM.Core.IO.Writing.DICOMWriteSettings,EvilDICOM.Core.DICOMObject,System.Boolean)
  parent: EvilDICOM.Core.IO.Writing.DICOMObjectWriter
  langs:
  - csharp
  - vb
  name: WriteSameSyntax(DICOMBinaryWriter, DICOMWriteSettings, DICOMObject, Boolean)
  nameWithType: DICOMObjectWriter.WriteSameSyntax(DICOMBinaryWriter, DICOMWriteSettings, DICOMObject, Boolean)
  fullName: EvilDICOM.Core.IO.Writing.DICOMObjectWriter.WriteSameSyntax(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter, EvilDICOM.Core.IO.Writing.DICOMWriteSettings, EvilDICOM.Core.DICOMObject, System.Boolean)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Writing/DICOMObjectWriter.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: WriteSameSyntax
    path: ../EvilDICOM/EvilDICOM/Core/IO/Writing/DICOMObjectWriter.cs
    startLine: 38
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Writing
  summary: "\nIgnores the rule of writing metadata in explicit VR little endian and instead writes all elements with the passed in syntax\n"
  example: []
  syntax:
    content: public static void WriteSameSyntax(DICOMBinaryWriter dw, DICOMWriteSettings settings, DICOMObject d, bool isSequenceItem = false)
    parameters:
    - id: dw
      type: EvilDICOM.Core.IO.Writing.DICOMBinaryWriter
      description: ''
    - id: settings
      type: EvilDICOM.Core.IO.Writing.DICOMWriteSettings
      description: ''
    - id: d
      type: EvilDICOM.Core.DICOMObject
      description: ''
    - id: isSequenceItem
      type: System.Boolean
      description: ''
    content.vb: Public Shared Sub WriteSameSyntax(dw As DICOMBinaryWriter, settings As DICOMWriteSettings, d As DICOMObject, isSequenceItem As Boolean = False)
  overload: EvilDICOM.Core.IO.Writing.DICOMObjectWriter.WriteSameSyntax*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EvilDICOM.Core.IO.Writing
  commentId: N:EvilDICOM.Core.IO.Writing
  isExternal: false
  name: EvilDICOM.Core.IO.Writing
  nameWithType: EvilDICOM.Core.IO.Writing
  fullName: EvilDICOM.Core.IO.Writing
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EvilDICOM.Core.IO.Writing.DICOMObjectWriter.IsFileMetaGroup*
  commentId: Overload:EvilDICOM.Core.IO.Writing.DICOMObjectWriter.IsFileMetaGroup
  isExternal: false
  name: IsFileMetaGroup
  nameWithType: DICOMObjectWriter.IsFileMetaGroup
  fullName: EvilDICOM.Core.IO.Writing.DICOMObjectWriter.IsFileMetaGroup
- uid: EvilDICOM.Core.Interfaces.IDICOMElement
  commentId: T:EvilDICOM.Core.Interfaces.IDICOMElement
  parent: EvilDICOM.Core.Interfaces
  isExternal: false
  name: IDICOMElement
  nameWithType: IDICOMElement
  fullName: EvilDICOM.Core.Interfaces.IDICOMElement
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EvilDICOM.Core.Interfaces
  commentId: N:EvilDICOM.Core.Interfaces
  isExternal: false
  name: EvilDICOM.Core.Interfaces
  nameWithType: EvilDICOM.Core.Interfaces
  fullName: EvilDICOM.Core.Interfaces
- uid: EvilDICOM.Core.IO.Writing.DICOMObjectWriter.Write*
  commentId: Overload:EvilDICOM.Core.IO.Writing.DICOMObjectWriter.Write
  isExternal: false
  name: Write
  nameWithType: DICOMObjectWriter.Write
  fullName: EvilDICOM.Core.IO.Writing.DICOMObjectWriter.Write
- uid: EvilDICOM.Core.IO.Writing.DICOMBinaryWriter
  commentId: T:EvilDICOM.Core.IO.Writing.DICOMBinaryWriter
  parent: EvilDICOM.Core.IO.Writing
  isExternal: false
  name: DICOMBinaryWriter
  nameWithType: DICOMBinaryWriter
  fullName: EvilDICOM.Core.IO.Writing.DICOMBinaryWriter
- uid: EvilDICOM.Core.IO.Writing.DICOMWriteSettings
  commentId: T:EvilDICOM.Core.IO.Writing.DICOMWriteSettings
  parent: EvilDICOM.Core.IO.Writing
  isExternal: false
  name: DICOMWriteSettings
  nameWithType: DICOMWriteSettings
  fullName: EvilDICOM.Core.IO.Writing.DICOMWriteSettings
- uid: EvilDICOM.Core.DICOMObject
  commentId: T:EvilDICOM.Core.DICOMObject
  parent: EvilDICOM.Core
  isExternal: false
  name: DICOMObject
  nameWithType: DICOMObject
  fullName: EvilDICOM.Core.DICOMObject
- uid: EvilDICOM.Core
  commentId: N:EvilDICOM.Core
  isExternal: false
  name: EvilDICOM.Core
  nameWithType: EvilDICOM.Core
  fullName: EvilDICOM.Core
- uid: EvilDICOM.Core.IO.Writing.DICOMObjectWriter.WriteSameSyntax*
  commentId: Overload:EvilDICOM.Core.IO.Writing.DICOMObjectWriter.WriteSameSyntax
  isExternal: false
  name: WriteSameSyntax
  nameWithType: DICOMObjectWriter.WriteSameSyntax
  fullName: EvilDICOM.Core.IO.Writing.DICOMObjectWriter.WriteSameSyntax
