### YamlMime:ManagedReference
items:
- uid: EvilDICOM.Core.Element.LongText
  commentId: T:EvilDICOM.Core.Element.LongText
  id: LongText
  parent: EvilDICOM.Core.Element
  children:
  - EvilDICOM.Core.Element.LongText.#ctor
  - EvilDICOM.Core.Element.LongText.#ctor(EvilDICOM.Core.Element.Tag,System.String)
  - EvilDICOM.Core.Element.LongText.Data
  langs:
  - csharp
  - vb
  name: LongText
  nameWithType: LongText
  fullName: EvilDICOM.Core.Element.LongText
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Element/LongText.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: LongText
    path: ../EvilDICOM/EvilDICOM/Core/Element/LongText.cs
    startLine: 8
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Element
  summary: "\nEncapsulates the LongText VR type\n"
  example: []
  syntax:
    content: 'public class LongText : AbstractElement<string>, IDICOMElement'
    content.vb: >-
      Public Class LongText
          Inherits AbstractElement(Of String)
          Implements IDICOMElement
  inheritance:
  - System.Object
  - EvilDICOM.Core.Element.AbstractElement{System.String}
  implements:
  - EvilDICOM.Core.Interfaces.IDICOMElement
  inheritedMembers:
  - EvilDICOM.Core.Element.AbstractElement{System.String}.VR
  - EvilDICOM.Core.Element.AbstractElement{System.String}.Data_
  - EvilDICOM.Core.Element.AbstractElement{System.String}.Tag
  - EvilDICOM.Core.Element.AbstractElement{System.String}.DatType
  - EvilDICOM.Core.Element.AbstractElement{System.String}.DData
  - EvilDICOM.Core.Element.AbstractElement{System.String}.DData_
  - EvilDICOM.Core.Element.AbstractElement{System.String}.ToString
  - EvilDICOM.Core.Element.AbstractElement{System.String}.SetData(System.String)
  - EvilDICOM.Core.Element.AbstractElement{System.String}.SetData(System.String[])
  - EvilDICOM.Core.Element.AbstractElement{System.String}.GetDataOrDefault
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EvilDICOM.Core.Element.LongText.#ctor
  commentId: M:EvilDICOM.Core.Element.LongText.#ctor
  id: '#ctor'
  parent: EvilDICOM.Core.Element.LongText
  langs:
  - csharp
  - vb
  name: LongText()
  nameWithType: LongText.LongText()
  fullName: EvilDICOM.Core.Element.LongText.LongText()
  type: Constructor
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Element/LongText.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: .ctor
    path: ../EvilDICOM/EvilDICOM/Core/Element/LongText.cs
    startLine: 10
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Element
  syntax:
    content: public LongText()
    content.vb: Public Sub New
  overload: EvilDICOM.Core.Element.LongText.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Core.Element.LongText.#ctor(EvilDICOM.Core.Element.Tag,System.String)
  commentId: M:EvilDICOM.Core.Element.LongText.#ctor(EvilDICOM.Core.Element.Tag,System.String)
  id: '#ctor(EvilDICOM.Core.Element.Tag,System.String)'
  parent: EvilDICOM.Core.Element.LongText
  langs:
  - csharp
  - vb
  name: LongText(Tag, String)
  nameWithType: LongText.LongText(Tag, String)
  fullName: EvilDICOM.Core.Element.LongText.LongText(EvilDICOM.Core.Element.Tag, System.String)
  type: Constructor
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Element/LongText.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: .ctor
    path: ../EvilDICOM/EvilDICOM/Core/Element/LongText.cs
    startLine: 15
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Element
  syntax:
    content: public LongText(Tag tag, string data)
    parameters:
    - id: tag
      type: EvilDICOM.Core.Element.Tag
    - id: data
      type: System.String
    content.vb: Public Sub New(tag As Tag, data As String)
  overload: EvilDICOM.Core.Element.LongText.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Core.Element.LongText.Data
  commentId: P:EvilDICOM.Core.Element.LongText.Data
  id: Data
  parent: EvilDICOM.Core.Element.LongText
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: LongText.Data
  fullName: EvilDICOM.Core.Element.LongText.Data
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Element/LongText.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: Data
    path: ../EvilDICOM/EvilDICOM/Core/Element/LongText.cs
    startLine: 25
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Element
  summary: "\nData overriden for enforcing length restriction\n"
  example: []
  syntax:
    content: public override string Data { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides Property Data As String
  overridden: EvilDICOM.Core.Element.AbstractElement{System.String}.Data
  overload: EvilDICOM.Core.Element.LongText.Data*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: EvilDICOM.Core.Element
  commentId: N:EvilDICOM.Core.Element
  isExternal: false
  name: EvilDICOM.Core.Element
  nameWithType: EvilDICOM.Core.Element
  fullName: EvilDICOM.Core.Element
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EvilDICOM.Core.Element.AbstractElement{System.String}
  commentId: T:EvilDICOM.Core.Element.AbstractElement{System.String}
  parent: EvilDICOM.Core.Element
  definition: EvilDICOM.Core.Element.AbstractElement`1
  name: AbstractElement<String>
  nameWithType: AbstractElement<String>
  fullName: EvilDICOM.Core.Element.AbstractElement<System.String>
  nameWithType.vb: AbstractElement(Of String)
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of System.String)
  name.vb: AbstractElement(Of String)
  spec.csharp:
  - uid: EvilDICOM.Core.Element.AbstractElement`1
    name: AbstractElement
    nameWithType: AbstractElement
    fullName: EvilDICOM.Core.Element.AbstractElement
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EvilDICOM.Core.Element.AbstractElement`1
    name: AbstractElement
    nameWithType: AbstractElement
    fullName: EvilDICOM.Core.Element.AbstractElement
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Core.Interfaces.IDICOMElement
  commentId: T:EvilDICOM.Core.Interfaces.IDICOMElement
  parent: EvilDICOM.Core.Interfaces
  isExternal: false
  name: IDICOMElement
  nameWithType: IDICOMElement
  fullName: EvilDICOM.Core.Interfaces.IDICOMElement
- uid: EvilDICOM.Core.Element.AbstractElement{System.String}.VR
  commentId: P:EvilDICOM.Core.Element.AbstractElement{System.String}.VR
  parent: EvilDICOM.Core.Element.AbstractElement{System.String}
  definition: EvilDICOM.Core.Element.AbstractElement`1.VR
  name: VR
  nameWithType: AbstractElement<String>.VR
  fullName: EvilDICOM.Core.Element.AbstractElement<System.String>.VR
  nameWithType.vb: AbstractElement(Of String).VR
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of System.String).VR
- uid: EvilDICOM.Core.Element.AbstractElement{System.String}.Data_
  commentId: P:EvilDICOM.Core.Element.AbstractElement{System.String}.Data_
  parent: EvilDICOM.Core.Element.AbstractElement{System.String}
  definition: EvilDICOM.Core.Element.AbstractElement`1.Data_
  name: Data_
  nameWithType: AbstractElement<String>.Data_
  fullName: EvilDICOM.Core.Element.AbstractElement<System.String>.Data_
  nameWithType.vb: AbstractElement(Of String).Data_
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of System.String).Data_
- uid: EvilDICOM.Core.Element.AbstractElement{System.String}.Tag
  commentId: P:EvilDICOM.Core.Element.AbstractElement{System.String}.Tag
  parent: EvilDICOM.Core.Element.AbstractElement{System.String}
  definition: EvilDICOM.Core.Element.AbstractElement`1.Tag
  name: Tag
  nameWithType: AbstractElement<String>.Tag
  fullName: EvilDICOM.Core.Element.AbstractElement<System.String>.Tag
  nameWithType.vb: AbstractElement(Of String).Tag
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of System.String).Tag
- uid: EvilDICOM.Core.Element.AbstractElement{System.String}.DatType
  commentId: P:EvilDICOM.Core.Element.AbstractElement{System.String}.DatType
  parent: EvilDICOM.Core.Element.AbstractElement{System.String}
  definition: EvilDICOM.Core.Element.AbstractElement`1.DatType
  name: DatType
  nameWithType: AbstractElement<String>.DatType
  fullName: EvilDICOM.Core.Element.AbstractElement<System.String>.DatType
  nameWithType.vb: AbstractElement(Of String).DatType
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of System.String).DatType
- uid: EvilDICOM.Core.Element.AbstractElement{System.String}.DData
  commentId: P:EvilDICOM.Core.Element.AbstractElement{System.String}.DData
  parent: EvilDICOM.Core.Element.AbstractElement{System.String}
  definition: EvilDICOM.Core.Element.AbstractElement`1.DData
  name: DData
  nameWithType: AbstractElement<String>.DData
  fullName: EvilDICOM.Core.Element.AbstractElement<System.String>.DData
  nameWithType.vb: AbstractElement(Of String).DData
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of System.String).DData
- uid: EvilDICOM.Core.Element.AbstractElement{System.String}.DData_
  commentId: P:EvilDICOM.Core.Element.AbstractElement{System.String}.DData_
  parent: EvilDICOM.Core.Element.AbstractElement{System.String}
  definition: EvilDICOM.Core.Element.AbstractElement`1.DData_
  name: DData_
  nameWithType: AbstractElement<String>.DData_
  fullName: EvilDICOM.Core.Element.AbstractElement<System.String>.DData_
  nameWithType.vb: AbstractElement(Of String).DData_
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of System.String).DData_
- uid: EvilDICOM.Core.Element.AbstractElement{System.String}.ToString
  commentId: M:EvilDICOM.Core.Element.AbstractElement{System.String}.ToString
  parent: EvilDICOM.Core.Element.AbstractElement{System.String}
  definition: EvilDICOM.Core.Element.AbstractElement`1.ToString
  name: ToString()
  nameWithType: AbstractElement<String>.ToString()
  fullName: EvilDICOM.Core.Element.AbstractElement<System.String>.ToString()
  nameWithType.vb: AbstractElement(Of String).ToString()
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of System.String).ToString()
  spec.csharp:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.ToString
    name: ToString
    nameWithType: AbstractElement<String>.ToString
    fullName: EvilDICOM.Core.Element.AbstractElement<System.String>.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.ToString
    name: ToString
    nameWithType: AbstractElement(Of String).ToString
    fullName: EvilDICOM.Core.Element.AbstractElement(Of System.String).ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Core.Element.AbstractElement{System.String}.SetData(System.String)
  commentId: M:EvilDICOM.Core.Element.AbstractElement{System.String}.SetData(System.String)
  parent: EvilDICOM.Core.Element.AbstractElement{System.String}
  definition: EvilDICOM.Core.Element.AbstractElement`1.SetData(`0)
  name: SetData(String)
  nameWithType: AbstractElement<String>.SetData(String)
  fullName: EvilDICOM.Core.Element.AbstractElement<System.String>.SetData(System.String)
  nameWithType.vb: AbstractElement(Of String).SetData(String)
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of System.String).SetData(System.String)
  spec.csharp:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.SetData(`0)
    name: SetData
    nameWithType: AbstractElement<String>.SetData
    fullName: EvilDICOM.Core.Element.AbstractElement<System.String>.SetData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.SetData(`0)
    name: SetData
    nameWithType: AbstractElement(Of String).SetData
    fullName: EvilDICOM.Core.Element.AbstractElement(Of System.String).SetData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Core.Element.AbstractElement{System.String}.SetData(System.String[])
  commentId: M:EvilDICOM.Core.Element.AbstractElement{System.String}.SetData(System.String[])
  parent: EvilDICOM.Core.Element.AbstractElement{System.String}
  definition: EvilDICOM.Core.Element.AbstractElement`1.SetData(`0[])
  name: SetData(String[])
  nameWithType: AbstractElement<String>.SetData(String[])
  fullName: EvilDICOM.Core.Element.AbstractElement<System.String>.SetData(System.String[])
  nameWithType.vb: AbstractElement(Of String).SetData(String())
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of System.String).SetData(System.String())
  name.vb: SetData(String())
  spec.csharp:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.SetData(`0[])
    name: SetData
    nameWithType: AbstractElement<String>.SetData
    fullName: EvilDICOM.Core.Element.AbstractElement<System.String>.SetData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.SetData(`0[])
    name: SetData
    nameWithType: AbstractElement(Of String).SetData
    fullName: EvilDICOM.Core.Element.AbstractElement(Of System.String).SetData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Core.Element.AbstractElement{System.String}.GetDataOrDefault
  commentId: M:EvilDICOM.Core.Element.AbstractElement{System.String}.GetDataOrDefault
  parent: EvilDICOM.Core.Element.AbstractElement{System.String}
  definition: EvilDICOM.Core.Element.AbstractElement`1.GetDataOrDefault
  name: GetDataOrDefault()
  nameWithType: AbstractElement<String>.GetDataOrDefault()
  fullName: EvilDICOM.Core.Element.AbstractElement<System.String>.GetDataOrDefault()
  nameWithType.vb: AbstractElement(Of String).GetDataOrDefault()
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of System.String).GetDataOrDefault()
  spec.csharp:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.GetDataOrDefault
    name: GetDataOrDefault
    nameWithType: AbstractElement<String>.GetDataOrDefault
    fullName: EvilDICOM.Core.Element.AbstractElement<System.String>.GetDataOrDefault
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.GetDataOrDefault
    name: GetDataOrDefault
    nameWithType: AbstractElement(Of String).GetDataOrDefault
    fullName: EvilDICOM.Core.Element.AbstractElement(Of System.String).GetDataOrDefault
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Core.Element.AbstractElement`1
  commentId: T:EvilDICOM.Core.Element.AbstractElement`1
  isExternal: false
  name: AbstractElement<T>
  nameWithType: AbstractElement<T>
  fullName: EvilDICOM.Core.Element.AbstractElement<T>
  nameWithType.vb: AbstractElement(Of T)
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of T)
  name.vb: AbstractElement(Of T)
  spec.csharp:
  - uid: EvilDICOM.Core.Element.AbstractElement`1
    name: AbstractElement
    nameWithType: AbstractElement
    fullName: EvilDICOM.Core.Element.AbstractElement
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EvilDICOM.Core.Element.AbstractElement`1
    name: AbstractElement
    nameWithType: AbstractElement
    fullName: EvilDICOM.Core.Element.AbstractElement
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Core.Interfaces
  commentId: N:EvilDICOM.Core.Interfaces
  isExternal: false
  name: EvilDICOM.Core.Interfaces
  nameWithType: EvilDICOM.Core.Interfaces
  fullName: EvilDICOM.Core.Interfaces
- uid: EvilDICOM.Core.Element.AbstractElement`1.VR
  commentId: P:EvilDICOM.Core.Element.AbstractElement`1.VR
  isExternal: false
  name: VR
  nameWithType: AbstractElement<T>.VR
  fullName: EvilDICOM.Core.Element.AbstractElement<T>.VR
  nameWithType.vb: AbstractElement(Of T).VR
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of T).VR
- uid: EvilDICOM.Core.Element.AbstractElement`1.Data_
  commentId: P:EvilDICOM.Core.Element.AbstractElement`1.Data_
  isExternal: false
  name: Data_
  nameWithType: AbstractElement<T>.Data_
  fullName: EvilDICOM.Core.Element.AbstractElement<T>.Data_
  nameWithType.vb: AbstractElement(Of T).Data_
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of T).Data_
- uid: EvilDICOM.Core.Element.AbstractElement`1.Tag
  commentId: P:EvilDICOM.Core.Element.AbstractElement`1.Tag
  isExternal: false
  name: Tag
  nameWithType: AbstractElement<T>.Tag
  fullName: EvilDICOM.Core.Element.AbstractElement<T>.Tag
  nameWithType.vb: AbstractElement(Of T).Tag
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of T).Tag
- uid: EvilDICOM.Core.Element.AbstractElement`1.DatType
  commentId: P:EvilDICOM.Core.Element.AbstractElement`1.DatType
  isExternal: false
  name: DatType
  nameWithType: AbstractElement<T>.DatType
  fullName: EvilDICOM.Core.Element.AbstractElement<T>.DatType
  nameWithType.vb: AbstractElement(Of T).DatType
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of T).DatType
- uid: EvilDICOM.Core.Element.AbstractElement`1.DData
  commentId: P:EvilDICOM.Core.Element.AbstractElement`1.DData
  isExternal: false
  name: DData
  nameWithType: AbstractElement<T>.DData
  fullName: EvilDICOM.Core.Element.AbstractElement<T>.DData
  nameWithType.vb: AbstractElement(Of T).DData
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of T).DData
- uid: EvilDICOM.Core.Element.AbstractElement`1.DData_
  commentId: P:EvilDICOM.Core.Element.AbstractElement`1.DData_
  isExternal: false
  name: DData_
  nameWithType: AbstractElement<T>.DData_
  fullName: EvilDICOM.Core.Element.AbstractElement<T>.DData_
  nameWithType.vb: AbstractElement(Of T).DData_
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of T).DData_
- uid: EvilDICOM.Core.Element.AbstractElement`1.ToString
  commentId: M:EvilDICOM.Core.Element.AbstractElement`1.ToString
  isExternal: false
  name: ToString()
  nameWithType: AbstractElement<T>.ToString()
  fullName: EvilDICOM.Core.Element.AbstractElement<T>.ToString()
  nameWithType.vb: AbstractElement(Of T).ToString()
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of T).ToString()
  spec.csharp:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.ToString
    name: ToString
    nameWithType: AbstractElement<T>.ToString
    fullName: EvilDICOM.Core.Element.AbstractElement<T>.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.ToString
    name: ToString
    nameWithType: AbstractElement(Of T).ToString
    fullName: EvilDICOM.Core.Element.AbstractElement(Of T).ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Core.Element.AbstractElement`1.SetData(`0)
  commentId: M:EvilDICOM.Core.Element.AbstractElement`1.SetData(`0)
  isExternal: false
  name: SetData(T)
  nameWithType: AbstractElement<T>.SetData(T)
  fullName: EvilDICOM.Core.Element.AbstractElement<T>.SetData(T)
  nameWithType.vb: AbstractElement(Of T).SetData(T)
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of T).SetData(T)
  spec.csharp:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.SetData(`0)
    name: SetData
    nameWithType: AbstractElement<T>.SetData
    fullName: EvilDICOM.Core.Element.AbstractElement<T>.SetData
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.SetData(`0)
    name: SetData
    nameWithType: AbstractElement(Of T).SetData
    fullName: EvilDICOM.Core.Element.AbstractElement(Of T).SetData
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Core.Element.AbstractElement`1.SetData(`0[])
  commentId: M:EvilDICOM.Core.Element.AbstractElement`1.SetData(`0[])
  isExternal: false
  name: SetData(T[])
  nameWithType: AbstractElement<T>.SetData(T[])
  fullName: EvilDICOM.Core.Element.AbstractElement<T>.SetData(T[])
  nameWithType.vb: AbstractElement(Of T).SetData(T())
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of T).SetData(T())
  name.vb: SetData(T())
  spec.csharp:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.SetData(`0[])
    name: SetData
    nameWithType: AbstractElement<T>.SetData
    fullName: EvilDICOM.Core.Element.AbstractElement<T>.SetData
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.SetData(`0[])
    name: SetData
    nameWithType: AbstractElement(Of T).SetData
    fullName: EvilDICOM.Core.Element.AbstractElement(Of T).SetData
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Core.Element.AbstractElement`1.GetDataOrDefault
  commentId: M:EvilDICOM.Core.Element.AbstractElement`1.GetDataOrDefault
  isExternal: false
  name: GetDataOrDefault()
  nameWithType: AbstractElement<T>.GetDataOrDefault()
  fullName: EvilDICOM.Core.Element.AbstractElement<T>.GetDataOrDefault()
  nameWithType.vb: AbstractElement(Of T).GetDataOrDefault()
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of T).GetDataOrDefault()
  spec.csharp:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.GetDataOrDefault
    name: GetDataOrDefault
    nameWithType: AbstractElement<T>.GetDataOrDefault
    fullName: EvilDICOM.Core.Element.AbstractElement<T>.GetDataOrDefault
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.GetDataOrDefault
    name: GetDataOrDefault
    nameWithType: AbstractElement(Of T).GetDataOrDefault
    fullName: EvilDICOM.Core.Element.AbstractElement(Of T).GetDataOrDefault
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Core.Element.LongText.#ctor*
  commentId: Overload:EvilDICOM.Core.Element.LongText.#ctor
  isExternal: false
  name: LongText
  nameWithType: LongText.LongText
  fullName: EvilDICOM.Core.Element.LongText.LongText
- uid: EvilDICOM.Core.Element.Tag
  commentId: T:EvilDICOM.Core.Element.Tag
  parent: EvilDICOM.Core.Element
  isExternal: false
  name: Tag
  nameWithType: Tag
  fullName: EvilDICOM.Core.Element.Tag
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EvilDICOM.Core.Element.AbstractElement{System.String}.Data
  commentId: P:EvilDICOM.Core.Element.AbstractElement{System.String}.Data
  parent: EvilDICOM.Core.Element.AbstractElement{System.String}
  definition: EvilDICOM.Core.Element.AbstractElement`1.Data
  name: Data
  nameWithType: AbstractElement<String>.Data
  fullName: EvilDICOM.Core.Element.AbstractElement<System.String>.Data
  nameWithType.vb: AbstractElement(Of String).Data
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of System.String).Data
- uid: EvilDICOM.Core.Element.LongText.Data*
  commentId: Overload:EvilDICOM.Core.Element.LongText.Data
  isExternal: false
  name: Data
  nameWithType: LongText.Data
  fullName: EvilDICOM.Core.Element.LongText.Data
- uid: EvilDICOM.Core.Element.AbstractElement`1.Data
  commentId: P:EvilDICOM.Core.Element.AbstractElement`1.Data
  isExternal: false
  name: Data
  nameWithType: AbstractElement<T>.Data
  fullName: EvilDICOM.Core.Element.AbstractElement<T>.Data
  nameWithType.vb: AbstractElement(Of T).Data
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of T).Data
