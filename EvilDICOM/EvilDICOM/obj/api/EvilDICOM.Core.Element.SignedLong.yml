items:
- uid: EvilDICOM.Core.Element.SignedLong
  id: SignedLong
  parent: EvilDICOM.Core.Element
  children:
  - EvilDICOM.Core.Element.SignedLong.#ctor
  - EvilDICOM.Core.Element.SignedLong.#ctor(EvilDICOM.Core.Element.Tag,System.Int32)
  - EvilDICOM.Core.Element.SignedLong.#ctor(EvilDICOM.Core.Element.Tag,System.Int32[])
  langs:
  - csharp
  - vb
  name: SignedLong
  fullName: EvilDICOM.Core.Element.SignedLong
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Element/SignedLong.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/Element/SignedLong.cs
    startLine: 7
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Element
  summary: Encapsulates the SignedLong VR type
  example: []
  syntax:
    content: 'public class SignedLong : AbstractElement<int>, IDICOMElement'
    content.vb: Public Class SignedLong Inherits AbstractElement(Of Integer) Implements IDICOMElement
  inheritance:
  - System.Object
  - EvilDICOM.Core.Element.AbstractElement{System.Int32}
  implements:
  - EvilDICOM.Core.Interfaces.IDICOMElement
  inheritedMembers:
  - EvilDICOM.Core.Element.AbstractElement{System.Int32}.VR
  - EvilDICOM.Core.Element.AbstractElement{System.Int32}.Data
  - EvilDICOM.Core.Element.AbstractElement{System.Int32}.Data_
  - EvilDICOM.Core.Element.AbstractElement{System.Int32}.Tag
  - EvilDICOM.Core.Element.AbstractElement{System.Int32}.DatType
  - EvilDICOM.Core.Element.AbstractElement{System.Int32}.DData
  - EvilDICOM.Core.Element.AbstractElement{System.Int32}.DData_
  - EvilDICOM.Core.Element.AbstractElement{System.Int32}.ToString
  - EvilDICOM.Core.Element.AbstractElement{System.Int32}.SetData(System.Int32)
  - EvilDICOM.Core.Element.AbstractElement{System.Int32}.SetData(System.Int32[])
  - EvilDICOM.Core.Element.AbstractElement{System.Int32}.GetDataOrDefault
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: EvilDICOM.Core.Element.SignedLong.#ctor
  id: '#ctor'
  parent: EvilDICOM.Core.Element.SignedLong
  langs:
  - csharp
  - vb
  name: SignedLong()
  fullName: EvilDICOM.Core.Element.SignedLong.SignedLong()
  type: Constructor
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Element/SignedLong.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/Element/SignedLong.cs
    startLine: 9
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Element
  syntax:
    content: public SignedLong()
    content.vb: Public Sub New
- uid: EvilDICOM.Core.Element.SignedLong.#ctor(EvilDICOM.Core.Element.Tag,System.Int32)
  id: '#ctor(EvilDICOM.Core.Element.Tag,System.Int32)'
  parent: EvilDICOM.Core.Element.SignedLong
  langs:
  - csharp
  - vb
  name: SignedLong(Tag, Int32)
  fullName: EvilDICOM.Core.Element.SignedLong.SignedLong(EvilDICOM.Core.Element.Tag, System.Int32)
  type: Constructor
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Element/SignedLong.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/Element/SignedLong.cs
    startLine: 14
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Element
  syntax:
    content: public SignedLong(Tag tag, int data)
    content.vb: Public Sub New(tag As Tag, data As Integer)
    parameters:
    - id: tag
      type: EvilDICOM.Core.Element.Tag
    - id: data
      type: System.Int32
- uid: EvilDICOM.Core.Element.SignedLong.#ctor(EvilDICOM.Core.Element.Tag,System.Int32[])
  id: '#ctor(EvilDICOM.Core.Element.Tag,System.Int32[])'
  parent: EvilDICOM.Core.Element.SignedLong
  langs:
  - csharp
  - vb
  name: SignedLong(Tag, Int32[])
  name.vb: SignedLong(Tag, Int32())
  fullName: EvilDICOM.Core.Element.SignedLong.SignedLong(EvilDICOM.Core.Element.Tag, System.Int32[])
  fullName.vb: EvilDICOM.Core.Element.SignedLong.SignedLong(EvilDICOM.Core.Element.Tag, System.Int32())
  type: Constructor
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Element/SignedLong.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/Element/SignedLong.cs
    startLine: 20
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Element
  syntax:
    content: public SignedLong(Tag tag, int[] data)
    content.vb: Public Sub New(tag As Tag, data As Integer())
    parameters:
    - id: tag
      type: EvilDICOM.Core.Element.Tag
    - id: data
      type: System.Int32[]
references:
- uid: EvilDICOM.Core.Element
  isExternal: false
  name: EvilDICOM.Core.Element
  fullName: EvilDICOM.Core.Element
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: EvilDICOM.Core.Element.AbstractElement{System.Int32}
  parent: EvilDICOM.Core.Element
  definition: EvilDICOM.Core.Element.AbstractElement`1
  name: AbstractElement<Int32>
  fullName: EvilDICOM.Core.Element.AbstractElement<System.Int32>
  fullname.vb: EvilDICOM.Core.Element.AbstractElement(Of System.Int32)
  name.vb: AbstractElement(Of Int32)
  spec.csharp:
  - uid: EvilDICOM.Core.Element.AbstractElement`1
    name: AbstractElement
    fullName: EvilDICOM.Core.Element.AbstractElement
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: EvilDICOM.Core.Element.AbstractElement`1
    name: AbstractElement
    fullName: EvilDICOM.Core.Element.AbstractElement
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: EvilDICOM.Core.Interfaces.IDICOMElement
  parent: EvilDICOM.Core.Interfaces
  isExternal: false
  name: IDICOMElement
  fullName: EvilDICOM.Core.Interfaces.IDICOMElement
- uid: EvilDICOM.Core.Element.AbstractElement{System.Int32}.VR
  parent: EvilDICOM.Core.Element.AbstractElement{System.Int32}
  definition: EvilDICOM.Core.Element.AbstractElement`1.VR
  name: VR
  fullName: EvilDICOM.Core.Element.AbstractElement<System.Int32>.VR
  fullname.vb: EvilDICOM.Core.Element.AbstractElement(Of System.Int32).VR
- uid: EvilDICOM.Core.Element.AbstractElement{System.Int32}.Data
  parent: EvilDICOM.Core.Element.AbstractElement{System.Int32}
  definition: EvilDICOM.Core.Element.AbstractElement`1.Data
  name: Data
  fullName: EvilDICOM.Core.Element.AbstractElement<System.Int32>.Data
  fullname.vb: EvilDICOM.Core.Element.AbstractElement(Of System.Int32).Data
- uid: EvilDICOM.Core.Element.AbstractElement{System.Int32}.Data_
  parent: EvilDICOM.Core.Element.AbstractElement{System.Int32}
  definition: EvilDICOM.Core.Element.AbstractElement`1.Data_
  name: Data_
  fullName: EvilDICOM.Core.Element.AbstractElement<System.Int32>.Data_
  fullname.vb: EvilDICOM.Core.Element.AbstractElement(Of System.Int32).Data_
- uid: EvilDICOM.Core.Element.AbstractElement{System.Int32}.Tag
  parent: EvilDICOM.Core.Element.AbstractElement{System.Int32}
  definition: EvilDICOM.Core.Element.AbstractElement`1.Tag
  name: Tag
  fullName: EvilDICOM.Core.Element.AbstractElement<System.Int32>.Tag
  fullname.vb: EvilDICOM.Core.Element.AbstractElement(Of System.Int32).Tag
- uid: EvilDICOM.Core.Element.AbstractElement{System.Int32}.DatType
  parent: EvilDICOM.Core.Element.AbstractElement{System.Int32}
  definition: EvilDICOM.Core.Element.AbstractElement`1.DatType
  name: DatType
  fullName: EvilDICOM.Core.Element.AbstractElement<System.Int32>.DatType
  fullname.vb: EvilDICOM.Core.Element.AbstractElement(Of System.Int32).DatType
- uid: EvilDICOM.Core.Element.AbstractElement{System.Int32}.DData
  parent: EvilDICOM.Core.Element.AbstractElement{System.Int32}
  definition: EvilDICOM.Core.Element.AbstractElement`1.DData
  name: DData
  fullName: EvilDICOM.Core.Element.AbstractElement<System.Int32>.DData
  fullname.vb: EvilDICOM.Core.Element.AbstractElement(Of System.Int32).DData
- uid: EvilDICOM.Core.Element.AbstractElement{System.Int32}.DData_
  parent: EvilDICOM.Core.Element.AbstractElement{System.Int32}
  definition: EvilDICOM.Core.Element.AbstractElement`1.DData_
  name: DData_
  fullName: EvilDICOM.Core.Element.AbstractElement<System.Int32>.DData_
  fullname.vb: EvilDICOM.Core.Element.AbstractElement(Of System.Int32).DData_
- uid: EvilDICOM.Core.Element.AbstractElement{System.Int32}.ToString
  parent: EvilDICOM.Core.Element.AbstractElement{System.Int32}
  definition: EvilDICOM.Core.Element.AbstractElement`1.ToString
  name: ToString()
  fullName: EvilDICOM.Core.Element.AbstractElement<System.Int32>.ToString()
  fullname.vb: EvilDICOM.Core.Element.AbstractElement(Of System.Int32).ToString()
  spec.csharp:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.ToString
    name: ToString
    fullName: EvilDICOM.Core.Element.AbstractElement<System.Int32>.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.ToString
    name: ToString
    fullName: EvilDICOM.Core.Element.AbstractElement(Of System.Int32).ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: EvilDICOM.Core.Element.AbstractElement{System.Int32}.SetData(System.Int32)
  parent: EvilDICOM.Core.Element.AbstractElement{System.Int32}
  definition: EvilDICOM.Core.Element.AbstractElement`1.SetData({T})
  name: SetData(Int32)
  fullName: EvilDICOM.Core.Element.AbstractElement<System.Int32>.SetData(System.Int32)
  fullname.vb: EvilDICOM.Core.Element.AbstractElement(Of System.Int32).SetData(System.Int32)
  spec.csharp:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.SetData(`0)
    name: SetData
    fullName: EvilDICOM.Core.Element.AbstractElement<System.Int32>.SetData
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.SetData(`0)
    name: SetData
    fullName: EvilDICOM.Core.Element.AbstractElement(Of System.Int32).SetData
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: EvilDICOM.Core.Element.AbstractElement{System.Int32}.SetData(System.Int32[])
  parent: EvilDICOM.Core.Element.AbstractElement{System.Int32}
  definition: EvilDICOM.Core.Element.AbstractElement`1.SetData({T}[])
  name: SetData(Int32[])
  fullName: EvilDICOM.Core.Element.AbstractElement<System.Int32>.SetData(System.Int32[])
  fullname.vb: EvilDICOM.Core.Element.AbstractElement(Of System.Int32).SetData(System.Int32())
  name.vb: SetData(Int32())
  spec.csharp:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.SetData(`0[])
    name: SetData
    fullName: EvilDICOM.Core.Element.AbstractElement<System.Int32>.SetData
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.SetData(`0[])
    name: SetData
    fullName: EvilDICOM.Core.Element.AbstractElement(Of System.Int32).SetData
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: EvilDICOM.Core.Element.AbstractElement{System.Int32}.GetDataOrDefault
  parent: EvilDICOM.Core.Element.AbstractElement{System.Int32}
  definition: EvilDICOM.Core.Element.AbstractElement`1.GetDataOrDefault
  name: GetDataOrDefault()
  fullName: EvilDICOM.Core.Element.AbstractElement<System.Int32>.GetDataOrDefault()
  fullname.vb: EvilDICOM.Core.Element.AbstractElement(Of System.Int32).GetDataOrDefault()
  spec.csharp:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.GetDataOrDefault
    name: GetDataOrDefault
    fullName: EvilDICOM.Core.Element.AbstractElement<System.Int32>.GetDataOrDefault
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.GetDataOrDefault
    name: GetDataOrDefault
    fullName: EvilDICOM.Core.Element.AbstractElement(Of System.Int32).GetDataOrDefault
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: EvilDICOM.Core.Element.AbstractElement`1
  parent: EvilDICOM.Core.Element
  isExternal: false
  name: AbstractElement<T>
  fullName: EvilDICOM.Core.Element.AbstractElement<T>
  fullname.vb: EvilDICOM.Core.Element.AbstractElement(Of T)
  name.vb: AbstractElement(Of T)
  spec.csharp:
  - uid: EvilDICOM.Core.Element.AbstractElement`1
    name: AbstractElement
    fullName: EvilDICOM.Core.Element.AbstractElement
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: EvilDICOM.Core.Element.AbstractElement`1
    name: AbstractElement
    fullName: EvilDICOM.Core.Element.AbstractElement
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: EvilDICOM.Core.Interfaces
  isExternal: false
  name: EvilDICOM.Core.Interfaces
  fullName: EvilDICOM.Core.Interfaces
- uid: EvilDICOM.Core.Element.AbstractElement`1.VR
  parent: EvilDICOM.Core.Element.AbstractElement`1
  isExternal: false
  name: VR
  fullName: EvilDICOM.Core.Element.AbstractElement<T>.VR
  fullname.vb: EvilDICOM.Core.Element.AbstractElement(Of T).VR
- uid: EvilDICOM.Core.Element.AbstractElement`1.Data
  parent: EvilDICOM.Core.Element.AbstractElement`1
  isExternal: false
  name: Data
  fullName: EvilDICOM.Core.Element.AbstractElement<T>.Data
  fullname.vb: EvilDICOM.Core.Element.AbstractElement(Of T).Data
- uid: EvilDICOM.Core.Element.AbstractElement`1.Data_
  parent: EvilDICOM.Core.Element.AbstractElement`1
  isExternal: false
  name: Data_
  fullName: EvilDICOM.Core.Element.AbstractElement<T>.Data_
  fullname.vb: EvilDICOM.Core.Element.AbstractElement(Of T).Data_
- uid: EvilDICOM.Core.Element.AbstractElement`1.Tag
  parent: EvilDICOM.Core.Element.AbstractElement`1
  isExternal: false
  name: Tag
  fullName: EvilDICOM.Core.Element.AbstractElement<T>.Tag
  fullname.vb: EvilDICOM.Core.Element.AbstractElement(Of T).Tag
- uid: EvilDICOM.Core.Element.AbstractElement`1.DatType
  parent: EvilDICOM.Core.Element.AbstractElement`1
  isExternal: false
  name: DatType
  fullName: EvilDICOM.Core.Element.AbstractElement<T>.DatType
  fullname.vb: EvilDICOM.Core.Element.AbstractElement(Of T).DatType
- uid: EvilDICOM.Core.Element.AbstractElement`1.DData
  parent: EvilDICOM.Core.Element.AbstractElement`1
  isExternal: false
  name: DData
  fullName: EvilDICOM.Core.Element.AbstractElement<T>.DData
  fullname.vb: EvilDICOM.Core.Element.AbstractElement(Of T).DData
- uid: EvilDICOM.Core.Element.AbstractElement`1.DData_
  parent: EvilDICOM.Core.Element.AbstractElement`1
  isExternal: false
  name: DData_
  fullName: EvilDICOM.Core.Element.AbstractElement<T>.DData_
  fullname.vb: EvilDICOM.Core.Element.AbstractElement(Of T).DData_
- uid: EvilDICOM.Core.Element.AbstractElement`1.ToString
  parent: EvilDICOM.Core.Element.AbstractElement`1
  isExternal: false
  name: ToString()
  fullName: EvilDICOM.Core.Element.AbstractElement<T>.ToString()
  fullname.vb: EvilDICOM.Core.Element.AbstractElement(Of T).ToString()
  spec.csharp:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.ToString
    name: ToString
    fullName: EvilDICOM.Core.Element.AbstractElement<T>.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.ToString
    name: ToString
    fullName: EvilDICOM.Core.Element.AbstractElement(Of T).ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: EvilDICOM.Core.Element.AbstractElement`1.SetData({T})
  parent: EvilDICOM.Core.Element.AbstractElement`1
  isExternal: false
  name: SetData(T)
  fullName: EvilDICOM.Core.Element.AbstractElement<T>.SetData(T)
  fullname.vb: EvilDICOM.Core.Element.AbstractElement(Of T).SetData(T)
  spec.csharp:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.SetData(`0)
    name: SetData
    fullName: EvilDICOM.Core.Element.AbstractElement<T>.SetData
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.SetData(`0)
    name: SetData
    fullName: EvilDICOM.Core.Element.AbstractElement(Of T).SetData
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: EvilDICOM.Core.Element.AbstractElement`1.SetData({T}[])
  parent: EvilDICOM.Core.Element.AbstractElement`1
  isExternal: false
  name: SetData(T[])
  fullName: EvilDICOM.Core.Element.AbstractElement<T>.SetData(T[])
  fullname.vb: EvilDICOM.Core.Element.AbstractElement(Of T).SetData(T())
  name.vb: SetData(T())
  spec.csharp:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.SetData(`0[])
    name: SetData
    fullName: EvilDICOM.Core.Element.AbstractElement<T>.SetData
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.SetData(`0[])
    name: SetData
    fullName: EvilDICOM.Core.Element.AbstractElement(Of T).SetData
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: EvilDICOM.Core.Element.AbstractElement`1.GetDataOrDefault
  parent: EvilDICOM.Core.Element.AbstractElement`1
  isExternal: false
  name: GetDataOrDefault()
  fullName: EvilDICOM.Core.Element.AbstractElement<T>.GetDataOrDefault()
  fullname.vb: EvilDICOM.Core.Element.AbstractElement(Of T).GetDataOrDefault()
  spec.csharp:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.GetDataOrDefault
    name: GetDataOrDefault
    fullName: EvilDICOM.Core.Element.AbstractElement<T>.GetDataOrDefault
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.GetDataOrDefault
    name: GetDataOrDefault
    fullName: EvilDICOM.Core.Element.AbstractElement(Of T).GetDataOrDefault
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: EvilDICOM.Core.Element.Tag
  parent: EvilDICOM.Core.Element
  isExternal: false
  name: Tag
  fullName: EvilDICOM.Core.Element.Tag
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  fullName: System.Int32[]
  fullname.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    fullName: ()
