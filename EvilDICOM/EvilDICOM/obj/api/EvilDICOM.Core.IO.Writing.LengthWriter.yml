items:
- uid: EvilDICOM.Core.IO.Writing.LengthWriter
  id: LengthWriter
  parent: EvilDICOM.Core.IO.Writing
  children:
  - EvilDICOM.Core.IO.Writing.LengthWriter.Write(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,EvilDICOM.Core.Enums.VR,EvilDICOM.Core.IO.Writing.DICOMWriteSettings,System.Int32)
  - EvilDICOM.Core.IO.Writing.LengthWriter.WriteBigEndian(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,System.Int32,System.Int32)
  - EvilDICOM.Core.IO.Writing.LengthWriter.WriteLittleEndian(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: LengthWriter
  fullName: EvilDICOM.Core.IO.Writing.LengthWriter
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Writing/LengthWriter.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/IO/Writing/LengthWriter.cs
    startLine: 8
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Writing
  syntax:
    content: public class LengthWriter
    content.vb: Public Class LengthWriter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: EvilDICOM.Core.IO.Writing.LengthWriter.WriteLittleEndian(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,System.Int32,System.Int32)
  id: WriteLittleEndian(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,System.Int32,System.Int32)
  parent: EvilDICOM.Core.IO.Writing.LengthWriter
  langs:
  - csharp
  - vb
  name: WriteLittleEndian(DICOMBinaryWriter, Int32, Int32)
  fullName: EvilDICOM.Core.IO.Writing.LengthWriter.WriteLittleEndian(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Writing/LengthWriter.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/IO/Writing/LengthWriter.cs
    startLine: 10
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Writing
  syntax:
    content: public static void WriteLittleEndian(DICOMBinaryWriter dw, int length, int numberOfBytes)
    content.vb: Public Shared Sub WriteLittleEndian(dw As DICOMBinaryWriter, length As Integer, numberOfBytes As Integer)
    parameters:
    - id: dw
      type: EvilDICOM.Core.IO.Writing.DICOMBinaryWriter
    - id: length
      type: System.Int32
    - id: numberOfBytes
      type: System.Int32
- uid: EvilDICOM.Core.IO.Writing.LengthWriter.Write(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,EvilDICOM.Core.Enums.VR,EvilDICOM.Core.IO.Writing.DICOMWriteSettings,System.Int32)
  id: Write(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,EvilDICOM.Core.Enums.VR,EvilDICOM.Core.IO.Writing.DICOMWriteSettings,System.Int32)
  parent: EvilDICOM.Core.IO.Writing.LengthWriter
  langs:
  - csharp
  - vb
  name: Write(DICOMBinaryWriter, VR, DICOMWriteSettings, Int32)
  fullName: EvilDICOM.Core.IO.Writing.LengthWriter.Write(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter, EvilDICOM.Core.Enums.VR, EvilDICOM.Core.IO.Writing.DICOMWriteSettings, System.Int32)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Writing/LengthWriter.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/IO/Writing/LengthWriter.cs
    startLine: 25
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Writing
  syntax:
    content: public static void Write(DICOMBinaryWriter dw, VR vr, DICOMWriteSettings settings, int length)
    content.vb: Public Shared Sub Write(dw As DICOMBinaryWriter, vr As VR, settings As DICOMWriteSettings, length As Integer)
    parameters:
    - id: dw
      type: EvilDICOM.Core.IO.Writing.DICOMBinaryWriter
    - id: vr
      type: EvilDICOM.Core.Enums.VR
    - id: settings
      type: EvilDICOM.Core.IO.Writing.DICOMWriteSettings
    - id: length
      type: System.Int32
- uid: EvilDICOM.Core.IO.Writing.LengthWriter.WriteBigEndian(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,System.Int32,System.Int32)
  id: WriteBigEndian(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,System.Int32,System.Int32)
  parent: EvilDICOM.Core.IO.Writing.LengthWriter
  langs:
  - csharp
  - vb
  name: WriteBigEndian(DICOMBinaryWriter, Int32, Int32)
  fullName: EvilDICOM.Core.IO.Writing.LengthWriter.WriteBigEndian(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Writing/LengthWriter.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/IO/Writing/LengthWriter.cs
    startLine: 57
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Writing
  syntax:
    content: public static void WriteBigEndian(DICOMBinaryWriter dw, int length, int numberOfBytes)
    content.vb: Public Shared Sub WriteBigEndian(dw As DICOMBinaryWriter, length As Integer, numberOfBytes As Integer)
    parameters:
    - id: dw
      type: EvilDICOM.Core.IO.Writing.DICOMBinaryWriter
    - id: length
      type: System.Int32
    - id: numberOfBytes
      type: System.Int32
references:
- uid: EvilDICOM.Core.IO.Writing
  isExternal: false
  name: EvilDICOM.Core.IO.Writing
  fullName: EvilDICOM.Core.IO.Writing
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: EvilDICOM.Core.IO.Writing.DICOMBinaryWriter
  parent: EvilDICOM.Core.IO.Writing
  isExternal: false
  name: DICOMBinaryWriter
  fullName: EvilDICOM.Core.IO.Writing.DICOMBinaryWriter
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: EvilDICOM.Core.Enums.VR
  parent: EvilDICOM.Core.Enums
  isExternal: false
  name: VR
  fullName: EvilDICOM.Core.Enums.VR
- uid: EvilDICOM.Core.IO.Writing.DICOMWriteSettings
  parent: EvilDICOM.Core.IO.Writing
  isExternal: false
  name: DICOMWriteSettings
  fullName: EvilDICOM.Core.IO.Writing.DICOMWriteSettings
- uid: EvilDICOM.Core.Enums
  isExternal: false
  name: EvilDICOM.Core.Enums
  fullName: EvilDICOM.Core.Enums
