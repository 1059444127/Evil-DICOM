items:
- uid: EvilDICOM.Network.Association
  id: Association
  parent: EvilDICOM.Network
  children:
  - EvilDICOM.Network.Association.#ctor(EvilDICOM.Network.DICOMServiceClass,System.Net.Sockets.TcpClient)
  - EvilDICOM.Network.Association.AeTitle
  - EvilDICOM.Network.Association.Cancel(EvilDICOM.Network.DIMSE.CCancel)
  - EvilDICOM.Network.Association.IpAddress
  - EvilDICOM.Network.Association.LastActive
  - EvilDICOM.Network.Association.Listen(System.Nullable{System.TimeSpan})
  - EvilDICOM.Network.Association.Logger
  - EvilDICOM.Network.Association.OutboundMessages
  - EvilDICOM.Network.Association.PDataProcessor
  - EvilDICOM.Network.Association.PDUProcessor
  - EvilDICOM.Network.Association.Port
  - EvilDICOM.Network.Association.PresentationContexts
  - EvilDICOM.Network.Association.Process(EvilDICOM.Network.Interfaces.IMessage)
  - EvilDICOM.Network.Association.Read
  - EvilDICOM.Network.Association.Reader
  - EvilDICOM.Network.Association.Release
  - EvilDICOM.Network.Association.RequestAbort
  - EvilDICOM.Network.Association.SendMessage(EvilDICOM.Network.Interfaces.IPDU)
  - EvilDICOM.Network.Association.SendMessage(System.Byte[])
  - EvilDICOM.Network.Association.ServiceClass
  - EvilDICOM.Network.Association.SetDebugMode(System.String)
  - EvilDICOM.Network.Association.State
  - EvilDICOM.Network.Association.Stream
  - EvilDICOM.Network.Association.ToString
  - EvilDICOM.Network.Association.UserInfo
  langs:
  - csharp
  - vb
  name: Association
  fullName: EvilDICOM.Network.Association
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 21
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public class Association
    content.vb: Public Class Association
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: EvilDICOM.Network.Association.#ctor(EvilDICOM.Network.DICOMServiceClass,System.Net.Sockets.TcpClient)
  id: '#ctor(EvilDICOM.Network.DICOMServiceClass,System.Net.Sockets.TcpClient)'
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: Association(DICOMServiceClass, TcpClient)
  fullName: EvilDICOM.Network.Association.Association(EvilDICOM.Network.DICOMServiceClass, System.Net.Sockets.TcpClient)
  type: Constructor
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 27
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public Association(DICOMServiceClass serviceClass, TcpClient client)
    content.vb: Public Sub New(serviceClass As DICOMServiceClass, client As TcpClient)
    parameters:
    - id: serviceClass
      type: EvilDICOM.Network.DICOMServiceClass
    - id: client
      type: System.Net.Sockets.TcpClient
- uid: EvilDICOM.Network.Association.ServiceClass
  id: ServiceClass
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: ServiceClass
  fullName: EvilDICOM.Network.Association.ServiceClass
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 41
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public DICOMServiceClass ServiceClass { get; }
    content.vb: Public ReadOnly Property ServiceClass As DICOMServiceClass
    parameters: []
    return:
      type: EvilDICOM.Network.DICOMServiceClass
- uid: EvilDICOM.Network.Association.SetDebugMode(System.String)
  id: SetDebugMode(System.String)
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: SetDebugMode(String)
  fullName: EvilDICOM.Network.Association.SetDebugMode(System.String)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 47
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  summary: Sets up a file log of incoming messages
  example: []
  syntax:
    content: public void SetDebugMode(string folderStoragePath)
    content.vb: Public Sub SetDebugMode(folderStoragePath As String)
    parameters:
    - id: folderStoragePath
      type: System.String
      description: 
- uid: EvilDICOM.Network.Association.PresentationContexts
  id: PresentationContexts
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: PresentationContexts
  fullName: EvilDICOM.Network.Association.PresentationContexts
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 62
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  summary: The agreed upon presentation context of the association
  example: []
  syntax:
    content: public List<PresentationContext> PresentationContexts { get; set; }
    content.vb: Public Property PresentationContexts As List(Of PresentationContext)
    parameters: []
    return:
      type: System.Collections.Generic.List{EvilDICOM.Network.PDUs.Items.PresentationContext}
- uid: EvilDICOM.Network.Association.LastActive
  id: LastActive
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: LastActive
  fullName: EvilDICOM.Network.Association.LastActive
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 67
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  summary: The last time of communication of this association
  example: []
  syntax:
    content: public DateTime LastActive { get; set; }
    content.vb: Public Property LastActive As Date
    parameters: []
    return:
      type: System.DateTime
- uid: EvilDICOM.Network.Association.UserInfo
  id: UserInfo
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: UserInfo
  fullName: EvilDICOM.Network.Association.UserInfo
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 72
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  summary: The user info containing maximum PDataTF packet size
  example: []
  syntax:
    content: public UserInfo UserInfo { get; set; }
    content.vb: Public Property UserInfo As UserInfo
    parameters: []
    return:
      type: EvilDICOM.Network.PDUs.Items.UserInfo
- uid: EvilDICOM.Network.Association.PDUProcessor
  id: PDUProcessor
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: PDUProcessor
  fullName: EvilDICOM.Network.Association.PDUProcessor
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 75
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public PDUProcessor PDUProcessor { get; set; }
    content.vb: Public Property PDUProcessor As PDUProcessor
    parameters: []
    return:
      type: EvilDICOM.Network.Processors.PDUProcessor
- uid: EvilDICOM.Network.Association.PDataProcessor
  id: PDataProcessor
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: PDataProcessor
  fullName: EvilDICOM.Network.Association.PDataProcessor
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 76
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public PDataProcessor PDataProcessor { get; set; }
    content.vb: Public Property PDataProcessor As PDataProcessor
    parameters: []
    return:
      type: EvilDICOM.Network.Processors.PDataProcessor
- uid: EvilDICOM.Network.Association.Logger
  id: Logger
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: Logger
  fullName: EvilDICOM.Network.Association.Logger
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 78
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public EventLogger Logger { get; }
    content.vb: Public ReadOnly Property Logger As EventLogger
    parameters: []
    return:
      type: EvilDICOM.Core.Logging.EventLogger
- uid: EvilDICOM.Network.Association.OutboundMessages
  id: OutboundMessages
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: OutboundMessages
  fullName: EvilDICOM.Network.Association.OutboundMessages
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 83
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public ConcurrentQueue<AbstractDIMSEBase> OutboundMessages { get; set; }
    content.vb: Public Property OutboundMessages As ConcurrentQueue(Of AbstractDIMSEBase)
    parameters: []
    return:
      type: System.Collections.Concurrent.ConcurrentQueue{EvilDICOM.Network.DIMSE.AbstractDIMSEBase}
- uid: EvilDICOM.Network.Association.Stream
  id: Stream
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: Stream
  fullName: EvilDICOM.Network.Association.Stream
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 84
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public BufferedStream Stream { get; }
    content.vb: Public ReadOnly Property Stream As BufferedStream
    parameters: []
    return:
      type: System.IO.BufferedStream
- uid: EvilDICOM.Network.Association.Reader
  id: Reader
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: Reader
  fullName: EvilDICOM.Network.Association.Reader
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 85
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public NetworkBinaryReader Reader { get; }
    content.vb: Public ReadOnly Property Reader As NetworkBinaryReader
    parameters: []
    return:
      type: EvilDICOM.Network.Readers.NetworkBinaryReader
- uid: EvilDICOM.Network.Association.State
  id: State
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: State
  fullName: EvilDICOM.Network.Association.State
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 86
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public NetworkState State { get; set; }
    content.vb: Public Property State As NetworkState
    parameters: []
    return:
      type: EvilDICOM.Network.Enums.NetworkState
- uid: EvilDICOM.Network.Association.AeTitle
  id: AeTitle
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: AeTitle
  fullName: EvilDICOM.Network.Association.AeTitle
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 93
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  summary: The foreign AeTitle
  example: []
  syntax:
    content: public string AeTitle { get; set; }
    content.vb: Public Property AeTitle As String
    parameters: []
    return:
      type: System.String
- uid: EvilDICOM.Network.Association.IpAddress
  id: IpAddress
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: IpAddress
  fullName: EvilDICOM.Network.Association.IpAddress
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 98
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  summary: The ip address of the foreign service class
  example: []
  syntax:
    content: public string IpAddress { get; set; }
    content.vb: Public Property IpAddress As String
    parameters: []
    return:
      type: System.String
- uid: EvilDICOM.Network.Association.Port
  id: Port
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: Port
  fullName: EvilDICOM.Network.Association.Port
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 103
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  summary: The port of the foreign service class
  example: []
  syntax:
    content: public int Port { get; set; }
    content.vb: Public Property Port As Integer
    parameters: []
    return:
      type: System.Int32
- uid: EvilDICOM.Network.Association.Listen(System.Nullable{System.TimeSpan})
  id: Listen(System.Nullable{System.TimeSpan})
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: Listen(Nullable<TimeSpan>)
  name.vb: Listen(Nullable(Of TimeSpan))
  fullName: EvilDICOM.Network.Association.Listen(System.Nullable<System.TimeSpan>)
  fullName.vb: EvilDICOM.Network.Association.Listen(System.Nullable(Of System.TimeSpan))
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 107
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public void Listen(TimeSpan? maxWaitTime = null)
    content.vb: Public Sub Listen(maxWaitTime As TimeSpan? = Nothing)
    parameters:
    - id: maxWaitTime
      type: System.Nullable{System.TimeSpan}
- uid: EvilDICOM.Network.Association.Read
  id: Read
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: Read()
  fullName: EvilDICOM.Network.Association.Read()
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 144
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public IMessage Read()
    content.vb: Public Function Read As IMessage
    return:
      type: EvilDICOM.Network.Interfaces.IMessage
- uid: EvilDICOM.Network.Association.Process(EvilDICOM.Network.Interfaces.IMessage)
  id: Process(EvilDICOM.Network.Interfaces.IMessage)
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: Process(IMessage)
  fullName: EvilDICOM.Network.Association.Process(EvilDICOM.Network.Interfaces.IMessage)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 159
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public void Process(IMessage message)
    content.vb: Public Sub Process(message As IMessage)
    parameters:
    - id: message
      type: EvilDICOM.Network.Interfaces.IMessage
- uid: EvilDICOM.Network.Association.Release
  id: Release
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: Release()
  fullName: EvilDICOM.Network.Association.Release()
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 178
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public void Release()
    content.vb: Public Sub Release
- uid: EvilDICOM.Network.Association.RequestAbort
  id: RequestAbort
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: RequestAbort()
  fullName: EvilDICOM.Network.Association.RequestAbort()
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 184
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public void RequestAbort()
    content.vb: Public Sub RequestAbort
- uid: EvilDICOM.Network.Association.ToString
  id: ToString
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: EvilDICOM.Network.Association.ToString()
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 189
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.Object.ToString
- uid: EvilDICOM.Network.Association.SendMessage(System.Byte[])
  id: SendMessage(System.Byte[])
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: SendMessage(Byte[])
  name.vb: SendMessage(Byte())
  fullName: EvilDICOM.Network.Association.SendMessage(System.Byte[])
  fullName.vb: EvilDICOM.Network.Association.SendMessage(System.Byte())
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 196
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public void SendMessage(byte[] message)
    content.vb: Public Sub SendMessage(message As Byte())
    parameters:
    - id: message
      type: System.Byte[]
- uid: EvilDICOM.Network.Association.SendMessage(EvilDICOM.Network.Interfaces.IPDU)
  id: SendMessage(EvilDICOM.Network.Interfaces.IPDU)
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: SendMessage(IPDU)
  fullName: EvilDICOM.Network.Association.SendMessage(EvilDICOM.Network.Interfaces.IPDU)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 204
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public void SendMessage(IPDU message)
    content.vb: Public Sub SendMessage(message As IPDU)
    parameters:
    - id: message
      type: EvilDICOM.Network.Interfaces.IPDU
- uid: EvilDICOM.Network.Association.Cancel(EvilDICOM.Network.DIMSE.CCancel)
  id: Cancel(EvilDICOM.Network.DIMSE.CCancel)
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: Cancel(CCancel)
  fullName: EvilDICOM.Network.Association.Cancel(EvilDICOM.Network.DIMSE.CCancel)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 211
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public void Cancel(CCancel cancel)
    content.vb: Public Sub Cancel(cancel As CCancel)
    parameters:
    - id: cancel
      type: EvilDICOM.Network.DIMSE.CCancel
references:
- uid: EvilDICOM.Network
  isExternal: false
  name: EvilDICOM.Network
  fullName: EvilDICOM.Network
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: EvilDICOM.Network.DICOMServiceClass
  parent: EvilDICOM.Network
  isExternal: false
  name: DICOMServiceClass
  fullName: EvilDICOM.Network.DICOMServiceClass
- uid: System.Net.Sockets.TcpClient
  parent: System.Net.Sockets
  isExternal: true
  name: TcpClient
  fullName: System.Net.Sockets.TcpClient
- uid: System.Net.Sockets
  isExternal: false
  name: System.Net.Sockets
  fullName: System.Net.Sockets
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Collections.Generic.List{EvilDICOM.Network.PDUs.Items.PresentationContext}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<PresentationContext>
  fullName: System.Collections.Generic.List<EvilDICOM.Network.PDUs.Items.PresentationContext>
  fullname.vb: System.Collections.Generic.List(Of EvilDICOM.Network.PDUs.Items.PresentationContext)
  name.vb: List(Of PresentationContext)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    fullName: <
  - uid: EvilDICOM.Network.PDUs.Items.PresentationContext
    name: PresentationContext
    fullName: EvilDICOM.Network.PDUs.Items.PresentationContext
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: EvilDICOM.Network.PDUs.Items.PresentationContext
    name: PresentationContext
    fullName: EvilDICOM.Network.PDUs.Items.PresentationContext
  - name: )
    fullName: )
- uid: System.Collections.Generic.List`1
  parent: System.Collections.Generic
  isExternal: true
  name: List<T>
  fullName: System.Collections.Generic.List<T>
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  fullName: System.DateTime
- uid: EvilDICOM.Network.PDUs.Items.UserInfo
  parent: EvilDICOM.Network.PDUs.Items
  isExternal: false
  name: UserInfo
  fullName: EvilDICOM.Network.PDUs.Items.UserInfo
- uid: EvilDICOM.Network.PDUs.Items
  isExternal: false
  name: EvilDICOM.Network.PDUs.Items
  fullName: EvilDICOM.Network.PDUs.Items
- uid: EvilDICOM.Network.Processors.PDUProcessor
  parent: EvilDICOM.Network.Processors
  isExternal: false
  name: PDUProcessor
  fullName: EvilDICOM.Network.Processors.PDUProcessor
- uid: EvilDICOM.Network.Processors
  isExternal: false
  name: EvilDICOM.Network.Processors
  fullName: EvilDICOM.Network.Processors
- uid: EvilDICOM.Network.Processors.PDataProcessor
  parent: EvilDICOM.Network.Processors
  isExternal: false
  name: PDataProcessor
  fullName: EvilDICOM.Network.Processors.PDataProcessor
- uid: EvilDICOM.Core.Logging.EventLogger
  parent: EvilDICOM.Core.Logging
  isExternal: false
  name: EventLogger
  fullName: EvilDICOM.Core.Logging.EventLogger
- uid: EvilDICOM.Core.Logging
  isExternal: false
  name: EvilDICOM.Core.Logging
  fullName: EvilDICOM.Core.Logging
- uid: System.Collections.Concurrent.ConcurrentQueue{EvilDICOM.Network.DIMSE.AbstractDIMSEBase}
  parent: System.Collections.Concurrent
  definition: System.Collections.Concurrent.ConcurrentQueue`1
  name: ConcurrentQueue<AbstractDIMSEBase>
  fullName: System.Collections.Concurrent.ConcurrentQueue<EvilDICOM.Network.DIMSE.AbstractDIMSEBase>
  fullname.vb: System.Collections.Concurrent.ConcurrentQueue(Of EvilDICOM.Network.DIMSE.AbstractDIMSEBase)
  name.vb: ConcurrentQueue(Of AbstractDIMSEBase)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentQueue`1
    name: ConcurrentQueue
    fullName: System.Collections.Concurrent.ConcurrentQueue
    isExternal: true
  - name: <
    fullName: <
  - uid: EvilDICOM.Network.DIMSE.AbstractDIMSEBase
    name: AbstractDIMSEBase
    fullName: EvilDICOM.Network.DIMSE.AbstractDIMSEBase
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentQueue`1
    name: ConcurrentQueue
    fullName: System.Collections.Concurrent.ConcurrentQueue
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: EvilDICOM.Network.DIMSE.AbstractDIMSEBase
    name: AbstractDIMSEBase
    fullName: EvilDICOM.Network.DIMSE.AbstractDIMSEBase
  - name: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentQueue`1
  parent: System.Collections.Concurrent
  isExternal: true
  name: ConcurrentQueue<T>
  fullName: System.Collections.Concurrent.ConcurrentQueue<T>
  fullname.vb: System.Collections.Concurrent.ConcurrentQueue(Of T)
  name.vb: ConcurrentQueue(Of T)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentQueue`1
    name: ConcurrentQueue
    fullName: System.Collections.Concurrent.ConcurrentQueue
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentQueue`1
    name: ConcurrentQueue
    fullName: System.Collections.Concurrent.ConcurrentQueue
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Concurrent
  isExternal: false
  name: System.Collections.Concurrent
  fullName: System.Collections.Concurrent
- uid: System.IO.BufferedStream
  parent: System.IO
  isExternal: true
  name: BufferedStream
  fullName: System.IO.BufferedStream
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: EvilDICOM.Network.Readers.NetworkBinaryReader
  parent: EvilDICOM.Network.Readers
  isExternal: false
  name: NetworkBinaryReader
  fullName: EvilDICOM.Network.Readers.NetworkBinaryReader
- uid: EvilDICOM.Network.Readers
  isExternal: false
  name: EvilDICOM.Network.Readers
  fullName: EvilDICOM.Network.Readers
- uid: EvilDICOM.Network.Enums.NetworkState
  parent: EvilDICOM.Network.Enums
  isExternal: false
  name: NetworkState
  fullName: EvilDICOM.Network.Enums.NetworkState
- uid: EvilDICOM.Network.Enums
  isExternal: false
  name: EvilDICOM.Network.Enums
  fullName: EvilDICOM.Network.Enums
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  fullname.vb: System.Nullable(Of System.TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: EvilDICOM.Network.Interfaces.IMessage
  parent: EvilDICOM.Network.Interfaces
  isExternal: false
  name: IMessage
  fullName: EvilDICOM.Network.Interfaces.IMessage
- uid: EvilDICOM.Network.Interfaces
  isExternal: false
  name: EvilDICOM.Network.Interfaces
  fullName: EvilDICOM.Network.Interfaces
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
- uid: EvilDICOM.Network.Interfaces.IPDU
  parent: EvilDICOM.Network.Interfaces
  isExternal: false
  name: IPDU
  fullName: EvilDICOM.Network.Interfaces.IPDU
- uid: EvilDICOM.Network.DIMSE.CCancel
  parent: EvilDICOM.Network.DIMSE
  isExternal: false
  name: CCancel
  fullName: EvilDICOM.Network.DIMSE.CCancel
- uid: EvilDICOM.Network.DIMSE
  isExternal: false
  name: EvilDICOM.Network.DIMSE
  fullName: EvilDICOM.Network.DIMSE
