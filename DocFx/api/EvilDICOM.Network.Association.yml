### YamlMime:ManagedReference
items:
- uid: EvilDICOM.Network.Association
  commentId: T:EvilDICOM.Network.Association
  id: Association
  parent: EvilDICOM.Network
  children:
  - EvilDICOM.Network.Association.#ctor(EvilDICOM.Network.DICOMServiceClass,TcpClient)
  - EvilDICOM.Network.Association.AeTitle
  - EvilDICOM.Network.Association.Cancel(EvilDICOM.Network.DIMSE.CCancel)
  - EvilDICOM.Network.Association.IpAddress
  - EvilDICOM.Network.Association.LastActive
  - EvilDICOM.Network.Association.Listen(System.Nullable{TimeSpan})
  - EvilDICOM.Network.Association.Logger
  - EvilDICOM.Network.Association.OutboundMessages
  - EvilDICOM.Network.Association.PDataProcessor
  - EvilDICOM.Network.Association.PDUProcessor
  - EvilDICOM.Network.Association.Port
  - EvilDICOM.Network.Association.PresentationContexts
  - EvilDICOM.Network.Association.Process(EvilDICOM.Network.Interfaces.IMessage)
  - EvilDICOM.Network.Association.Read
  - EvilDICOM.Network.Association.Reader
  - EvilDICOM.Network.Association.Release
  - EvilDICOM.Network.Association.RequestAbort
  - EvilDICOM.Network.Association.SendMessage(EvilDICOM.Network.Interfaces.IPDU)
  - EvilDICOM.Network.Association.SendMessage(System.Byte[])
  - EvilDICOM.Network.Association.ServiceClass
  - EvilDICOM.Network.Association.State
  - EvilDICOM.Network.Association.Stream
  - EvilDICOM.Network.Association.ToString
  - EvilDICOM.Network.Association.UserInfo
  langs:
  - csharp
  - vb
  name: Association
  nameWithType: Association
  fullName: EvilDICOM.Network.Association
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: Association
    path: ../EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 21
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: 'public class Association : object'
    content.vb: >-
      Public Class Association
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - EvilDICOM.Network.Association.EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts(IEnumerable{EvilDICOM.Network.PDUs.Items.PresentationContext})
  - EvilDICOM.Network.Association.EvilDICOM.Network.Extensions.AssociationExtensions.SetFinalContexts(EvilDICOM.Network.PDUs.Accept)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EvilDICOM.Network.Association.#ctor(EvilDICOM.Network.DICOMServiceClass,TcpClient)
  commentId: M:EvilDICOM.Network.Association.#ctor(EvilDICOM.Network.DICOMServiceClass,TcpClient)
  id: '#ctor(EvilDICOM.Network.DICOMServiceClass,TcpClient)'
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: Association(DICOMServiceClass, TcpClient)
  nameWithType: Association.Association(DICOMServiceClass, TcpClient)
  fullName: EvilDICOM.Network.Association.Association(EvilDICOM.Network.DICOMServiceClass, TcpClient)
  type: Constructor
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: .ctor
    path: ../EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 26
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public Association(DICOMServiceClass serviceClass, TcpClient client)
    parameters:
    - id: serviceClass
      type: EvilDICOM.Network.DICOMServiceClass
    - id: client
      type: TcpClient
    content.vb: Public Sub New(serviceClass As DICOMServiceClass, client As TcpClient)
  overload: EvilDICOM.Network.Association.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.Association.ServiceClass
  commentId: P:EvilDICOM.Network.Association.ServiceClass
  id: ServiceClass
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: ServiceClass
  nameWithType: Association.ServiceClass
  fullName: EvilDICOM.Network.Association.ServiceClass
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: ServiceClass
    path: ../EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 40
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public DICOMServiceClass ServiceClass { get; }
    parameters: []
    return:
      type: EvilDICOM.Network.DICOMServiceClass
    content.vb: Public ReadOnly Property ServiceClass As DICOMServiceClass
  overload: EvilDICOM.Network.Association.ServiceClass*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EvilDICOM.Network.Association.PresentationContexts
  commentId: P:EvilDICOM.Network.Association.PresentationContexts
  id: PresentationContexts
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: PresentationContexts
  nameWithType: Association.PresentationContexts
  fullName: EvilDICOM.Network.Association.PresentationContexts
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: PresentationContexts
    path: ../EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 45
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  summary: "\nThe agreed upon presentation context of the association\n"
  example: []
  syntax:
    content: public List<PresentationContext> PresentationContexts { get; set; }
    parameters: []
    return:
      type: List{EvilDICOM.Network.PDUs.Items.PresentationContext}
    content.vb: Public Property PresentationContexts As List(Of PresentationContext)
  overload: EvilDICOM.Network.Association.PresentationContexts*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.Association.LastActive
  commentId: P:EvilDICOM.Network.Association.LastActive
  id: LastActive
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: LastActive
  nameWithType: Association.LastActive
  fullName: EvilDICOM.Network.Association.LastActive
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: LastActive
    path: ../EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 50
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  summary: "\nThe last time of communication of this association\n"
  example: []
  syntax:
    content: public DateTime LastActive { get; set; }
    parameters: []
    return:
      type: DateTime
    content.vb: Public Property LastActive As DateTime
  overload: EvilDICOM.Network.Association.LastActive*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.Association.UserInfo
  commentId: P:EvilDICOM.Network.Association.UserInfo
  id: UserInfo
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: UserInfo
  nameWithType: Association.UserInfo
  fullName: EvilDICOM.Network.Association.UserInfo
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: UserInfo
    path: ../EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 55
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  summary: "\nThe user info containing maximum PDataTF packet size\n"
  example: []
  syntax:
    content: public UserInfo UserInfo { get; set; }
    parameters: []
    return:
      type: EvilDICOM.Network.PDUs.Items.UserInfo
    content.vb: Public Property UserInfo As UserInfo
  overload: EvilDICOM.Network.Association.UserInfo*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.Association.PDUProcessor
  commentId: P:EvilDICOM.Network.Association.PDUProcessor
  id: PDUProcessor
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: PDUProcessor
  nameWithType: Association.PDUProcessor
  fullName: EvilDICOM.Network.Association.PDUProcessor
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: PDUProcessor
    path: ../EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 58
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public PDUProcessor PDUProcessor { get; set; }
    parameters: []
    return:
      type: EvilDICOM.Network.Processors.PDUProcessor
    content.vb: Public Property PDUProcessor As PDUProcessor
  overload: EvilDICOM.Network.Association.PDUProcessor*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.Association.PDataProcessor
  commentId: P:EvilDICOM.Network.Association.PDataProcessor
  id: PDataProcessor
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: PDataProcessor
  nameWithType: Association.PDataProcessor
  fullName: EvilDICOM.Network.Association.PDataProcessor
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: PDataProcessor
    path: ../EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 59
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public PDataProcessor PDataProcessor { get; set; }
    parameters: []
    return:
      type: EvilDICOM.Network.Processors.PDataProcessor
    content.vb: Public Property PDataProcessor As PDataProcessor
  overload: EvilDICOM.Network.Association.PDataProcessor*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.Association.Logger
  commentId: P:EvilDICOM.Network.Association.Logger
  id: Logger
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: Association.Logger
  fullName: EvilDICOM.Network.Association.Logger
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: Logger
    path: ../EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 61
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public EventLogger Logger { get; }
    parameters: []
    return:
      type: EvilDICOM.Core.Logging.EventLogger
    content.vb: Public ReadOnly Property Logger As EventLogger
  overload: EvilDICOM.Network.Association.Logger*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EvilDICOM.Network.Association.OutboundMessages
  commentId: P:EvilDICOM.Network.Association.OutboundMessages
  id: OutboundMessages
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: OutboundMessages
  nameWithType: Association.OutboundMessages
  fullName: EvilDICOM.Network.Association.OutboundMessages
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: OutboundMessages
    path: ../EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 66
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public ConcurrentQueue<AbstractDIMSEBase> OutboundMessages { get; set; }
    parameters: []
    return:
      type: ConcurrentQueue{EvilDICOM.Network.DIMSE.AbstractDIMSEBase}
    content.vb: Public Property OutboundMessages As ConcurrentQueue(Of AbstractDIMSEBase)
  overload: EvilDICOM.Network.Association.OutboundMessages*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.Association.Stream
  commentId: P:EvilDICOM.Network.Association.Stream
  id: Stream
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: Stream
  nameWithType: Association.Stream
  fullName: EvilDICOM.Network.Association.Stream
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: Stream
    path: ../EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 67
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public BufferedStream Stream { get; }
    parameters: []
    return:
      type: BufferedStream
    content.vb: Public ReadOnly Property Stream As BufferedStream
  overload: EvilDICOM.Network.Association.Stream*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EvilDICOM.Network.Association.Reader
  commentId: P:EvilDICOM.Network.Association.Reader
  id: Reader
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: Reader
  nameWithType: Association.Reader
  fullName: EvilDICOM.Network.Association.Reader
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: Reader
    path: ../EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 68
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public NetworkBinaryReader Reader { get; }
    parameters: []
    return:
      type: EvilDICOM.Network.Readers.NetworkBinaryReader
    content.vb: Public ReadOnly Property Reader As NetworkBinaryReader
  overload: EvilDICOM.Network.Association.Reader*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EvilDICOM.Network.Association.State
  commentId: P:EvilDICOM.Network.Association.State
  id: State
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: State
  nameWithType: Association.State
  fullName: EvilDICOM.Network.Association.State
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: State
    path: ../EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 69
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public NetworkState State { get; set; }
    parameters: []
    return:
      type: EvilDICOM.Network.Enums.NetworkState
    content.vb: Public Property State As NetworkState
  overload: EvilDICOM.Network.Association.State*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.Association.AeTitle
  commentId: P:EvilDICOM.Network.Association.AeTitle
  id: AeTitle
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: AeTitle
  nameWithType: Association.AeTitle
  fullName: EvilDICOM.Network.Association.AeTitle
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: AeTitle
    path: ../EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 76
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  summary: "\nThe foreign AeTitle\n"
  example: []
  syntax:
    content: public string AeTitle { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AeTitle As String
  overload: EvilDICOM.Network.Association.AeTitle*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.Association.IpAddress
  commentId: P:EvilDICOM.Network.Association.IpAddress
  id: IpAddress
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: IpAddress
  nameWithType: Association.IpAddress
  fullName: EvilDICOM.Network.Association.IpAddress
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: IpAddress
    path: ../EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 81
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  summary: "\nThe ip address of the foreign service class\n"
  example: []
  syntax:
    content: public string IpAddress { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property IpAddress As String
  overload: EvilDICOM.Network.Association.IpAddress*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.Association.Port
  commentId: P:EvilDICOM.Network.Association.Port
  id: Port
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: Port
  nameWithType: Association.Port
  fullName: EvilDICOM.Network.Association.Port
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: Port
    path: ../EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 86
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  summary: "\nThe port of the foreign service class\n"
  example: []
  syntax:
    content: public int Port { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Port As Integer
  overload: EvilDICOM.Network.Association.Port*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.Association.Listen(System.Nullable{TimeSpan})
  commentId: M:EvilDICOM.Network.Association.Listen(System.Nullable{TimeSpan})
  id: Listen(System.Nullable{TimeSpan})
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: Listen(Nullable<TimeSpan>)
  nameWithType: Association.Listen(Nullable<TimeSpan>)
  fullName: EvilDICOM.Network.Association.Listen(System.Nullable<TimeSpan>)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: Listen
    path: ../EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 90
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public void Listen(TimeSpan? maxWaitTime = null)
    parameters:
    - id: maxWaitTime
      type: System.Nullable{TimeSpan}
    content.vb: Public Sub Listen(maxWaitTime As TimeSpan? = Nothing)
  overload: EvilDICOM.Network.Association.Listen*
  nameWithType.vb: Association.Listen(Nullable(Of TimeSpan))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EvilDICOM.Network.Association.Listen(System.Nullable(Of TimeSpan))
  name.vb: Listen(Nullable(Of TimeSpan))
- uid: EvilDICOM.Network.Association.Read
  commentId: M:EvilDICOM.Network.Association.Read
  id: Read
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: Read()
  nameWithType: Association.Read()
  fullName: EvilDICOM.Network.Association.Read()
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: Read
    path: ../EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 130
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public IMessage Read()
    return:
      type: EvilDICOM.Network.Interfaces.IMessage
    content.vb: Public Function Read As IMessage
  overload: EvilDICOM.Network.Association.Read*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.Association.Process(EvilDICOM.Network.Interfaces.IMessage)
  commentId: M:EvilDICOM.Network.Association.Process(EvilDICOM.Network.Interfaces.IMessage)
  id: Process(EvilDICOM.Network.Interfaces.IMessage)
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: Process(IMessage)
  nameWithType: Association.Process(IMessage)
  fullName: EvilDICOM.Network.Association.Process(EvilDICOM.Network.Interfaces.IMessage)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: Process
    path: ../EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 145
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public void Process(IMessage message)
    parameters:
    - id: message
      type: EvilDICOM.Network.Interfaces.IMessage
    content.vb: Public Sub Process(message As IMessage)
  overload: EvilDICOM.Network.Association.Process*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.Association.Release
  commentId: M:EvilDICOM.Network.Association.Release
  id: Release
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: Release()
  nameWithType: Association.Release()
  fullName: EvilDICOM.Network.Association.Release()
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: Release
    path: ../EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 164
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public void Release()
    content.vb: Public Sub Release
  overload: EvilDICOM.Network.Association.Release*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.Association.RequestAbort
  commentId: M:EvilDICOM.Network.Association.RequestAbort
  id: RequestAbort
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: RequestAbort()
  nameWithType: Association.RequestAbort()
  fullName: EvilDICOM.Network.Association.RequestAbort()
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: RequestAbort
    path: ../EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 170
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public void RequestAbort()
    content.vb: Public Sub RequestAbort
  overload: EvilDICOM.Network.Association.RequestAbort*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.Association.ToString
  commentId: M:EvilDICOM.Network.Association.ToString
  id: ToString
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Association.ToString()
  fullName: EvilDICOM.Network.Association.ToString()
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: ToString
    path: ../EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 175
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: EvilDICOM.Network.Association.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EvilDICOM.Network.Association.SendMessage(System.Byte[])
  commentId: M:EvilDICOM.Network.Association.SendMessage(System.Byte[])
  id: SendMessage(System.Byte[])
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: SendMessage(Byte[])
  nameWithType: Association.SendMessage(Byte[])
  fullName: EvilDICOM.Network.Association.SendMessage(System.Byte[])
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: SendMessage
    path: ../EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 182
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public void SendMessage(byte[] message)
    parameters:
    - id: message
      type: System.Byte[]
    content.vb: Public Sub SendMessage(message As Byte())
  overload: EvilDICOM.Network.Association.SendMessage*
  nameWithType.vb: Association.SendMessage(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EvilDICOM.Network.Association.SendMessage(System.Byte())
  name.vb: SendMessage(Byte())
- uid: EvilDICOM.Network.Association.SendMessage(EvilDICOM.Network.Interfaces.IPDU)
  commentId: M:EvilDICOM.Network.Association.SendMessage(EvilDICOM.Network.Interfaces.IPDU)
  id: SendMessage(EvilDICOM.Network.Interfaces.IPDU)
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: SendMessage(IPDU)
  nameWithType: Association.SendMessage(IPDU)
  fullName: EvilDICOM.Network.Association.SendMessage(EvilDICOM.Network.Interfaces.IPDU)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: SendMessage
    path: ../EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 190
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public void SendMessage(IPDU message)
    parameters:
    - id: message
      type: EvilDICOM.Network.Interfaces.IPDU
    content.vb: Public Sub SendMessage(message As IPDU)
  overload: EvilDICOM.Network.Association.SendMessage*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.Association.Cancel(EvilDICOM.Network.DIMSE.CCancel)
  commentId: M:EvilDICOM.Network.Association.Cancel(EvilDICOM.Network.DIMSE.CCancel)
  id: Cancel(EvilDICOM.Network.DIMSE.CCancel)
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: Cancel(CCancel)
  nameWithType: Association.Cancel(CCancel)
  fullName: EvilDICOM.Network.Association.Cancel(EvilDICOM.Network.DIMSE.CCancel)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: Cancel
    path: ../EvilDICOM/EvilDICOM/Network/Association.cs
    startLine: 197
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public void Cancel(CCancel cancel)
    parameters:
    - id: cancel
      type: EvilDICOM.Network.DIMSE.CCancel
    content.vb: Public Sub Cancel(cancel As CCancel)
  overload: EvilDICOM.Network.Association.Cancel*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EvilDICOM.Network
  commentId: N:EvilDICOM.Network
  isExternal: false
  name: EvilDICOM.Network
  nameWithType: EvilDICOM.Network
  fullName: EvilDICOM.Network
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EvilDICOM.Network.Association.EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts(IEnumerable{EvilDICOM.Network.PDUs.Items.PresentationContext})
  commentId: M:EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts(EvilDICOM.Network.Association,IEnumerable{EvilDICOM.Network.PDUs.Items.PresentationContext})
  parent: EvilDICOM.Network.Extensions.AssociationExtensions
  definition: EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts(EvilDICOM.Network.Association,IEnumerable{EvilDICOM.Network.PDUs.Items.PresentationContext})
  name: GetResponseContexts(IEnumerable<PresentationContext>)
  nameWithType: AssociationExtensions.GetResponseContexts(IEnumerable<PresentationContext>)
  fullName: EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts(IEnumerable<EvilDICOM.Network.PDUs.Items.PresentationContext>)
  nameWithType.vb: AssociationExtensions.GetResponseContexts(IEnumerable(Of PresentationContext))
  fullName.vb: EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts(IEnumerable(Of EvilDICOM.Network.PDUs.Items.PresentationContext))
  name.vb: GetResponseContexts(IEnumerable(Of PresentationContext))
  spec.csharp:
  - uid: EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts(IEnumerable{EvilDICOM.Network.PDUs.Items.PresentationContext})
    name: GetResponseContexts
    nameWithType: AssociationExtensions.GetResponseContexts
    fullName: EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EvilDICOM.Network.PDUs.Items.PresentationContext
    name: PresentationContext
    nameWithType: PresentationContext
    fullName: EvilDICOM.Network.PDUs.Items.PresentationContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts(IEnumerable{EvilDICOM.Network.PDUs.Items.PresentationContext})
    name: GetResponseContexts
    nameWithType: AssociationExtensions.GetResponseContexts
    fullName: EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EvilDICOM.Network.PDUs.Items.PresentationContext
    name: PresentationContext
    nameWithType: PresentationContext
    fullName: EvilDICOM.Network.PDUs.Items.PresentationContext
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Network.Association.EvilDICOM.Network.Extensions.AssociationExtensions.SetFinalContexts(EvilDICOM.Network.PDUs.Accept)
  commentId: M:EvilDICOM.Network.Extensions.AssociationExtensions.SetFinalContexts(EvilDICOM.Network.Association,EvilDICOM.Network.PDUs.Accept)
  parent: EvilDICOM.Network.Extensions.AssociationExtensions
  definition: EvilDICOM.Network.Extensions.AssociationExtensions.SetFinalContexts(EvilDICOM.Network.Association,EvilDICOM.Network.PDUs.Accept)
  name: SetFinalContexts(Accept)
  nameWithType: AssociationExtensions.SetFinalContexts(Accept)
  fullName: EvilDICOM.Network.Extensions.AssociationExtensions.SetFinalContexts(EvilDICOM.Network.PDUs.Accept)
  spec.csharp:
  - uid: EvilDICOM.Network.Extensions.AssociationExtensions.SetFinalContexts(EvilDICOM.Network.PDUs.Accept)
    name: SetFinalContexts
    nameWithType: AssociationExtensions.SetFinalContexts
    fullName: EvilDICOM.Network.Extensions.AssociationExtensions.SetFinalContexts
  - name: (
    nameWithType: (
    fullName: (
  - uid: EvilDICOM.Network.PDUs.Accept
    name: Accept
    nameWithType: Accept
    fullName: EvilDICOM.Network.PDUs.Accept
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EvilDICOM.Network.Extensions.AssociationExtensions.SetFinalContexts(EvilDICOM.Network.PDUs.Accept)
    name: SetFinalContexts
    nameWithType: AssociationExtensions.SetFinalContexts
    fullName: EvilDICOM.Network.Extensions.AssociationExtensions.SetFinalContexts
  - name: (
    nameWithType: (
    fullName: (
  - uid: EvilDICOM.Network.PDUs.Accept
    name: Accept
    nameWithType: Accept
    fullName: EvilDICOM.Network.PDUs.Accept
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts(EvilDICOM.Network.Association,IEnumerable{EvilDICOM.Network.PDUs.Items.PresentationContext})
  commentId: M:EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts(EvilDICOM.Network.Association,IEnumerable{EvilDICOM.Network.PDUs.Items.PresentationContext})
  isExternal: true
  name: GetResponseContexts(Association, IEnumerable<PresentationContext>)
  nameWithType: AssociationExtensions.GetResponseContexts(Association, IEnumerable<PresentationContext>)
  fullName: EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts(EvilDICOM.Network.Association, IEnumerable<EvilDICOM.Network.PDUs.Items.PresentationContext>)
  nameWithType.vb: AssociationExtensions.GetResponseContexts(Association, IEnumerable(Of PresentationContext))
  fullName.vb: EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts(EvilDICOM.Network.Association, IEnumerable(Of EvilDICOM.Network.PDUs.Items.PresentationContext))
  name.vb: GetResponseContexts(Association, IEnumerable(Of PresentationContext))
  spec.csharp:
  - uid: EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts(EvilDICOM.Network.Association,IEnumerable{EvilDICOM.Network.PDUs.Items.PresentationContext})
    name: GetResponseContexts
    nameWithType: AssociationExtensions.GetResponseContexts
    fullName: EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts
  - name: (
    nameWithType: (
    fullName: (
  - uid: EvilDICOM.Network.Association
    name: Association
    nameWithType: Association
    fullName: EvilDICOM.Network.Association
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EvilDICOM.Network.PDUs.Items.PresentationContext
    name: PresentationContext
    nameWithType: PresentationContext
    fullName: EvilDICOM.Network.PDUs.Items.PresentationContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts(EvilDICOM.Network.Association,IEnumerable{EvilDICOM.Network.PDUs.Items.PresentationContext})
    name: GetResponseContexts
    nameWithType: AssociationExtensions.GetResponseContexts
    fullName: EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts
  - name: (
    nameWithType: (
    fullName: (
  - uid: EvilDICOM.Network.Association
    name: Association
    nameWithType: Association
    fullName: EvilDICOM.Network.Association
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EvilDICOM.Network.PDUs.Items.PresentationContext
    name: PresentationContext
    nameWithType: PresentationContext
    fullName: EvilDICOM.Network.PDUs.Items.PresentationContext
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Network.Extensions.AssociationExtensions
  commentId: T:EvilDICOM.Network.Extensions.AssociationExtensions
  parent: EvilDICOM.Network.Extensions
  isExternal: false
  name: AssociationExtensions
  nameWithType: AssociationExtensions
  fullName: EvilDICOM.Network.Extensions.AssociationExtensions
- uid: EvilDICOM.Network.Extensions.AssociationExtensions.SetFinalContexts(EvilDICOM.Network.Association,EvilDICOM.Network.PDUs.Accept)
  commentId: M:EvilDICOM.Network.Extensions.AssociationExtensions.SetFinalContexts(EvilDICOM.Network.Association,EvilDICOM.Network.PDUs.Accept)
  isExternal: false
  name: SetFinalContexts(Association, Accept)
  nameWithType: AssociationExtensions.SetFinalContexts(Association, Accept)
  fullName: EvilDICOM.Network.Extensions.AssociationExtensions.SetFinalContexts(EvilDICOM.Network.Association, EvilDICOM.Network.PDUs.Accept)
  spec.csharp:
  - uid: EvilDICOM.Network.Extensions.AssociationExtensions.SetFinalContexts(EvilDICOM.Network.Association,EvilDICOM.Network.PDUs.Accept)
    name: SetFinalContexts
    nameWithType: AssociationExtensions.SetFinalContexts
    fullName: EvilDICOM.Network.Extensions.AssociationExtensions.SetFinalContexts
  - name: (
    nameWithType: (
    fullName: (
  - uid: EvilDICOM.Network.Association
    name: Association
    nameWithType: Association
    fullName: EvilDICOM.Network.Association
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EvilDICOM.Network.PDUs.Accept
    name: Accept
    nameWithType: Accept
    fullName: EvilDICOM.Network.PDUs.Accept
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EvilDICOM.Network.Extensions.AssociationExtensions.SetFinalContexts(EvilDICOM.Network.Association,EvilDICOM.Network.PDUs.Accept)
    name: SetFinalContexts
    nameWithType: AssociationExtensions.SetFinalContexts
    fullName: EvilDICOM.Network.Extensions.AssociationExtensions.SetFinalContexts
  - name: (
    nameWithType: (
    fullName: (
  - uid: EvilDICOM.Network.Association
    name: Association
    nameWithType: Association
    fullName: EvilDICOM.Network.Association
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EvilDICOM.Network.PDUs.Accept
    name: Accept
    nameWithType: Accept
    fullName: EvilDICOM.Network.PDUs.Accept
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Network.Extensions
  commentId: N:EvilDICOM.Network.Extensions
  isExternal: false
  name: EvilDICOM.Network.Extensions
  nameWithType: EvilDICOM.Network.Extensions
  fullName: EvilDICOM.Network.Extensions
- uid: EvilDICOM.Network.Association.#ctor*
  commentId: Overload:EvilDICOM.Network.Association.#ctor
  isExternal: false
  name: Association
  nameWithType: Association.Association
  fullName: EvilDICOM.Network.Association.Association
- uid: EvilDICOM.Network.DICOMServiceClass
  commentId: T:EvilDICOM.Network.DICOMServiceClass
  parent: EvilDICOM.Network
  isExternal: false
  name: DICOMServiceClass
  nameWithType: DICOMServiceClass
  fullName: EvilDICOM.Network.DICOMServiceClass
- uid: TcpClient
  commentId: '!:TcpClient'
  isExternal: true
  name: TcpClient
  nameWithType: TcpClient
  fullName: TcpClient
- uid: EvilDICOM.Network.Association.ServiceClass*
  commentId: Overload:EvilDICOM.Network.Association.ServiceClass
  isExternal: false
  name: ServiceClass
  nameWithType: Association.ServiceClass
  fullName: EvilDICOM.Network.Association.ServiceClass
- uid: EvilDICOM.Network.Association.PresentationContexts*
  commentId: Overload:EvilDICOM.Network.Association.PresentationContexts
  isExternal: false
  name: PresentationContexts
  nameWithType: Association.PresentationContexts
  fullName: EvilDICOM.Network.Association.PresentationContexts
- uid: List{EvilDICOM.Network.PDUs.Items.PresentationContext}
  commentId: '!:List{EvilDICOM.Network.PDUs.Items.PresentationContext}'
  definition: List`1
  name: List<PresentationContext>
  nameWithType: List<PresentationContext>
  fullName: List<EvilDICOM.Network.PDUs.Items.PresentationContext>
  nameWithType.vb: List(Of PresentationContext)
  fullName.vb: List(Of EvilDICOM.Network.PDUs.Items.PresentationContext)
  name.vb: List(Of PresentationContext)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EvilDICOM.Network.PDUs.Items.PresentationContext
    name: PresentationContext
    nameWithType: PresentationContext
    fullName: EvilDICOM.Network.PDUs.Items.PresentationContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EvilDICOM.Network.PDUs.Items.PresentationContext
    name: PresentationContext
    nameWithType: PresentationContext
    fullName: EvilDICOM.Network.PDUs.Items.PresentationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Network.Association.LastActive*
  commentId: Overload:EvilDICOM.Network.Association.LastActive
  isExternal: false
  name: LastActive
  nameWithType: Association.LastActive
  fullName: EvilDICOM.Network.Association.LastActive
- uid: DateTime
  commentId: '!:DateTime'
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: DateTime
- uid: EvilDICOM.Network.Association.UserInfo*
  commentId: Overload:EvilDICOM.Network.Association.UserInfo
  isExternal: false
  name: UserInfo
  nameWithType: Association.UserInfo
  fullName: EvilDICOM.Network.Association.UserInfo
- uid: EvilDICOM.Network.PDUs.Items.UserInfo
  commentId: T:EvilDICOM.Network.PDUs.Items.UserInfo
  parent: EvilDICOM.Network.PDUs.Items
  isExternal: false
  name: UserInfo
  nameWithType: UserInfo
  fullName: EvilDICOM.Network.PDUs.Items.UserInfo
- uid: EvilDICOM.Network.PDUs.Items
  commentId: N:EvilDICOM.Network.PDUs.Items
  isExternal: false
  name: EvilDICOM.Network.PDUs.Items
  nameWithType: EvilDICOM.Network.PDUs.Items
  fullName: EvilDICOM.Network.PDUs.Items
- uid: EvilDICOM.Network.Association.PDUProcessor*
  commentId: Overload:EvilDICOM.Network.Association.PDUProcessor
  isExternal: false
  name: PDUProcessor
  nameWithType: Association.PDUProcessor
  fullName: EvilDICOM.Network.Association.PDUProcessor
- uid: EvilDICOM.Network.Processors.PDUProcessor
  commentId: T:EvilDICOM.Network.Processors.PDUProcessor
  parent: EvilDICOM.Network.Processors
  isExternal: false
  name: PDUProcessor
  nameWithType: PDUProcessor
  fullName: EvilDICOM.Network.Processors.PDUProcessor
- uid: EvilDICOM.Network.Processors
  commentId: N:EvilDICOM.Network.Processors
  isExternal: false
  name: EvilDICOM.Network.Processors
  nameWithType: EvilDICOM.Network.Processors
  fullName: EvilDICOM.Network.Processors
- uid: EvilDICOM.Network.Association.PDataProcessor*
  commentId: Overload:EvilDICOM.Network.Association.PDataProcessor
  isExternal: false
  name: PDataProcessor
  nameWithType: Association.PDataProcessor
  fullName: EvilDICOM.Network.Association.PDataProcessor
- uid: EvilDICOM.Network.Processors.PDataProcessor
  commentId: T:EvilDICOM.Network.Processors.PDataProcessor
  parent: EvilDICOM.Network.Processors
  isExternal: false
  name: PDataProcessor
  nameWithType: PDataProcessor
  fullName: EvilDICOM.Network.Processors.PDataProcessor
- uid: EvilDICOM.Network.Association.Logger*
  commentId: Overload:EvilDICOM.Network.Association.Logger
  isExternal: false
  name: Logger
  nameWithType: Association.Logger
  fullName: EvilDICOM.Network.Association.Logger
- uid: EvilDICOM.Core.Logging.EventLogger
  commentId: T:EvilDICOM.Core.Logging.EventLogger
  parent: EvilDICOM.Core.Logging
  isExternal: false
  name: EventLogger
  nameWithType: EventLogger
  fullName: EvilDICOM.Core.Logging.EventLogger
- uid: EvilDICOM.Core.Logging
  commentId: N:EvilDICOM.Core.Logging
  isExternal: false
  name: EvilDICOM.Core.Logging
  nameWithType: EvilDICOM.Core.Logging
  fullName: EvilDICOM.Core.Logging
- uid: EvilDICOM.Network.Association.OutboundMessages*
  commentId: Overload:EvilDICOM.Network.Association.OutboundMessages
  isExternal: false
  name: OutboundMessages
  nameWithType: Association.OutboundMessages
  fullName: EvilDICOM.Network.Association.OutboundMessages
- uid: ConcurrentQueue{EvilDICOM.Network.DIMSE.AbstractDIMSEBase}
  commentId: '!:ConcurrentQueue{EvilDICOM.Network.DIMSE.AbstractDIMSEBase}'
  definition: ConcurrentQueue`1
  name: ConcurrentQueue<AbstractDIMSEBase>
  nameWithType: ConcurrentQueue<AbstractDIMSEBase>
  fullName: ConcurrentQueue<EvilDICOM.Network.DIMSE.AbstractDIMSEBase>
  nameWithType.vb: ConcurrentQueue(Of AbstractDIMSEBase)
  fullName.vb: ConcurrentQueue(Of EvilDICOM.Network.DIMSE.AbstractDIMSEBase)
  name.vb: ConcurrentQueue(Of AbstractDIMSEBase)
  spec.csharp:
  - uid: ConcurrentQueue`1
    name: ConcurrentQueue
    nameWithType: ConcurrentQueue
    fullName: ConcurrentQueue
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EvilDICOM.Network.DIMSE.AbstractDIMSEBase
    name: AbstractDIMSEBase
    nameWithType: AbstractDIMSEBase
    fullName: EvilDICOM.Network.DIMSE.AbstractDIMSEBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ConcurrentQueue`1
    name: ConcurrentQueue
    nameWithType: ConcurrentQueue
    fullName: ConcurrentQueue
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EvilDICOM.Network.DIMSE.AbstractDIMSEBase
    name: AbstractDIMSEBase
    nameWithType: AbstractDIMSEBase
    fullName: EvilDICOM.Network.DIMSE.AbstractDIMSEBase
  - name: )
    nameWithType: )
    fullName: )
- uid: ConcurrentQueue`1
  commentId: '!:ConcurrentQueue`1'
  isExternal: true
  name: ConcurrentQueue<>
  nameWithType: ConcurrentQueue<>
  fullName: ConcurrentQueue<>
  nameWithType.vb: ConcurrentQueue(Of )
  fullName.vb: ConcurrentQueue(Of )
  name.vb: ConcurrentQueue(Of )
  spec.csharp:
  - uid: ConcurrentQueue`1
    name: ConcurrentQueue
    nameWithType: ConcurrentQueue
    fullName: ConcurrentQueue
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ConcurrentQueue`1
    name: ConcurrentQueue
    nameWithType: ConcurrentQueue
    fullName: ConcurrentQueue
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Network.Association.Stream*
  commentId: Overload:EvilDICOM.Network.Association.Stream
  isExternal: false
  name: Stream
  nameWithType: Association.Stream
  fullName: EvilDICOM.Network.Association.Stream
- uid: BufferedStream
  isExternal: true
  name: BufferedStream
  nameWithType: BufferedStream
  fullName: BufferedStream
- uid: EvilDICOM.Network.Association.Reader*
  commentId: Overload:EvilDICOM.Network.Association.Reader
  isExternal: false
  name: Reader
  nameWithType: Association.Reader
  fullName: EvilDICOM.Network.Association.Reader
- uid: EvilDICOM.Network.Readers.NetworkBinaryReader
  commentId: T:EvilDICOM.Network.Readers.NetworkBinaryReader
  parent: EvilDICOM.Network.Readers
  isExternal: false
  name: NetworkBinaryReader
  nameWithType: NetworkBinaryReader
  fullName: EvilDICOM.Network.Readers.NetworkBinaryReader
- uid: EvilDICOM.Network.Readers
  commentId: N:EvilDICOM.Network.Readers
  isExternal: false
  name: EvilDICOM.Network.Readers
  nameWithType: EvilDICOM.Network.Readers
  fullName: EvilDICOM.Network.Readers
- uid: EvilDICOM.Network.Association.State*
  commentId: Overload:EvilDICOM.Network.Association.State
  isExternal: false
  name: State
  nameWithType: Association.State
  fullName: EvilDICOM.Network.Association.State
- uid: EvilDICOM.Network.Enums.NetworkState
  commentId: T:EvilDICOM.Network.Enums.NetworkState
  parent: EvilDICOM.Network.Enums
  isExternal: false
  name: NetworkState
  nameWithType: NetworkState
  fullName: EvilDICOM.Network.Enums.NetworkState
- uid: EvilDICOM.Network.Enums
  commentId: N:EvilDICOM.Network.Enums
  isExternal: false
  name: EvilDICOM.Network.Enums
  nameWithType: EvilDICOM.Network.Enums
  fullName: EvilDICOM.Network.Enums
- uid: EvilDICOM.Network.Association.AeTitle*
  commentId: Overload:EvilDICOM.Network.Association.AeTitle
  isExternal: false
  name: AeTitle
  nameWithType: Association.AeTitle
  fullName: EvilDICOM.Network.Association.AeTitle
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EvilDICOM.Network.Association.IpAddress*
  commentId: Overload:EvilDICOM.Network.Association.IpAddress
  isExternal: false
  name: IpAddress
  nameWithType: Association.IpAddress
  fullName: EvilDICOM.Network.Association.IpAddress
- uid: EvilDICOM.Network.Association.Port*
  commentId: Overload:EvilDICOM.Network.Association.Port
  isExternal: false
  name: Port
  nameWithType: Association.Port
  fullName: EvilDICOM.Network.Association.Port
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EvilDICOM.Network.Association.Listen*
  commentId: Overload:EvilDICOM.Network.Association.Listen
  isExternal: false
  name: Listen
  nameWithType: Association.Listen
  fullName: EvilDICOM.Network.Association.Listen
- uid: System.Nullable{TimeSpan}
  commentId: '!:System.Nullable{TimeSpan}'
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
  fullName.vb: System.Nullable(Of TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Network.Association.Read*
  commentId: Overload:EvilDICOM.Network.Association.Read
  isExternal: false
  name: Read
  nameWithType: Association.Read
  fullName: EvilDICOM.Network.Association.Read
- uid: EvilDICOM.Network.Interfaces.IMessage
  commentId: T:EvilDICOM.Network.Interfaces.IMessage
  parent: EvilDICOM.Network.Interfaces
  isExternal: false
  name: IMessage
  nameWithType: IMessage
  fullName: EvilDICOM.Network.Interfaces.IMessage
- uid: EvilDICOM.Network.Interfaces
  commentId: N:EvilDICOM.Network.Interfaces
  isExternal: false
  name: EvilDICOM.Network.Interfaces
  nameWithType: EvilDICOM.Network.Interfaces
  fullName: EvilDICOM.Network.Interfaces
- uid: EvilDICOM.Network.Association.Process*
  commentId: Overload:EvilDICOM.Network.Association.Process
  isExternal: false
  name: Process
  nameWithType: Association.Process
  fullName: EvilDICOM.Network.Association.Process
- uid: EvilDICOM.Network.Association.Release*
  commentId: Overload:EvilDICOM.Network.Association.Release
  isExternal: false
  name: Release
  nameWithType: Association.Release
  fullName: EvilDICOM.Network.Association.Release
- uid: EvilDICOM.Network.Association.RequestAbort*
  commentId: Overload:EvilDICOM.Network.Association.RequestAbort
  isExternal: false
  name: RequestAbort
  nameWithType: Association.RequestAbort
  fullName: EvilDICOM.Network.Association.RequestAbort
- uid: EvilDICOM.Network.Association.ToString*
  commentId: Overload:EvilDICOM.Network.Association.ToString
  isExternal: false
  name: ToString
  nameWithType: Association.ToString
  fullName: EvilDICOM.Network.Association.ToString
- uid: EvilDICOM.Network.Association.SendMessage*
  commentId: Overload:EvilDICOM.Network.Association.SendMessage
  isExternal: false
  name: SendMessage
  nameWithType: Association.SendMessage
  fullName: EvilDICOM.Network.Association.SendMessage
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EvilDICOM.Network.Interfaces.IPDU
  commentId: T:EvilDICOM.Network.Interfaces.IPDU
  parent: EvilDICOM.Network.Interfaces
  isExternal: false
  name: IPDU
  nameWithType: IPDU
  fullName: EvilDICOM.Network.Interfaces.IPDU
- uid: EvilDICOM.Network.Association.Cancel*
  commentId: Overload:EvilDICOM.Network.Association.Cancel
  isExternal: false
  name: Cancel
  nameWithType: Association.Cancel
  fullName: EvilDICOM.Network.Association.Cancel
- uid: EvilDICOM.Network.DIMSE.CCancel
  commentId: T:EvilDICOM.Network.DIMSE.CCancel
  parent: EvilDICOM.Network.DIMSE
  isExternal: false
  name: CCancel
  nameWithType: CCancel
  fullName: EvilDICOM.Network.DIMSE.CCancel
- uid: EvilDICOM.Network.DIMSE
  commentId: N:EvilDICOM.Network.DIMSE
  isExternal: false
  name: EvilDICOM.Network.DIMSE
  nameWithType: EvilDICOM.Network.DIMSE
  fullName: EvilDICOM.Network.DIMSE
