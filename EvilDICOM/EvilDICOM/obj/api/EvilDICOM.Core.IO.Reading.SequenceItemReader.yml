items:
- uid: EvilDICOM.Core.IO.Reading.SequenceItemReader
  id: SequenceItemReader
  parent: EvilDICOM.Core.IO.Reading
  children:
  - EvilDICOM.Core.IO.Reading.SequenceItemReader.ReadBigEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader,EvilDICOM.Core.Enums.TransferSyntax)
  - EvilDICOM.Core.IO.Reading.SequenceItemReader.ReadLittleEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader,EvilDICOM.Core.Enums.TransferSyntax)
  - EvilDICOM.Core.IO.Reading.SequenceItemReader.SkipItemBigEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  - EvilDICOM.Core.IO.Reading.SequenceItemReader.SkipItemLittleEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader,EvilDICOM.Core.Enums.TransferSyntax)
  langs:
  - csharp
  - vb
  name: SequenceItemReader
  fullName: EvilDICOM.Core.IO.Reading.SequenceItemReader
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Reading/SequenceItemReader.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/IO/Reading/SequenceItemReader.cs
    startLine: 7
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Reading
  syntax:
    content: public class SequenceItemReader
    content.vb: Public Class SequenceItemReader
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: EvilDICOM.Core.IO.Reading.SequenceItemReader.ReadLittleEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader,EvilDICOM.Core.Enums.TransferSyntax)
  id: ReadLittleEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader,EvilDICOM.Core.Enums.TransferSyntax)
  parent: EvilDICOM.Core.IO.Reading.SequenceItemReader
  langs:
  - csharp
  - vb
  name: ReadLittleEndian(DICOMBinaryReader, TransferSyntax)
  fullName: EvilDICOM.Core.IO.Reading.SequenceItemReader.ReadLittleEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader, EvilDICOM.Core.Enums.TransferSyntax)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Reading/SequenceItemReader.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/IO/Reading/SequenceItemReader.cs
    startLine: 12
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Reading
  syntax:
    content: public static DICOMObject ReadLittleEndian(DICOMBinaryReader dr, TransferSyntax syntax)
    content.vb: Public Shared Function ReadLittleEndian(dr As DICOMBinaryReader, syntax As TransferSyntax) As DICOMObject
    parameters:
    - id: dr
      type: EvilDICOM.Core.IO.Reading.DICOMBinaryReader
    - id: syntax
      type: EvilDICOM.Core.Enums.TransferSyntax
    return:
      type: EvilDICOM.Core.DICOMObject
- uid: EvilDICOM.Core.IO.Reading.SequenceItemReader.ReadBigEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader,EvilDICOM.Core.Enums.TransferSyntax)
  id: ReadBigEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader,EvilDICOM.Core.Enums.TransferSyntax)
  parent: EvilDICOM.Core.IO.Reading.SequenceItemReader
  langs:
  - csharp
  - vb
  name: ReadBigEndian(DICOMBinaryReader, TransferSyntax)
  fullName: EvilDICOM.Core.IO.Reading.SequenceItemReader.ReadBigEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader, EvilDICOM.Core.Enums.TransferSyntax)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Reading/SequenceItemReader.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/IO/Reading/SequenceItemReader.cs
    startLine: 28
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Reading
  syntax:
    content: public static DICOMObject ReadBigEndian(DICOMBinaryReader dr, TransferSyntax syntax)
    content.vb: Public Shared Function ReadBigEndian(dr As DICOMBinaryReader, syntax As TransferSyntax) As DICOMObject
    parameters:
    - id: dr
      type: EvilDICOM.Core.IO.Reading.DICOMBinaryReader
    - id: syntax
      type: EvilDICOM.Core.Enums.TransferSyntax
    return:
      type: EvilDICOM.Core.DICOMObject
- uid: EvilDICOM.Core.IO.Reading.SequenceItemReader.SkipItemLittleEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader,EvilDICOM.Core.Enums.TransferSyntax)
  id: SkipItemLittleEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader,EvilDICOM.Core.Enums.TransferSyntax)
  parent: EvilDICOM.Core.IO.Reading.SequenceItemReader
  langs:
  - csharp
  - vb
  name: SkipItemLittleEndian(DICOMBinaryReader, TransferSyntax)
  fullName: EvilDICOM.Core.IO.Reading.SequenceItemReader.SkipItemLittleEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader, EvilDICOM.Core.Enums.TransferSyntax)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Reading/SequenceItemReader.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/IO/Reading/SequenceItemReader.cs
    startLine: 44
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Reading
  syntax:
    content: public static void SkipItemLittleEndian(DICOMBinaryReader dr, TransferSyntax syntax)
    content.vb: Public Shared Sub SkipItemLittleEndian(dr As DICOMBinaryReader, syntax As TransferSyntax)
    parameters:
    - id: dr
      type: EvilDICOM.Core.IO.Reading.DICOMBinaryReader
    - id: syntax
      type: EvilDICOM.Core.Enums.TransferSyntax
- uid: EvilDICOM.Core.IO.Reading.SequenceItemReader.SkipItemBigEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  id: SkipItemBigEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  parent: EvilDICOM.Core.IO.Reading.SequenceItemReader
  langs:
  - csharp
  - vb
  name: SkipItemBigEndian(DICOMBinaryReader)
  fullName: EvilDICOM.Core.IO.Reading.SequenceItemReader.SkipItemBigEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Reading/SequenceItemReader.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/IO/Reading/SequenceItemReader.cs
    startLine: 72
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Reading
  syntax:
    content: public static void SkipItemBigEndian(DICOMBinaryReader dr)
    content.vb: Public Shared Sub SkipItemBigEndian(dr As DICOMBinaryReader)
    parameters:
    - id: dr
      type: EvilDICOM.Core.IO.Reading.DICOMBinaryReader
references:
- uid: EvilDICOM.Core.IO.Reading
  isExternal: false
  name: EvilDICOM.Core.IO.Reading
  fullName: EvilDICOM.Core.IO.Reading
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: EvilDICOM.Core.IO.Reading.DICOMBinaryReader
  parent: EvilDICOM.Core.IO.Reading
  isExternal: false
  name: DICOMBinaryReader
  fullName: EvilDICOM.Core.IO.Reading.DICOMBinaryReader
- uid: EvilDICOM.Core.Enums.TransferSyntax
  parent: EvilDICOM.Core.Enums
  isExternal: false
  name: TransferSyntax
  fullName: EvilDICOM.Core.Enums.TransferSyntax
- uid: EvilDICOM.Core.DICOMObject
  parent: EvilDICOM.Core
  isExternal: false
  name: DICOMObject
  fullName: EvilDICOM.Core.DICOMObject
- uid: EvilDICOM.Core.Enums
  isExternal: false
  name: EvilDICOM.Core.Enums
  fullName: EvilDICOM.Core.Enums
- uid: EvilDICOM.Core
  isExternal: false
  name: EvilDICOM.Core
  fullName: EvilDICOM.Core
