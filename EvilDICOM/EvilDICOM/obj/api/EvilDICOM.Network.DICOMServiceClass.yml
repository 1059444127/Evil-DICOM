items:
- uid: EvilDICOM.Network.DICOMServiceClass
  id: DICOMServiceClass
  parent: EvilDICOM.Network
  children:
  - EvilDICOM.Network.DICOMServiceClass.#ctor(EvilDICOM.Network.Entity)
  - EvilDICOM.Network.DICOMServiceClass.ApplicationEntity
  - EvilDICOM.Network.DICOMServiceClass.AssociationService
  - EvilDICOM.Network.DICOMServiceClass.DIMSEService
  - EvilDICOM.Network.DICOMServiceClass.Logger
  - EvilDICOM.Network.DICOMServiceClass.SupportedAbstractSyntaxes
  - EvilDICOM.Network.DICOMServiceClass.SupportedTransferSyntaxes
  langs:
  - csharp
  - vb
  name: DICOMServiceClass
  fullName: EvilDICOM.Network.DICOMServiceClass
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMServiceClass.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/DICOMServiceClass.cs
    startLine: 8
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public abstract class DICOMServiceClass
    content.vb: Public MustInherit Class DICOMServiceClass
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: EvilDICOM.Network.DICOMServiceClass.#ctor(EvilDICOM.Network.Entity)
  id: '#ctor(EvilDICOM.Network.Entity)'
  parent: EvilDICOM.Network.DICOMServiceClass
  langs:
  - csharp
  - vb
  name: DICOMServiceClass(Entity)
  fullName: EvilDICOM.Network.DICOMServiceClass.DICOMServiceClass(EvilDICOM.Network.Entity)
  type: Constructor
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMServiceClass.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/DICOMServiceClass.cs
    startLine: 10
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public DICOMServiceClass(Entity ae)
    content.vb: Public Sub New(ae As Entity)
    parameters:
    - id: ae
      type: EvilDICOM.Network.Entity
- uid: EvilDICOM.Network.DICOMServiceClass.AssociationService
  id: AssociationService
  parent: EvilDICOM.Network.DICOMServiceClass
  langs:
  - csharp
  - vb
  name: AssociationService
  fullName: EvilDICOM.Network.DICOMServiceClass.AssociationService
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMServiceClass.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/DICOMServiceClass.cs
    startLine: 24
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public AssociationService AssociationService { get; set; }
    content.vb: Public Property AssociationService As AssociationService
    parameters: []
    return:
      type: EvilDICOM.Network.Services.AssociationService
- uid: EvilDICOM.Network.DICOMServiceClass.DIMSEService
  id: DIMSEService
  parent: EvilDICOM.Network.DICOMServiceClass
  langs:
  - csharp
  - vb
  name: DIMSEService
  fullName: EvilDICOM.Network.DICOMServiceClass.DIMSEService
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMServiceClass.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/DICOMServiceClass.cs
    startLine: 25
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public DIMSEService DIMSEService { get; set; }
    content.vb: Public Property DIMSEService As DIMSEService
    parameters: []
    return:
      type: EvilDICOM.Network.Services.DIMSEService
- uid: EvilDICOM.Network.DICOMServiceClass.ApplicationEntity
  id: ApplicationEntity
  parent: EvilDICOM.Network.DICOMServiceClass
  langs:
  - csharp
  - vb
  name: ApplicationEntity
  fullName: EvilDICOM.Network.DICOMServiceClass.ApplicationEntity
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMServiceClass.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/DICOMServiceClass.cs
    startLine: 26
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public Entity ApplicationEntity { get; set; }
    content.vb: Public Property ApplicationEntity As Entity
    parameters: []
    return:
      type: EvilDICOM.Network.Entity
- uid: EvilDICOM.Network.DICOMServiceClass.SupportedTransferSyntaxes
  id: SupportedTransferSyntaxes
  parent: EvilDICOM.Network.DICOMServiceClass
  langs:
  - csharp
  - vb
  name: SupportedTransferSyntaxes
  fullName: EvilDICOM.Network.DICOMServiceClass.SupportedTransferSyntaxes
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMServiceClass.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/DICOMServiceClass.cs
    startLine: 27
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public List<string> SupportedTransferSyntaxes { get; set; }
    content.vb: Public Property SupportedTransferSyntaxes As List(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
- uid: EvilDICOM.Network.DICOMServiceClass.SupportedAbstractSyntaxes
  id: SupportedAbstractSyntaxes
  parent: EvilDICOM.Network.DICOMServiceClass
  langs:
  - csharp
  - vb
  name: SupportedAbstractSyntaxes
  fullName: EvilDICOM.Network.DICOMServiceClass.SupportedAbstractSyntaxes
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMServiceClass.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/DICOMServiceClass.cs
    startLine: 28
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public List<string> SupportedAbstractSyntaxes { get; set; }
    content.vb: Public Property SupportedAbstractSyntaxes As List(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
- uid: EvilDICOM.Network.DICOMServiceClass.Logger
  id: Logger
  parent: EvilDICOM.Network.DICOMServiceClass
  langs:
  - csharp
  - vb
  name: Logger
  fullName: EvilDICOM.Network.DICOMServiceClass.Logger
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMServiceClass.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/DICOMServiceClass.cs
    startLine: 29
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public EventLogger Logger { get; set; }
    content.vb: Public Property Logger As EventLogger
    parameters: []
    return:
      type: EvilDICOM.Core.Logging.EventLogger
references:
- uid: EvilDICOM.Network
  isExternal: false
  name: EvilDICOM.Network
  fullName: EvilDICOM.Network
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: EvilDICOM.Network.Entity
  parent: EvilDICOM.Network
  isExternal: false
  name: Entity
  fullName: EvilDICOM.Network.Entity
- uid: EvilDICOM.Network.Services.AssociationService
  parent: EvilDICOM.Network.Services
  isExternal: false
  name: AssociationService
  fullName: EvilDICOM.Network.Services.AssociationService
- uid: EvilDICOM.Network.Services
  isExternal: false
  name: EvilDICOM.Network.Services
  fullName: EvilDICOM.Network.Services
- uid: EvilDICOM.Network.Services.DIMSEService
  parent: EvilDICOM.Network.Services
  isExternal: false
  name: DIMSEService
  fullName: EvilDICOM.Network.Services.DIMSEService
- uid: System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  fullName: System.Collections.Generic.List<System.String>
  fullname.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.List`1
  parent: System.Collections.Generic
  isExternal: true
  name: List<T>
  fullName: System.Collections.Generic.List<T>
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: EvilDICOM.Core.Logging.EventLogger
  parent: EvilDICOM.Core.Logging
  isExternal: false
  name: EventLogger
  fullName: EvilDICOM.Core.Logging.EventLogger
- uid: EvilDICOM.Core.Logging
  isExternal: false
  name: EvilDICOM.Core.Logging
  fullName: EvilDICOM.Core.Logging
