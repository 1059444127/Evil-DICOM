items:
- uid: EvilDICOM.Core.Selection.ListExtensions
  id: ListExtensions
  parent: EvilDICOM.Core.Selection
  children:
  - EvilDICOM.Core.Selection.ListExtensions.FindAll``1(System.Collections.Generic.List{EvilDICOM.Core.Selection.DICOMSelector},System.String)
  - EvilDICOM.Core.Selection.ListExtensions.FindFirst``1(System.Collections.Generic.List{EvilDICOM.Core.Selection.DICOMSelector},System.String)
  langs:
  - csharp
  - vb
  name: ListExtensions
  fullName: EvilDICOM.Core.Selection.ListExtensions
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Selection/ListExtensions.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/Selection/ListExtensions.cs
    startLine: 5
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Selection
  syntax:
    content: public class ListExtensions
    content.vb: Public Class ListExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: EvilDICOM.Core.Selection.ListExtensions.FindFirst``1(System.Collections.Generic.List{EvilDICOM.Core.Selection.DICOMSelector},System.String)
  id: FindFirst``1(System.Collections.Generic.List{EvilDICOM.Core.Selection.DICOMSelector},System.String)
  parent: EvilDICOM.Core.Selection.ListExtensions
  langs:
  - csharp
  - vb
  name: FindFirst<T>(List<DICOMSelector>, String)
  name.vb: FindFirst(Of T)(List(Of DICOMSelector), String)
  fullName: EvilDICOM.Core.Selection.ListExtensions.FindFirst<T>(System.Collections.Generic.List<EvilDICOM.Core.Selection.DICOMSelector>, System.String)
  fullName.vb: EvilDICOM.Core.Selection.ListExtensions.FindFirst(Of T)(System.Collections.Generic.List(Of EvilDICOM.Core.Selection.DICOMSelector), System.String)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Selection/ListExtensions.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/Selection/ListExtensions.cs
    startLine: 7
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Selection
  syntax:
    content: public static T FindFirst<T>(List<DICOMSelector> items, string tagId)
    content.vb: Public Shared Function FindFirst(Of T)(items As List(Of DICOMSelector), tagId As String) As T
    parameters:
    - id: items
      type: System.Collections.Generic.List{EvilDICOM.Core.Selection.DICOMSelector}
    - id: tagId
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
- uid: EvilDICOM.Core.Selection.ListExtensions.FindAll``1(System.Collections.Generic.List{EvilDICOM.Core.Selection.DICOMSelector},System.String)
  id: FindAll``1(System.Collections.Generic.List{EvilDICOM.Core.Selection.DICOMSelector},System.String)
  parent: EvilDICOM.Core.Selection.ListExtensions
  langs:
  - csharp
  - vb
  name: FindAll<T>(List<DICOMSelector>, String)
  name.vb: FindAll(Of T)(List(Of DICOMSelector), String)
  fullName: EvilDICOM.Core.Selection.ListExtensions.FindAll<T>(System.Collections.Generic.List<EvilDICOM.Core.Selection.DICOMSelector>, System.String)
  fullName.vb: EvilDICOM.Core.Selection.ListExtensions.FindAll(Of T)(System.Collections.Generic.List(Of EvilDICOM.Core.Selection.DICOMSelector), System.String)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Selection/ListExtensions.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/Selection/ListExtensions.cs
    startLine: 20
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Selection
  syntax:
    content: public static List<T> FindAll<T>(List<DICOMSelector> items, string tagId)
    content.vb: Public Shared Function FindAll(Of T)(items As List(Of DICOMSelector), tagId As String) As List(Of T)
    parameters:
    - id: items
      type: System.Collections.Generic.List{EvilDICOM.Core.Selection.DICOMSelector}
    - id: tagId
      type: System.String
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.List{{T}}
references:
- uid: EvilDICOM.Core.Selection
  isExternal: false
  name: EvilDICOM.Core.Selection
  fullName: EvilDICOM.Core.Selection
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.List{EvilDICOM.Core.Selection.DICOMSelector}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<DICOMSelector>
  fullName: System.Collections.Generic.List<EvilDICOM.Core.Selection.DICOMSelector>
  fullname.vb: System.Collections.Generic.List(Of EvilDICOM.Core.Selection.DICOMSelector)
  name.vb: List(Of DICOMSelector)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    fullName: <
  - uid: EvilDICOM.Core.Selection.DICOMSelector
    name: DICOMSelector
    fullName: EvilDICOM.Core.Selection.DICOMSelector
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: EvilDICOM.Core.Selection.DICOMSelector
    name: DICOMSelector
    fullName: EvilDICOM.Core.Selection.DICOMSelector
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: System.Collections.Generic.List`1
  parent: System.Collections.Generic
  isExternal: true
  name: List<T>
  fullName: System.Collections.Generic.List<T>
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.List{{T}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<T>
  fullName: System.Collections.Generic.List<T>
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
