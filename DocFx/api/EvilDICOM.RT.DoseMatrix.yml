### YamlMime:ManagedReference
items:
- uid: EvilDICOM.RT.DoseMatrix
  commentId: T:EvilDICOM.RT.DoseMatrix
  id: DoseMatrix
  parent: EvilDICOM.RT
  children:
  - EvilDICOM.RT.DoseMatrix.#ctor(EvilDICOM.Core.DICOMObject)
  - EvilDICOM.RT.DoseMatrix.ConvertRelToAbs(System.Double)
  - EvilDICOM.RT.DoseMatrix.DimensionX
  - EvilDICOM.RT.DoseMatrix.DimensionY
  - EvilDICOM.RT.DoseMatrix.DimensionZ
  - EvilDICOM.RT.DoseMatrix.DirectionalCosines
  - EvilDICOM.RT.DoseMatrix.DoseValues
  - EvilDICOM.RT.DoseMatrix.GetLineDose(EvilDICOM.Core.Helpers.Vector3,EvilDICOM.Core.Helpers.Vector3,System.Double)
  - EvilDICOM.RT.DoseMatrix.GetPointDose(EvilDICOM.Core.Helpers.Vector3)
  - EvilDICOM.RT.DoseMatrix.GetPointDose(System.Double,System.Double,System.Double)
  - EvilDICOM.RT.DoseMatrix.IndexToLatticeXYZ(System.Int32,System.Int32@,System.Int32@,System.Int32@)
  - EvilDICOM.RT.DoseMatrix.LatticeXYZToIndex(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)
  - EvilDICOM.RT.DoseMatrix.LatticeXYZToIndex(System.Int32,System.Int32,System.Int32,System.Int32@)
  - EvilDICOM.RT.DoseMatrix.Load(System.String)
  - EvilDICOM.RT.DoseMatrix.MaxPointDose
  - EvilDICOM.RT.DoseMatrix.Save(System.String)
  - EvilDICOM.RT.DoseMatrix.Scaling
  - EvilDICOM.RT.DoseMatrix.ToDICOM
  - EvilDICOM.RT.DoseMatrix.ValueSizeInBytes
  - EvilDICOM.RT.DoseMatrix.X0
  - EvilDICOM.RT.DoseMatrix.XMax
  - EvilDICOM.RT.DoseMatrix.XRes
  - EvilDICOM.RT.DoseMatrix.Y0
  - EvilDICOM.RT.DoseMatrix.YMax
  - EvilDICOM.RT.DoseMatrix.YRes
  - EvilDICOM.RT.DoseMatrix.Z0
  - EvilDICOM.RT.DoseMatrix.ZMax
  - EvilDICOM.RT.DoseMatrix.ZRes
  langs:
  - csharp
  - vb
  name: DoseMatrix
  nameWithType: DoseMatrix
  fullName: EvilDICOM.RT.DoseMatrix
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: DoseMatrix
    path: ../EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
    startLine: 14
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.RT
  syntax:
    content: 'public class DoseMatrix : object'
    content.vb: >-
      Public Class DoseMatrix
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EvilDICOM.RT.DoseMatrix.DoseValues
  commentId: P:EvilDICOM.RT.DoseMatrix.DoseValues
  id: DoseValues
  parent: EvilDICOM.RT.DoseMatrix
  langs:
  - csharp
  - vb
  name: DoseValues
  nameWithType: DoseMatrix.DoseValues
  fullName: EvilDICOM.RT.DoseMatrix.DoseValues
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: DoseValues
    path: ../EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
    startLine: 17
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.RT
  syntax:
    content: public List<double> DoseValues { get; set; }
    parameters: []
    return:
      type: List{System.Double}
    content.vb: Public Property DoseValues As List(Of Double)
  overload: EvilDICOM.RT.DoseMatrix.DoseValues*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.RT.DoseMatrix.Load(System.String)
  commentId: M:EvilDICOM.RT.DoseMatrix.Load(System.String)
  id: Load(System.String)
  parent: EvilDICOM.RT.DoseMatrix
  langs:
  - csharp
  - vb
  name: Load(String)
  nameWithType: DoseMatrix.Load(String)
  fullName: EvilDICOM.RT.DoseMatrix.Load(System.String)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: Load
    path: ../EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
    startLine: 19
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.RT
  syntax:
    content: public static DoseMatrix Load(string dcmFile)
    parameters:
    - id: dcmFile
      type: System.String
    return:
      type: EvilDICOM.RT.DoseMatrix
    content.vb: Public Shared Function Load(dcmFile As String) As DoseMatrix
  overload: EvilDICOM.RT.DoseMatrix.Load*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.RT.DoseMatrix.#ctor(EvilDICOM.Core.DICOMObject)
  commentId: M:EvilDICOM.RT.DoseMatrix.#ctor(EvilDICOM.Core.DICOMObject)
  id: '#ctor(EvilDICOM.Core.DICOMObject)'
  parent: EvilDICOM.RT.DoseMatrix
  langs:
  - csharp
  - vb
  name: DoseMatrix(DICOMObject)
  nameWithType: DoseMatrix.DoseMatrix(DICOMObject)
  fullName: EvilDICOM.RT.DoseMatrix.DoseMatrix(EvilDICOM.Core.DICOMObject)
  type: Constructor
  source:
    remote:
      path: EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: .ctor
    path: ../EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
    startLine: 24
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.RT
  syntax:
    content: public DoseMatrix(DICOMObject dcm)
    parameters:
    - id: dcm
      type: EvilDICOM.Core.DICOMObject
    content.vb: Public Sub New(dcm As DICOMObject)
  overload: EvilDICOM.RT.DoseMatrix.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.RT.DoseMatrix.ValueSizeInBytes
  commentId: P:EvilDICOM.RT.DoseMatrix.ValueSizeInBytes
  id: ValueSizeInBytes
  parent: EvilDICOM.RT.DoseMatrix
  langs:
  - csharp
  - vb
  name: ValueSizeInBytes
  nameWithType: DoseMatrix.ValueSizeInBytes
  fullName: EvilDICOM.RT.DoseMatrix.ValueSizeInBytes
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: ValueSizeInBytes
    path: ../EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
    startLine: 50
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.RT
  syntax:
    content: public int ValueSizeInBytes { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ValueSizeInBytes As Integer
  overload: EvilDICOM.RT.DoseMatrix.ValueSizeInBytes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.RT.DoseMatrix.GetLineDose(EvilDICOM.Core.Helpers.Vector3,EvilDICOM.Core.Helpers.Vector3,System.Double)
  commentId: M:EvilDICOM.RT.DoseMatrix.GetLineDose(EvilDICOM.Core.Helpers.Vector3,EvilDICOM.Core.Helpers.Vector3,System.Double)
  id: GetLineDose(EvilDICOM.Core.Helpers.Vector3,EvilDICOM.Core.Helpers.Vector3,System.Double)
  parent: EvilDICOM.RT.DoseMatrix
  langs:
  - csharp
  - vb
  name: GetLineDose(Vector3, Vector3, Double)
  nameWithType: DoseMatrix.GetLineDose(Vector3, Vector3, Double)
  fullName: EvilDICOM.RT.DoseMatrix.GetLineDose(EvilDICOM.Core.Helpers.Vector3, EvilDICOM.Core.Helpers.Vector3, System.Double)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: GetLineDose
    path: ../EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
    startLine: 59
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.RT
  summary: "\nScrapes a dose matrix along the line from startXYZ in mm to endXYZ in mm\n"
  example: []
  syntax:
    content: public List<DoseValue> GetLineDose(Vector3 startXYZmm, Vector3 endXYZmm, double resolution_mm = null)
    parameters:
    - id: startXYZmm
      type: EvilDICOM.Core.Helpers.Vector3
      description: the starting position of the line
    - id: endXYZmm
      type: EvilDICOM.Core.Helpers.Vector3
      description: the end position of the line
    - id: resolution_mm
      type: System.Double
      description: the resolution to interoplate the line dose (default 2 mm)
    return:
      type: List{EvilDICOM.RT.DoseValue}
      description: a list of dose values at the specified resolution along the line
    content.vb: Public Function GetLineDose(startXYZmm As Vector3, endXYZmm As Vector3, resolution_mm As Double = Nothing) As List(Of DoseValue)
  overload: EvilDICOM.RT.DoseMatrix.GetLineDose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.RT.DoseMatrix.XRes
  commentId: P:EvilDICOM.RT.DoseMatrix.XRes
  id: XRes
  parent: EvilDICOM.RT.DoseMatrix
  langs:
  - csharp
  - vb
  name: XRes
  nameWithType: DoseMatrix.XRes
  fullName: EvilDICOM.RT.DoseMatrix.XRes
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: XRes
    path: ../EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
    startLine: 82
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.RT
  syntax:
    content: public double XRes { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property XRes As Double
  overload: EvilDICOM.RT.DoseMatrix.XRes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.RT.DoseMatrix.YRes
  commentId: P:EvilDICOM.RT.DoseMatrix.YRes
  id: YRes
  parent: EvilDICOM.RT.DoseMatrix
  langs:
  - csharp
  - vb
  name: YRes
  nameWithType: DoseMatrix.YRes
  fullName: EvilDICOM.RT.DoseMatrix.YRes
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: YRes
    path: ../EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
    startLine: 83
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.RT
  syntax:
    content: public double YRes { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property YRes As Double
  overload: EvilDICOM.RT.DoseMatrix.YRes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.RT.DoseMatrix.ZRes
  commentId: P:EvilDICOM.RT.DoseMatrix.ZRes
  id: ZRes
  parent: EvilDICOM.RT.DoseMatrix
  langs:
  - csharp
  - vb
  name: ZRes
  nameWithType: DoseMatrix.ZRes
  fullName: EvilDICOM.RT.DoseMatrix.ZRes
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: ZRes
    path: ../EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
    startLine: 84
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.RT
  syntax:
    content: public double ZRes { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property ZRes As Double
  overload: EvilDICOM.RT.DoseMatrix.ZRes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EvilDICOM.RT.DoseMatrix.X0
  commentId: P:EvilDICOM.RT.DoseMatrix.X0
  id: X0
  parent: EvilDICOM.RT.DoseMatrix
  langs:
  - csharp
  - vb
  name: X0
  nameWithType: DoseMatrix.X0
  fullName: EvilDICOM.RT.DoseMatrix.X0
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: X0
    path: ../EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
    startLine: 86
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.RT
  syntax:
    content: public double X0 { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property X0 As Double
  overload: EvilDICOM.RT.DoseMatrix.X0*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.RT.DoseMatrix.Y0
  commentId: P:EvilDICOM.RT.DoseMatrix.Y0
  id: Y0
  parent: EvilDICOM.RT.DoseMatrix
  langs:
  - csharp
  - vb
  name: Y0
  nameWithType: DoseMatrix.Y0
  fullName: EvilDICOM.RT.DoseMatrix.Y0
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: Y0
    path: ../EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
    startLine: 87
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.RT
  syntax:
    content: public double Y0 { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Y0 As Double
  overload: EvilDICOM.RT.DoseMatrix.Y0*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.RT.DoseMatrix.Z0
  commentId: P:EvilDICOM.RT.DoseMatrix.Z0
  id: Z0
  parent: EvilDICOM.RT.DoseMatrix
  langs:
  - csharp
  - vb
  name: Z0
  nameWithType: DoseMatrix.Z0
  fullName: EvilDICOM.RT.DoseMatrix.Z0
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: Z0
    path: ../EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
    startLine: 88
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.RT
  syntax:
    content: public double Z0 { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Z0 As Double
  overload: EvilDICOM.RT.DoseMatrix.Z0*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.RT.DoseMatrix.XMax
  commentId: P:EvilDICOM.RT.DoseMatrix.XMax
  id: XMax
  parent: EvilDICOM.RT.DoseMatrix
  langs:
  - csharp
  - vb
  name: XMax
  nameWithType: DoseMatrix.XMax
  fullName: EvilDICOM.RT.DoseMatrix.XMax
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: XMax
    path: ../EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
    startLine: 90
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.RT
  syntax:
    content: public double XMax { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property XMax As Double
  overload: EvilDICOM.RT.DoseMatrix.XMax*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EvilDICOM.RT.DoseMatrix.YMax
  commentId: P:EvilDICOM.RT.DoseMatrix.YMax
  id: YMax
  parent: EvilDICOM.RT.DoseMatrix
  langs:
  - csharp
  - vb
  name: YMax
  nameWithType: DoseMatrix.YMax
  fullName: EvilDICOM.RT.DoseMatrix.YMax
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: YMax
    path: ../EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
    startLine: 91
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.RT
  syntax:
    content: public double YMax { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property YMax As Double
  overload: EvilDICOM.RT.DoseMatrix.YMax*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EvilDICOM.RT.DoseMatrix.ZMax
  commentId: P:EvilDICOM.RT.DoseMatrix.ZMax
  id: ZMax
  parent: EvilDICOM.RT.DoseMatrix
  langs:
  - csharp
  - vb
  name: ZMax
  nameWithType: DoseMatrix.ZMax
  fullName: EvilDICOM.RT.DoseMatrix.ZMax
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: ZMax
    path: ../EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
    startLine: 92
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.RT
  syntax:
    content: public double ZMax { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property ZMax As Double
  overload: EvilDICOM.RT.DoseMatrix.ZMax*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EvilDICOM.RT.DoseMatrix.DimensionX
  commentId: P:EvilDICOM.RT.DoseMatrix.DimensionX
  id: DimensionX
  parent: EvilDICOM.RT.DoseMatrix
  langs:
  - csharp
  - vb
  name: DimensionX
  nameWithType: DoseMatrix.DimensionX
  fullName: EvilDICOM.RT.DoseMatrix.DimensionX
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: DimensionX
    path: ../EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
    startLine: 94
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.RT
  syntax:
    content: public int DimensionX { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property DimensionX As Integer
  overload: EvilDICOM.RT.DoseMatrix.DimensionX*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.RT.DoseMatrix.DimensionY
  commentId: P:EvilDICOM.RT.DoseMatrix.DimensionY
  id: DimensionY
  parent: EvilDICOM.RT.DoseMatrix
  langs:
  - csharp
  - vb
  name: DimensionY
  nameWithType: DoseMatrix.DimensionY
  fullName: EvilDICOM.RT.DoseMatrix.DimensionY
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: DimensionY
    path: ../EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
    startLine: 95
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.RT
  syntax:
    content: public int DimensionY { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property DimensionY As Integer
  overload: EvilDICOM.RT.DoseMatrix.DimensionY*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.RT.DoseMatrix.DimensionZ
  commentId: P:EvilDICOM.RT.DoseMatrix.DimensionZ
  id: DimensionZ
  parent: EvilDICOM.RT.DoseMatrix
  langs:
  - csharp
  - vb
  name: DimensionZ
  nameWithType: DoseMatrix.DimensionZ
  fullName: EvilDICOM.RT.DoseMatrix.DimensionZ
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: DimensionZ
    path: ../EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
    startLine: 96
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.RT
  syntax:
    content: public int DimensionZ { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property DimensionZ As Integer
  overload: EvilDICOM.RT.DoseMatrix.DimensionZ*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.RT.DoseMatrix.GetPointDose(System.Double,System.Double,System.Double)
  commentId: M:EvilDICOM.RT.DoseMatrix.GetPointDose(System.Double,System.Double,System.Double)
  id: GetPointDose(System.Double,System.Double,System.Double)
  parent: EvilDICOM.RT.DoseMatrix
  langs:
  - csharp
  - vb
  name: GetPointDose(Double, Double, Double)
  nameWithType: DoseMatrix.GetPointDose(Double, Double, Double)
  fullName: EvilDICOM.RT.DoseMatrix.GetPointDose(System.Double, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: GetPointDose
    path: ../EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
    startLine: 98
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.RT
  syntax:
    content: public DoseValue GetPointDose(double x, double y, double z)
    parameters:
    - id: x
      type: System.Double
    - id: y
      type: System.Double
    - id: z
      type: System.Double
    return:
      type: EvilDICOM.RT.DoseValue
    content.vb: Public Function GetPointDose(x As Double, y As Double, z As Double) As DoseValue
  overload: EvilDICOM.RT.DoseMatrix.GetPointDose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.RT.DoseMatrix.GetPointDose(EvilDICOM.Core.Helpers.Vector3)
  commentId: M:EvilDICOM.RT.DoseMatrix.GetPointDose(EvilDICOM.Core.Helpers.Vector3)
  id: GetPointDose(EvilDICOM.Core.Helpers.Vector3)
  parent: EvilDICOM.RT.DoseMatrix
  langs:
  - csharp
  - vb
  name: GetPointDose(Vector3)
  nameWithType: DoseMatrix.GetPointDose(Vector3)
  fullName: EvilDICOM.RT.DoseMatrix.GetPointDose(EvilDICOM.Core.Helpers.Vector3)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: GetPointDose
    path: ../EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
    startLine: 130
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.RT
  syntax:
    content: public DoseValue GetPointDose(Vector3 pt)
    parameters:
    - id: pt
      type: EvilDICOM.Core.Helpers.Vector3
    return:
      type: EvilDICOM.RT.DoseValue
    content.vb: Public Function GetPointDose(pt As Vector3) As DoseValue
  overload: EvilDICOM.RT.DoseMatrix.GetPointDose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.RT.DoseMatrix.MaxPointDose
  commentId: P:EvilDICOM.RT.DoseMatrix.MaxPointDose
  id: MaxPointDose
  parent: EvilDICOM.RT.DoseMatrix
  langs:
  - csharp
  - vb
  name: MaxPointDose
  nameWithType: DoseMatrix.MaxPointDose
  fullName: EvilDICOM.RT.DoseMatrix.MaxPointDose
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: MaxPointDose
    path: ../EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
    startLine: 143
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.RT
  syntax:
    content: public DoseValue MaxPointDose { get; }
    parameters: []
    return:
      type: EvilDICOM.RT.DoseValue
    content.vb: Public ReadOnly Property MaxPointDose As DoseValue
  overload: EvilDICOM.RT.DoseMatrix.MaxPointDose*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EvilDICOM.RT.DoseMatrix.IndexToLatticeXYZ(System.Int32,System.Int32@,System.Int32@,System.Int32@)
  commentId: M:EvilDICOM.RT.DoseMatrix.IndexToLatticeXYZ(System.Int32,System.Int32@,System.Int32@,System.Int32@)
  id: IndexToLatticeXYZ(System.Int32,System.Int32@,System.Int32@,System.Int32@)
  parent: EvilDICOM.RT.DoseMatrix
  langs:
  - csharp
  - vb
  name: IndexToLatticeXYZ(Int32, out Int32, out Int32, out Int32)
  nameWithType: DoseMatrix.IndexToLatticeXYZ(Int32, out Int32, out Int32, out Int32)
  fullName: EvilDICOM.RT.DoseMatrix.IndexToLatticeXYZ(System.Int32, out System.Int32, out System.Int32, out System.Int32)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: IndexToLatticeXYZ
    path: ../EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
    startLine: 155
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.RT
  syntax:
    content: public void IndexToLatticeXYZ(int index, out int x, out int y, out int z)
    parameters:
    - id: index
      type: System.Int32
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: z
      type: System.Int32
    content.vb: Public Sub IndexToLatticeXYZ(index As Integer, ByRef x As Integer, ByRef y As Integer, ByRef z As Integer)
  overload: EvilDICOM.RT.DoseMatrix.IndexToLatticeXYZ*
  nameWithType.vb: DoseMatrix.IndexToLatticeXYZ(Int32, ByRef Int32, ByRef Int32, ByRef Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EvilDICOM.RT.DoseMatrix.IndexToLatticeXYZ(System.Int32, ByRef System.Int32, ByRef System.Int32, ByRef System.Int32)
  name.vb: IndexToLatticeXYZ(Int32, ByRef Int32, ByRef Int32, ByRef Int32)
- uid: EvilDICOM.RT.DoseMatrix.LatticeXYZToIndex(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)
  commentId: M:EvilDICOM.RT.DoseMatrix.LatticeXYZToIndex(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)
  id: LatticeXYZToIndex(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)
  parent: EvilDICOM.RT.DoseMatrix
  langs:
  - csharp
  - vb
  name: LatticeXYZToIndex(Int32, Int32, Int32, Int32, Int32, out Int32)
  nameWithType: DoseMatrix.LatticeXYZToIndex(Int32, Int32, Int32, Int32, Int32, out Int32)
  fullName: EvilDICOM.RT.DoseMatrix.LatticeXYZToIndex(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, out System.Int32)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: LatticeXYZToIndex
    path: ../EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
    startLine: 162
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.RT
  syntax:
    content: public static void LatticeXYZToIndex(int x, int y, int z, int latticeWidth, int latticeHeight, out int index)
    parameters:
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: z
      type: System.Int32
    - id: latticeWidth
      type: System.Int32
    - id: latticeHeight
      type: System.Int32
    - id: index
      type: System.Int32
    content.vb: Public Shared Sub LatticeXYZToIndex(x As Integer, y As Integer, z As Integer, latticeWidth As Integer, latticeHeight As Integer, ByRef index As Integer)
  overload: EvilDICOM.RT.DoseMatrix.LatticeXYZToIndex*
  nameWithType.vb: DoseMatrix.LatticeXYZToIndex(Int32, Int32, Int32, Int32, Int32, ByRef Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EvilDICOM.RT.DoseMatrix.LatticeXYZToIndex(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, ByRef System.Int32)
  name.vb: LatticeXYZToIndex(Int32, Int32, Int32, Int32, Int32, ByRef Int32)
- uid: EvilDICOM.RT.DoseMatrix.LatticeXYZToIndex(System.Int32,System.Int32,System.Int32,System.Int32@)
  commentId: M:EvilDICOM.RT.DoseMatrix.LatticeXYZToIndex(System.Int32,System.Int32,System.Int32,System.Int32@)
  id: LatticeXYZToIndex(System.Int32,System.Int32,System.Int32,System.Int32@)
  parent: EvilDICOM.RT.DoseMatrix
  langs:
  - csharp
  - vb
  name: LatticeXYZToIndex(Int32, Int32, Int32, out Int32)
  nameWithType: DoseMatrix.LatticeXYZToIndex(Int32, Int32, Int32, out Int32)
  fullName: EvilDICOM.RT.DoseMatrix.LatticeXYZToIndex(System.Int32, System.Int32, System.Int32, out System.Int32)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: LatticeXYZToIndex
    path: ../EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
    startLine: 167
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.RT
  syntax:
    content: public void LatticeXYZToIndex(int x, int y, int z, out int index)
    parameters:
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: z
      type: System.Int32
    - id: index
      type: System.Int32
    content.vb: Public Sub LatticeXYZToIndex(x As Integer, y As Integer, z As Integer, ByRef index As Integer)
  overload: EvilDICOM.RT.DoseMatrix.LatticeXYZToIndex*
  nameWithType.vb: DoseMatrix.LatticeXYZToIndex(Int32, Int32, Int32, ByRef Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EvilDICOM.RT.DoseMatrix.LatticeXYZToIndex(System.Int32, System.Int32, System.Int32, ByRef System.Int32)
  name.vb: LatticeXYZToIndex(Int32, Int32, Int32, ByRef Int32)
- uid: EvilDICOM.RT.DoseMatrix.DirectionalCosines
  commentId: P:EvilDICOM.RT.DoseMatrix.DirectionalCosines
  id: DirectionalCosines
  parent: EvilDICOM.RT.DoseMatrix
  langs:
  - csharp
  - vb
  name: DirectionalCosines
  nameWithType: DoseMatrix.DirectionalCosines
  fullName: EvilDICOM.RT.DoseMatrix.DirectionalCosines
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: DirectionalCosines
    path: ../EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
    startLine: 172
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.RT
  syntax:
    content: public double[] DirectionalCosines { get; }
    parameters: []
    return:
      type: System.Double[]
    content.vb: Public ReadOnly Property DirectionalCosines As Double()
  overload: EvilDICOM.RT.DoseMatrix.DirectionalCosines*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EvilDICOM.RT.DoseMatrix.ConvertRelToAbs(System.Double)
  commentId: M:EvilDICOM.RT.DoseMatrix.ConvertRelToAbs(System.Double)
  id: ConvertRelToAbs(System.Double)
  parent: EvilDICOM.RT.DoseMatrix
  langs:
  - csharp
  - vb
  name: ConvertRelToAbs(Double)
  nameWithType: DoseMatrix.ConvertRelToAbs(Double)
  fullName: EvilDICOM.RT.DoseMatrix.ConvertRelToAbs(System.Double)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: ConvertRelToAbs
    path: ../EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
    startLine: 177
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.RT
  syntax:
    content: public void ConvertRelToAbs(double totalDose)
    parameters:
    - id: totalDose
      type: System.Double
    content.vb: Public Sub ConvertRelToAbs(totalDose As Double)
  overload: EvilDICOM.RT.DoseMatrix.ConvertRelToAbs*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.RT.DoseMatrix.ToDICOM
  commentId: M:EvilDICOM.RT.DoseMatrix.ToDICOM
  id: ToDICOM
  parent: EvilDICOM.RT.DoseMatrix
  langs:
  - csharp
  - vb
  name: ToDICOM()
  nameWithType: DoseMatrix.ToDICOM()
  fullName: EvilDICOM.RT.DoseMatrix.ToDICOM()
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: ToDICOM
    path: ../EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
    startLine: 200
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.RT
  syntax:
    content: public DICOMObject ToDICOM()
    return:
      type: EvilDICOM.Core.DICOMObject
    content.vb: Public Function ToDICOM As DICOMObject
  overload: EvilDICOM.RT.DoseMatrix.ToDICOM*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.RT.DoseMatrix.Save(System.String)
  commentId: M:EvilDICOM.RT.DoseMatrix.Save(System.String)
  id: Save(System.String)
  parent: EvilDICOM.RT.DoseMatrix
  langs:
  - csharp
  - vb
  name: Save(String)
  nameWithType: DoseMatrix.Save(String)
  fullName: EvilDICOM.RT.DoseMatrix.Save(System.String)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: Save
    path: ../EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
    startLine: 232
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.RT
  syntax:
    content: public void Save(string path)
    parameters:
    - id: path
      type: System.String
    content.vb: Public Sub Save(path As String)
  overload: EvilDICOM.RT.DoseMatrix.Save*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.RT.DoseMatrix.Scaling
  commentId: P:EvilDICOM.RT.DoseMatrix.Scaling
  id: Scaling
  parent: EvilDICOM.RT.DoseMatrix
  langs:
  - csharp
  - vb
  name: Scaling
  nameWithType: DoseMatrix.Scaling
  fullName: EvilDICOM.RT.DoseMatrix.Scaling
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: Scaling
    path: ../EvilDICOM/EvilDICOM/RT/DoseMatrix.cs
    startLine: 237
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.RT
  syntax:
    content: public double Scaling { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Scaling As Double
  overload: EvilDICOM.RT.DoseMatrix.Scaling*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: EvilDICOM.RT
  commentId: N:EvilDICOM.RT
  isExternal: false
  name: EvilDICOM.RT
  nameWithType: EvilDICOM.RT
  fullName: EvilDICOM.RT
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EvilDICOM.RT.DoseMatrix.DoseValues*
  commentId: Overload:EvilDICOM.RT.DoseMatrix.DoseValues
  isExternal: false
  name: DoseValues
  nameWithType: DoseMatrix.DoseValues
  fullName: EvilDICOM.RT.DoseMatrix.DoseValues
- uid: List{System.Double}
  commentId: '!:List{System.Double}'
  definition: List`1
  name: List<Double>
  nameWithType: List<Double>
  fullName: List<System.Double>
  nameWithType.vb: List(Of Double)
  fullName.vb: List(Of System.Double)
  name.vb: List(Of Double)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.RT.DoseMatrix.Load*
  commentId: Overload:EvilDICOM.RT.DoseMatrix.Load
  isExternal: false
  name: Load
  nameWithType: DoseMatrix.Load
  fullName: EvilDICOM.RT.DoseMatrix.Load
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EvilDICOM.RT.DoseMatrix
  commentId: T:EvilDICOM.RT.DoseMatrix
  parent: EvilDICOM.RT
  isExternal: false
  name: DoseMatrix
  nameWithType: DoseMatrix
  fullName: EvilDICOM.RT.DoseMatrix
- uid: EvilDICOM.RT.DoseMatrix.#ctor*
  commentId: Overload:EvilDICOM.RT.DoseMatrix.#ctor
  isExternal: false
  name: DoseMatrix
  nameWithType: DoseMatrix.DoseMatrix
  fullName: EvilDICOM.RT.DoseMatrix.DoseMatrix
- uid: EvilDICOM.Core.DICOMObject
  commentId: T:EvilDICOM.Core.DICOMObject
  parent: EvilDICOM.Core
  isExternal: false
  name: DICOMObject
  nameWithType: DICOMObject
  fullName: EvilDICOM.Core.DICOMObject
- uid: EvilDICOM.Core
  commentId: N:EvilDICOM.Core
  isExternal: false
  name: EvilDICOM.Core
  nameWithType: EvilDICOM.Core
  fullName: EvilDICOM.Core
- uid: EvilDICOM.RT.DoseMatrix.ValueSizeInBytes*
  commentId: Overload:EvilDICOM.RT.DoseMatrix.ValueSizeInBytes
  isExternal: false
  name: ValueSizeInBytes
  nameWithType: DoseMatrix.ValueSizeInBytes
  fullName: EvilDICOM.RT.DoseMatrix.ValueSizeInBytes
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EvilDICOM.RT.DoseMatrix.GetLineDose*
  commentId: Overload:EvilDICOM.RT.DoseMatrix.GetLineDose
  isExternal: false
  name: GetLineDose
  nameWithType: DoseMatrix.GetLineDose
  fullName: EvilDICOM.RT.DoseMatrix.GetLineDose
- uid: EvilDICOM.Core.Helpers.Vector3
  commentId: T:EvilDICOM.Core.Helpers.Vector3
  parent: EvilDICOM.Core.Helpers
  isExternal: false
  name: Vector3
  nameWithType: Vector3
  fullName: EvilDICOM.Core.Helpers.Vector3
- uid: System.Double
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: List{EvilDICOM.RT.DoseValue}
  commentId: '!:List{EvilDICOM.RT.DoseValue}'
  definition: List`1
  name: List<DoseValue>
  nameWithType: List<DoseValue>
  fullName: List<EvilDICOM.RT.DoseValue>
  nameWithType.vb: List(Of DoseValue)
  fullName.vb: List(Of EvilDICOM.RT.DoseValue)
  name.vb: List(Of DoseValue)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EvilDICOM.RT.DoseValue
    name: DoseValue
    nameWithType: DoseValue
    fullName: EvilDICOM.RT.DoseValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EvilDICOM.RT.DoseValue
    name: DoseValue
    nameWithType: DoseValue
    fullName: EvilDICOM.RT.DoseValue
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Core.Helpers
  commentId: N:EvilDICOM.Core.Helpers
  isExternal: false
  name: EvilDICOM.Core.Helpers
  nameWithType: EvilDICOM.Core.Helpers
  fullName: EvilDICOM.Core.Helpers
- uid: EvilDICOM.RT.DoseMatrix.XRes*
  commentId: Overload:EvilDICOM.RT.DoseMatrix.XRes
  isExternal: false
  name: XRes
  nameWithType: DoseMatrix.XRes
  fullName: EvilDICOM.RT.DoseMatrix.XRes
- uid: EvilDICOM.RT.DoseMatrix.YRes*
  commentId: Overload:EvilDICOM.RT.DoseMatrix.YRes
  isExternal: false
  name: YRes
  nameWithType: DoseMatrix.YRes
  fullName: EvilDICOM.RT.DoseMatrix.YRes
- uid: EvilDICOM.RT.DoseMatrix.ZRes*
  commentId: Overload:EvilDICOM.RT.DoseMatrix.ZRes
  isExternal: false
  name: ZRes
  nameWithType: DoseMatrix.ZRes
  fullName: EvilDICOM.RT.DoseMatrix.ZRes
- uid: EvilDICOM.RT.DoseMatrix.X0*
  commentId: Overload:EvilDICOM.RT.DoseMatrix.X0
  isExternal: false
  name: X0
  nameWithType: DoseMatrix.X0
  fullName: EvilDICOM.RT.DoseMatrix.X0
- uid: EvilDICOM.RT.DoseMatrix.Y0*
  commentId: Overload:EvilDICOM.RT.DoseMatrix.Y0
  isExternal: false
  name: Y0
  nameWithType: DoseMatrix.Y0
  fullName: EvilDICOM.RT.DoseMatrix.Y0
- uid: EvilDICOM.RT.DoseMatrix.Z0*
  commentId: Overload:EvilDICOM.RT.DoseMatrix.Z0
  isExternal: false
  name: Z0
  nameWithType: DoseMatrix.Z0
  fullName: EvilDICOM.RT.DoseMatrix.Z0
- uid: EvilDICOM.RT.DoseMatrix.XMax*
  commentId: Overload:EvilDICOM.RT.DoseMatrix.XMax
  isExternal: false
  name: XMax
  nameWithType: DoseMatrix.XMax
  fullName: EvilDICOM.RT.DoseMatrix.XMax
- uid: EvilDICOM.RT.DoseMatrix.YMax*
  commentId: Overload:EvilDICOM.RT.DoseMatrix.YMax
  isExternal: false
  name: YMax
  nameWithType: DoseMatrix.YMax
  fullName: EvilDICOM.RT.DoseMatrix.YMax
- uid: EvilDICOM.RT.DoseMatrix.ZMax*
  commentId: Overload:EvilDICOM.RT.DoseMatrix.ZMax
  isExternal: false
  name: ZMax
  nameWithType: DoseMatrix.ZMax
  fullName: EvilDICOM.RT.DoseMatrix.ZMax
- uid: EvilDICOM.RT.DoseMatrix.DimensionX*
  commentId: Overload:EvilDICOM.RT.DoseMatrix.DimensionX
  isExternal: false
  name: DimensionX
  nameWithType: DoseMatrix.DimensionX
  fullName: EvilDICOM.RT.DoseMatrix.DimensionX
- uid: EvilDICOM.RT.DoseMatrix.DimensionY*
  commentId: Overload:EvilDICOM.RT.DoseMatrix.DimensionY
  isExternal: false
  name: DimensionY
  nameWithType: DoseMatrix.DimensionY
  fullName: EvilDICOM.RT.DoseMatrix.DimensionY
- uid: EvilDICOM.RT.DoseMatrix.DimensionZ*
  commentId: Overload:EvilDICOM.RT.DoseMatrix.DimensionZ
  isExternal: false
  name: DimensionZ
  nameWithType: DoseMatrix.DimensionZ
  fullName: EvilDICOM.RT.DoseMatrix.DimensionZ
- uid: EvilDICOM.RT.DoseMatrix.GetPointDose*
  commentId: Overload:EvilDICOM.RT.DoseMatrix.GetPointDose
  isExternal: false
  name: GetPointDose
  nameWithType: DoseMatrix.GetPointDose
  fullName: EvilDICOM.RT.DoseMatrix.GetPointDose
- uid: EvilDICOM.RT.DoseValue
  commentId: T:EvilDICOM.RT.DoseValue
  parent: EvilDICOM.RT
  isExternal: false
  name: DoseValue
  nameWithType: DoseValue
  fullName: EvilDICOM.RT.DoseValue
- uid: EvilDICOM.RT.DoseMatrix.MaxPointDose*
  commentId: Overload:EvilDICOM.RT.DoseMatrix.MaxPointDose
  isExternal: false
  name: MaxPointDose
  nameWithType: DoseMatrix.MaxPointDose
  fullName: EvilDICOM.RT.DoseMatrix.MaxPointDose
- uid: EvilDICOM.RT.DoseMatrix.IndexToLatticeXYZ*
  commentId: Overload:EvilDICOM.RT.DoseMatrix.IndexToLatticeXYZ
  isExternal: false
  name: IndexToLatticeXYZ
  nameWithType: DoseMatrix.IndexToLatticeXYZ
  fullName: EvilDICOM.RT.DoseMatrix.IndexToLatticeXYZ
- uid: EvilDICOM.RT.DoseMatrix.LatticeXYZToIndex*
  commentId: Overload:EvilDICOM.RT.DoseMatrix.LatticeXYZToIndex
  isExternal: false
  name: LatticeXYZToIndex
  nameWithType: DoseMatrix.LatticeXYZToIndex
  fullName: EvilDICOM.RT.DoseMatrix.LatticeXYZToIndex
- uid: EvilDICOM.RT.DoseMatrix.DirectionalCosines*
  commentId: Overload:EvilDICOM.RT.DoseMatrix.DirectionalCosines
  isExternal: false
  name: DirectionalCosines
  nameWithType: DoseMatrix.DirectionalCosines
  fullName: EvilDICOM.RT.DoseMatrix.DirectionalCosines
- uid: System.Double[]
  name: Double[]
  nameWithType: Double[]
  fullName: System.Double[]
  nameWithType.vb: Double()
  fullName.vb: System.Double()
  name.vb: Double()
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EvilDICOM.RT.DoseMatrix.ConvertRelToAbs*
  commentId: Overload:EvilDICOM.RT.DoseMatrix.ConvertRelToAbs
  isExternal: false
  name: ConvertRelToAbs
  nameWithType: DoseMatrix.ConvertRelToAbs
  fullName: EvilDICOM.RT.DoseMatrix.ConvertRelToAbs
- uid: EvilDICOM.RT.DoseMatrix.ToDICOM*
  commentId: Overload:EvilDICOM.RT.DoseMatrix.ToDICOM
  isExternal: false
  name: ToDICOM
  nameWithType: DoseMatrix.ToDICOM
  fullName: EvilDICOM.RT.DoseMatrix.ToDICOM
- uid: EvilDICOM.RT.DoseMatrix.Save*
  commentId: Overload:EvilDICOM.RT.DoseMatrix.Save
  isExternal: false
  name: Save
  nameWithType: DoseMatrix.Save
  fullName: EvilDICOM.RT.DoseMatrix.Save
- uid: EvilDICOM.RT.DoseMatrix.Scaling*
  commentId: Overload:EvilDICOM.RT.DoseMatrix.Scaling
  isExternal: false
  name: Scaling
  nameWithType: DoseMatrix.Scaling
  fullName: EvilDICOM.RT.DoseMatrix.Scaling
