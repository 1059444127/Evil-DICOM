items:
- uid: EvilDICOM.Network.Interfaces.IMessage
  id: IMessage
  parent: EvilDICOM.Network.Interfaces
  children:
  - EvilDICOM.Network.Interfaces.IMessage.DynPayload
  - EvilDICOM.Network.Interfaces.IMessage.Type
  langs:
  - csharp
  - vb
  name: IMessage
  fullName: EvilDICOM.Network.Interfaces.IMessage
  type: Interface
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Interfaces/IMessage.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/Interfaces/IMessage.cs
    startLine: 4
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.Interfaces
  syntax:
    content: public interface IMessage
    content.vb: Public Interface IMessage
- uid: EvilDICOM.Network.Interfaces.IMessage.Type
  id: Type
  parent: EvilDICOM.Network.Interfaces.IMessage
  langs:
  - csharp
  - vb
  name: Type
  fullName: EvilDICOM.Network.Interfaces.IMessage.Type
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Interfaces/IMessage.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/Interfaces/IMessage.cs
    startLine: 6
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.Interfaces
  syntax:
    content: MessageType Type { get; }
    content.vb: ReadOnly Property Type As MessageType
    parameters: []
    return:
      type: EvilDICOM.Network.Enums.MessageType
- uid: EvilDICOM.Network.Interfaces.IMessage.DynPayload
  id: DynPayload
  parent: EvilDICOM.Network.Interfaces.IMessage
  langs:
  - csharp
  - vb
  name: DynPayload
  fullName: EvilDICOM.Network.Interfaces.IMessage.DynPayload
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Interfaces/IMessage.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/Interfaces/IMessage.cs
    startLine: 7
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.Interfaces
  syntax:
    content: dynamic DynPayload { get; }
    content.vb: ReadOnly Property DynPayload As Object
    parameters: []
    return:
      type: System.Object
references:
- uid: EvilDICOM.Network.Interfaces
  isExternal: false
  name: EvilDICOM.Network.Interfaces
  fullName: EvilDICOM.Network.Interfaces
- uid: EvilDICOM.Network.Enums.MessageType
  parent: EvilDICOM.Network.Enums
  isExternal: false
  name: MessageType
  fullName: EvilDICOM.Network.Enums.MessageType
- uid: EvilDICOM.Network.Enums
  isExternal: false
  name: EvilDICOM.Network.Enums
  fullName: EvilDICOM.Network.Enums
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
