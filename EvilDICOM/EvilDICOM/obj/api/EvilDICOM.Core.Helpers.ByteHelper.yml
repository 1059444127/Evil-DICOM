items:
- uid: EvilDICOM.Core.Helpers.ByteHelper
  id: ByteHelper
  parent: EvilDICOM.Core.Helpers
  children:
  - EvilDICOM.Core.Helpers.ByteHelper.AreEqual(System.Byte[],System.Byte[])
  - EvilDICOM.Core.Helpers.ByteHelper.ByteArrayToDebugHexString(System.Byte[])
  - EvilDICOM.Core.Helpers.ByteHelper.ByteArrayToHexString(System.Byte[])
  - EvilDICOM.Core.Helpers.ByteHelper.ByteToHexString(System.Byte)
  - EvilDICOM.Core.Helpers.ByteHelper.GetHexStringArray(System.Byte[])
  - EvilDICOM.Core.Helpers.ByteHelper.HexStringToByteArray(System.String)
  langs:
  - csharp
  - vb
  name: ByteHelper
  fullName: EvilDICOM.Core.Helpers.ByteHelper
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Helpers/ByteHelper.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/Helpers/ByteHelper.cs
    startLine: 5
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Helpers
  syntax:
    content: public class ByteHelper
    content.vb: Public Class ByteHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: EvilDICOM.Core.Helpers.ByteHelper.ByteArrayToHexString(System.Byte[])
  id: ByteArrayToHexString(System.Byte[])
  parent: EvilDICOM.Core.Helpers.ByteHelper
  langs:
  - csharp
  - vb
  name: ByteArrayToHexString(Byte[])
  name.vb: ByteArrayToHexString(Byte())
  fullName: EvilDICOM.Core.Helpers.ByteHelper.ByteArrayToHexString(System.Byte[])
  fullName.vb: EvilDICOM.Core.Helpers.ByteHelper.ByteArrayToHexString(System.Byte())
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Helpers/ByteHelper.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/Helpers/ByteHelper.cs
    startLine: 12
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Helpers
  summary: This method converts an array of bytes to a hexadecimal string
  example: []
  syntax:
    content: public static string ByteArrayToHexString(byte[] Bytes)
    content.vb: Public Shared Function ByteArrayToHexString(Bytes As Byte()) As String
    parameters:
    - id: Bytes
      type: System.Byte[]
      description: the array of bytes to be converted
    return:
      type: System.String
      description: a hexadecimal string representing the array of bytes passed in
- uid: EvilDICOM.Core.Helpers.ByteHelper.ByteArrayToDebugHexString(System.Byte[])
  id: ByteArrayToDebugHexString(System.Byte[])
  parent: EvilDICOM.Core.Helpers.ByteHelper
  langs:
  - csharp
  - vb
  name: ByteArrayToDebugHexString(Byte[])
  name.vb: ByteArrayToDebugHexString(Byte())
  fullName: EvilDICOM.Core.Helpers.ByteHelper.ByteArrayToDebugHexString(System.Byte[])
  fullName.vb: EvilDICOM.Core.Helpers.ByteHelper.ByteArrayToDebugHexString(System.Byte())
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Helpers/ByteHelper.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/Helpers/ByteHelper.cs
    startLine: 31
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Helpers
  summary: This method converts an array of bytes to a hexadecimal string
  example: []
  syntax:
    content: public static string ByteArrayToDebugHexString(byte[] Bytes)
    content.vb: Public Shared Function ByteArrayToDebugHexString(Bytes As Byte()) As String
    parameters:
    - id: Bytes
      type: System.Byte[]
      description: the array of bytes to be converted
    return:
      type: System.String
      description: a hexadecimal string representing the array of bytes passed in
- uid: EvilDICOM.Core.Helpers.ByteHelper.ByteToHexString(System.Byte)
  id: ByteToHexString(System.Byte)
  parent: EvilDICOM.Core.Helpers.ByteHelper
  langs:
  - csharp
  - vb
  name: ByteToHexString(Byte)
  fullName: EvilDICOM.Core.Helpers.ByteHelper.ByteToHexString(System.Byte)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Helpers/ByteHelper.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/Helpers/ByteHelper.cs
    startLine: 54
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Helpers
  summary: This method converts an array of bytes to a hexadecimal string
  example: []
  syntax:
    content: public static string ByteToHexString(byte b)
    content.vb: Public Shared Function ByteToHexString(b As Byte) As String
    parameters:
    - id: b
      type: System.Byte
    return:
      type: System.String
      description: a hexadecimal string representing the array of bytes passed in
- uid: EvilDICOM.Core.Helpers.ByteHelper.HexStringToByteArray(System.String)
  id: HexStringToByteArray(System.String)
  parent: EvilDICOM.Core.Helpers.ByteHelper
  langs:
  - csharp
  - vb
  name: HexStringToByteArray(String)
  fullName: EvilDICOM.Core.Helpers.ByteHelper.HexStringToByteArray(System.String)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Helpers/ByteHelper.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/Helpers/ByteHelper.cs
    startLine: 68
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Helpers
  summary: This method converts a hexadecimal string to an array of bytes.
  example: []
  syntax:
    content: public static byte[] HexStringToByteArray(string hexString)
    content.vb: Public Shared Function HexStringToByteArray(hexString As String) As Byte()
    parameters:
    - id: hexString
      type: System.String
      description: the hexadecimal string to be converted
    return:
      type: System.Byte[]
      description: an array of bytes representing the hexadecimal string passed in
- uid: EvilDICOM.Core.Helpers.ByteHelper.GetHexStringArray(System.Byte[])
  id: GetHexStringArray(System.Byte[])
  parent: EvilDICOM.Core.Helpers.ByteHelper
  langs:
  - csharp
  - vb
  name: GetHexStringArray(Byte[])
  name.vb: GetHexStringArray(Byte())
  fullName: EvilDICOM.Core.Helpers.ByteHelper.GetHexStringArray(System.Byte[])
  fullName.vb: EvilDICOM.Core.Helpers.ByteHelper.GetHexStringArray(System.Byte())
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Helpers/ByteHelper.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/Helpers/ByteHelper.cs
    startLine: 87
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Helpers
  syntax:
    content: public static string[] GetHexStringArray(byte[] bytes)
    content.vb: Public Shared Function GetHexStringArray(bytes As Byte()) As String()
    parameters:
    - id: bytes
      type: System.Byte[]
    return:
      type: System.String[]
- uid: EvilDICOM.Core.Helpers.ByteHelper.AreEqual(System.Byte[],System.Byte[])
  id: AreEqual(System.Byte[],System.Byte[])
  parent: EvilDICOM.Core.Helpers.ByteHelper
  langs:
  - csharp
  - vb
  name: AreEqual(Byte[], Byte[])
  name.vb: AreEqual(Byte(), Byte())
  fullName: EvilDICOM.Core.Helpers.ByteHelper.AreEqual(System.Byte[], System.Byte[])
  fullName.vb: EvilDICOM.Core.Helpers.ByteHelper.AreEqual(System.Byte(), System.Byte())
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Helpers/ByteHelper.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/Helpers/ByteHelper.cs
    startLine: 97
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Helpers
  syntax:
    content: public static bool AreEqual(byte[] bytes, byte[] toCompare)
    content.vb: Public Shared Function AreEqual(bytes As Byte(), toCompare As Byte()) As Boolean
    parameters:
    - id: bytes
      type: System.Byte[]
    - id: toCompare
      type: System.Byte[]
    return:
      type: System.Boolean
references:
- uid: EvilDICOM.Core.Helpers
  isExternal: false
  name: EvilDICOM.Core.Helpers
  fullName: EvilDICOM.Core.Helpers
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  fullName: System.Byte
- uid: System.String[]
  isExternal: true
  name: String[]
  fullName: System.String[]
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
