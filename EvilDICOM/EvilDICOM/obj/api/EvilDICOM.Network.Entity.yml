items:
- uid: EvilDICOM.Network.Entity
  id: Entity
  parent: EvilDICOM.Network
  children:
  - EvilDICOM.Network.Entity.#ctor(System.String,System.String,System.Int32)
  - EvilDICOM.Network.Entity.AeTitle
  - EvilDICOM.Network.Entity.CreateLocal(System.String,System.Int32)
  - EvilDICOM.Network.Entity.IpAddress
  - EvilDICOM.Network.Entity.Port
  langs:
  - csharp
  - vb
  name: Entity
  fullName: EvilDICOM.Network.Entity
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/ApplicationEntity.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/ApplicationEntity.cs
    startLine: 9
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public class Entity
    content.vb: Public Class Entity
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: EvilDICOM.Network.Entity.#ctor(System.String,System.String,System.Int32)
  id: '#ctor(System.String,System.String,System.Int32)'
  parent: EvilDICOM.Network.Entity
  langs:
  - csharp
  - vb
  name: Entity(String, String, Int32)
  fullName: EvilDICOM.Network.Entity.Entity(System.String, System.String, System.Int32)
  type: Constructor
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/ApplicationEntity.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/ApplicationEntity.cs
    startLine: 16
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public Entity(string aeTitle, string ipAddress, int port)
    content.vb: Public Sub New(aeTitle As String, ipAddress As String, port As Integer)
    parameters:
    - id: aeTitle
      type: System.String
    - id: ipAddress
      type: System.String
    - id: port
      type: System.Int32
- uid: EvilDICOM.Network.Entity.AeTitle
  id: AeTitle
  parent: EvilDICOM.Network.Entity
  langs:
  - csharp
  - vb
  name: AeTitle
  fullName: EvilDICOM.Network.Entity.AeTitle
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/ApplicationEntity.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/ApplicationEntity.cs
    startLine: 23
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public string AeTitle { get; set; }
    content.vb: Public Property AeTitle As String
    parameters: []
    return:
      type: System.String
- uid: EvilDICOM.Network.Entity.IpAddress
  id: IpAddress
  parent: EvilDICOM.Network.Entity
  langs:
  - csharp
  - vb
  name: IpAddress
  fullName: EvilDICOM.Network.Entity.IpAddress
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/ApplicationEntity.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/ApplicationEntity.cs
    startLine: 24
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public string IpAddress { get; set; }
    content.vb: Public Property IpAddress As String
    parameters: []
    return:
      type: System.String
- uid: EvilDICOM.Network.Entity.Port
  id: Port
  parent: EvilDICOM.Network.Entity
  langs:
  - csharp
  - vb
  name: Port
  fullName: EvilDICOM.Network.Entity.Port
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/ApplicationEntity.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/ApplicationEntity.cs
    startLine: 25
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public int Port { get; set; }
    content.vb: Public Property Port As Integer
    parameters: []
    return:
      type: System.Int32
- uid: EvilDICOM.Network.Entity.CreateLocal(System.String,System.Int32)
  id: CreateLocal(System.String,System.Int32)
  parent: EvilDICOM.Network.Entity
  langs:
  - csharp
  - vb
  name: CreateLocal(String, Int32)
  fullName: EvilDICOM.Network.Entity.CreateLocal(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/ApplicationEntity.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/ApplicationEntity.cs
    startLine: 27
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public static Entity CreateLocal(string aeTitle, int port)
    content.vb: Public Shared Function CreateLocal(aeTitle As String, port As Integer) As Entity
    parameters:
    - id: aeTitle
      type: System.String
    - id: port
      type: System.Int32
    return:
      type: EvilDICOM.Network.Entity
references:
- uid: EvilDICOM.Network
  isExternal: false
  name: EvilDICOM.Network
  fullName: EvilDICOM.Network
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: EvilDICOM.Network.Entity
  parent: EvilDICOM.Network
  isExternal: false
  name: Entity
  fullName: EvilDICOM.Network.Entity
