### YamlMime:ManagedReference
items:
- uid: EvilDICOM.Core.IO.Writing.GroupWriter
  commentId: T:EvilDICOM.Core.IO.Writing.GroupWriter
  id: GroupWriter
  parent: EvilDICOM.Core.IO.Writing
  children:
  - EvilDICOM.Core.IO.Writing.GroupWriter.IsGroupHeader(EvilDICOM.Core.Interfaces.IDICOMElement)
  - EvilDICOM.Core.IO.Writing.GroupWriter.WriteGroup(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,EvilDICOM.Core.IO.Writing.DICOMWriteSettings,EvilDICOM.Core.DICOMObject,EvilDICOM.Core.Interfaces.IDICOMElement)
  - EvilDICOM.Core.IO.Writing.GroupWriter.WriteGroupBytes(EvilDICOM.Core.DICOMObject,EvilDICOM.Core.IO.Writing.DICOMWriteSettings,System.String)
  langs:
  - csharp
  - vb
  name: GroupWriter
  nameWithType: GroupWriter
  fullName: EvilDICOM.Core.IO.Writing.GroupWriter
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Writing/GroupWriter.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: GroupWriter
    path: ../EvilDICOM/EvilDICOM/Core/IO/Writing/GroupWriter.cs
    startLine: 8
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Writing
  syntax:
    content: 'public class GroupWriter : object'
    content.vb: >-
      Public Class GroupWriter
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EvilDICOM.Core.IO.Writing.GroupWriter.IsGroupHeader(EvilDICOM.Core.Interfaces.IDICOMElement)
  commentId: M:EvilDICOM.Core.IO.Writing.GroupWriter.IsGroupHeader(EvilDICOM.Core.Interfaces.IDICOMElement)
  id: IsGroupHeader(EvilDICOM.Core.Interfaces.IDICOMElement)
  parent: EvilDICOM.Core.IO.Writing.GroupWriter
  langs:
  - csharp
  - vb
  name: IsGroupHeader(IDICOMElement)
  nameWithType: GroupWriter.IsGroupHeader(IDICOMElement)
  fullName: EvilDICOM.Core.IO.Writing.GroupWriter.IsGroupHeader(EvilDICOM.Core.Interfaces.IDICOMElement)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Writing/GroupWriter.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: IsGroupHeader
    path: ../EvilDICOM/EvilDICOM/Core/IO/Writing/GroupWriter.cs
    startLine: 10
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Writing
  syntax:
    content: public static bool IsGroupHeader(IDICOMElement el)
    parameters:
    - id: el
      type: EvilDICOM.Core.Interfaces.IDICOMElement
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsGroupHeader(el As IDICOMElement) As Boolean
  overload: EvilDICOM.Core.IO.Writing.GroupWriter.IsGroupHeader*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Core.IO.Writing.GroupWriter.WriteGroup(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,EvilDICOM.Core.IO.Writing.DICOMWriteSettings,EvilDICOM.Core.DICOMObject,EvilDICOM.Core.Interfaces.IDICOMElement)
  commentId: M:EvilDICOM.Core.IO.Writing.GroupWriter.WriteGroup(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,EvilDICOM.Core.IO.Writing.DICOMWriteSettings,EvilDICOM.Core.DICOMObject,EvilDICOM.Core.Interfaces.IDICOMElement)
  id: WriteGroup(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,EvilDICOM.Core.IO.Writing.DICOMWriteSettings,EvilDICOM.Core.DICOMObject,EvilDICOM.Core.Interfaces.IDICOMElement)
  parent: EvilDICOM.Core.IO.Writing.GroupWriter
  langs:
  - csharp
  - vb
  name: WriteGroup(DICOMBinaryWriter, DICOMWriteSettings, DICOMObject, IDICOMElement)
  nameWithType: GroupWriter.WriteGroup(DICOMBinaryWriter, DICOMWriteSettings, DICOMObject, IDICOMElement)
  fullName: EvilDICOM.Core.IO.Writing.GroupWriter.WriteGroup(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter, EvilDICOM.Core.IO.Writing.DICOMWriteSettings, EvilDICOM.Core.DICOMObject, EvilDICOM.Core.Interfaces.IDICOMElement)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Writing/GroupWriter.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: WriteGroup
    path: ../EvilDICOM/EvilDICOM/Core/IO/Writing/GroupWriter.cs
    startLine: 15
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Writing
  syntax:
    content: public static int WriteGroup(DICOMBinaryWriter dw, DICOMWriteSettings settings, DICOMObject d, IDICOMElement el)
    parameters:
    - id: dw
      type: EvilDICOM.Core.IO.Writing.DICOMBinaryWriter
    - id: settings
      type: EvilDICOM.Core.IO.Writing.DICOMWriteSettings
    - id: d
      type: EvilDICOM.Core.DICOMObject
    - id: el
      type: EvilDICOM.Core.Interfaces.IDICOMElement
    return:
      type: System.Int32
    content.vb: Public Shared Function WriteGroup(dw As DICOMBinaryWriter, settings As DICOMWriteSettings, d As DICOMObject, el As IDICOMElement) As Integer
  overload: EvilDICOM.Core.IO.Writing.GroupWriter.WriteGroup*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Core.IO.Writing.GroupWriter.WriteGroupBytes(EvilDICOM.Core.DICOMObject,EvilDICOM.Core.IO.Writing.DICOMWriteSettings,System.String)
  commentId: M:EvilDICOM.Core.IO.Writing.GroupWriter.WriteGroupBytes(EvilDICOM.Core.DICOMObject,EvilDICOM.Core.IO.Writing.DICOMWriteSettings,System.String)
  id: WriteGroupBytes(EvilDICOM.Core.DICOMObject,EvilDICOM.Core.IO.Writing.DICOMWriteSettings,System.String)
  parent: EvilDICOM.Core.IO.Writing.GroupWriter
  langs:
  - csharp
  - vb
  name: WriteGroupBytes(DICOMObject, DICOMWriteSettings, String)
  nameWithType: GroupWriter.WriteGroupBytes(DICOMObject, DICOMWriteSettings, String)
  fullName: EvilDICOM.Core.IO.Writing.GroupWriter.WriteGroupBytes(EvilDICOM.Core.DICOMObject, EvilDICOM.Core.IO.Writing.DICOMWriteSettings, System.String)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Writing/GroupWriter.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: WriteGroupBytes
    path: ../EvilDICOM/EvilDICOM/Core/IO/Writing/GroupWriter.cs
    startLine: 26
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Writing
  syntax:
    content: public static byte[] WriteGroupBytes(DICOMObject d, DICOMWriteSettings settings, string groupId)
    parameters:
    - id: d
      type: EvilDICOM.Core.DICOMObject
    - id: settings
      type: EvilDICOM.Core.IO.Writing.DICOMWriteSettings
    - id: groupId
      type: System.String
    return:
      type: System.Byte[]
    content.vb: Public Shared Function WriteGroupBytes(d As DICOMObject, settings As DICOMWriteSettings, groupId As String) As Byte()
  overload: EvilDICOM.Core.IO.Writing.GroupWriter.WriteGroupBytes*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EvilDICOM.Core.IO.Writing
  commentId: N:EvilDICOM.Core.IO.Writing
  isExternal: false
  name: EvilDICOM.Core.IO.Writing
  nameWithType: EvilDICOM.Core.IO.Writing
  fullName: EvilDICOM.Core.IO.Writing
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EvilDICOM.Core.IO.Writing.GroupWriter.IsGroupHeader*
  commentId: Overload:EvilDICOM.Core.IO.Writing.GroupWriter.IsGroupHeader
  isExternal: false
  name: IsGroupHeader
  nameWithType: GroupWriter.IsGroupHeader
  fullName: EvilDICOM.Core.IO.Writing.GroupWriter.IsGroupHeader
- uid: EvilDICOM.Core.Interfaces.IDICOMElement
  commentId: T:EvilDICOM.Core.Interfaces.IDICOMElement
  parent: EvilDICOM.Core.Interfaces
  isExternal: false
  name: IDICOMElement
  nameWithType: IDICOMElement
  fullName: EvilDICOM.Core.Interfaces.IDICOMElement
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EvilDICOM.Core.Interfaces
  commentId: N:EvilDICOM.Core.Interfaces
  isExternal: false
  name: EvilDICOM.Core.Interfaces
  nameWithType: EvilDICOM.Core.Interfaces
  fullName: EvilDICOM.Core.Interfaces
- uid: EvilDICOM.Core.IO.Writing.GroupWriter.WriteGroup*
  commentId: Overload:EvilDICOM.Core.IO.Writing.GroupWriter.WriteGroup
  isExternal: false
  name: WriteGroup
  nameWithType: GroupWriter.WriteGroup
  fullName: EvilDICOM.Core.IO.Writing.GroupWriter.WriteGroup
- uid: EvilDICOM.Core.IO.Writing.DICOMBinaryWriter
  commentId: T:EvilDICOM.Core.IO.Writing.DICOMBinaryWriter
  parent: EvilDICOM.Core.IO.Writing
  isExternal: false
  name: DICOMBinaryWriter
  nameWithType: DICOMBinaryWriter
  fullName: EvilDICOM.Core.IO.Writing.DICOMBinaryWriter
- uid: EvilDICOM.Core.IO.Writing.DICOMWriteSettings
  commentId: T:EvilDICOM.Core.IO.Writing.DICOMWriteSettings
  parent: EvilDICOM.Core.IO.Writing
  isExternal: false
  name: DICOMWriteSettings
  nameWithType: DICOMWriteSettings
  fullName: EvilDICOM.Core.IO.Writing.DICOMWriteSettings
- uid: EvilDICOM.Core.DICOMObject
  commentId: T:EvilDICOM.Core.DICOMObject
  parent: EvilDICOM.Core
  isExternal: false
  name: DICOMObject
  nameWithType: DICOMObject
  fullName: EvilDICOM.Core.DICOMObject
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EvilDICOM.Core
  commentId: N:EvilDICOM.Core
  isExternal: false
  name: EvilDICOM.Core
  nameWithType: EvilDICOM.Core
  fullName: EvilDICOM.Core
- uid: EvilDICOM.Core.IO.Writing.GroupWriter.WriteGroupBytes*
  commentId: Overload:EvilDICOM.Core.IO.Writing.GroupWriter.WriteGroupBytes
  isExternal: false
  name: WriteGroupBytes
  nameWithType: GroupWriter.WriteGroupBytes
  fullName: EvilDICOM.Core.IO.Writing.GroupWriter.WriteGroupBytes
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
