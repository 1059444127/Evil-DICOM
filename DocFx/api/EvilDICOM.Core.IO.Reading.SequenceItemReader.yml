### YamlMime:ManagedReference
items:
- uid: EvilDICOM.Core.IO.Reading.SequenceItemReader
  commentId: T:EvilDICOM.Core.IO.Reading.SequenceItemReader
  id: SequenceItemReader
  parent: EvilDICOM.Core.IO.Reading
  children:
  - EvilDICOM.Core.IO.Reading.SequenceItemReader.ReadBigEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader,EvilDICOM.Core.Enums.TransferSyntax)
  - EvilDICOM.Core.IO.Reading.SequenceItemReader.ReadLittleEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader,EvilDICOM.Core.Enums.TransferSyntax)
  - EvilDICOM.Core.IO.Reading.SequenceItemReader.SkipItemBigEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  - EvilDICOM.Core.IO.Reading.SequenceItemReader.SkipItemLittleEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader,EvilDICOM.Core.Enums.TransferSyntax)
  langs:
  - csharp
  - vb
  name: SequenceItemReader
  nameWithType: SequenceItemReader
  fullName: EvilDICOM.Core.IO.Reading.SequenceItemReader
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Reading/SequenceItemReader.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: SequenceItemReader
    path: ../EvilDICOM/EvilDICOM/Core/IO/Reading/SequenceItemReader.cs
    startLine: 7
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Reading
  syntax:
    content: 'public class SequenceItemReader : object'
    content.vb: >-
      Public Class SequenceItemReader
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EvilDICOM.Core.IO.Reading.SequenceItemReader.ReadLittleEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader,EvilDICOM.Core.Enums.TransferSyntax)
  commentId: M:EvilDICOM.Core.IO.Reading.SequenceItemReader.ReadLittleEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader,EvilDICOM.Core.Enums.TransferSyntax)
  id: ReadLittleEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader,EvilDICOM.Core.Enums.TransferSyntax)
  parent: EvilDICOM.Core.IO.Reading.SequenceItemReader
  langs:
  - csharp
  - vb
  name: ReadLittleEndian(DICOMBinaryReader, TransferSyntax)
  nameWithType: SequenceItemReader.ReadLittleEndian(DICOMBinaryReader, TransferSyntax)
  fullName: EvilDICOM.Core.IO.Reading.SequenceItemReader.ReadLittleEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader, EvilDICOM.Core.Enums.TransferSyntax)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Reading/SequenceItemReader.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: ReadLittleEndian
    path: ../EvilDICOM/EvilDICOM/Core/IO/Reading/SequenceItemReader.cs
    startLine: 12
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Reading
  syntax:
    content: public static DICOMObject ReadLittleEndian(DICOMBinaryReader dr, TransferSyntax syntax)
    parameters:
    - id: dr
      type: EvilDICOM.Core.IO.Reading.DICOMBinaryReader
    - id: syntax
      type: EvilDICOM.Core.Enums.TransferSyntax
    return:
      type: EvilDICOM.Core.DICOMObject
    content.vb: Public Shared Function ReadLittleEndian(dr As DICOMBinaryReader, syntax As TransferSyntax) As DICOMObject
  overload: EvilDICOM.Core.IO.Reading.SequenceItemReader.ReadLittleEndian*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Core.IO.Reading.SequenceItemReader.ReadBigEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader,EvilDICOM.Core.Enums.TransferSyntax)
  commentId: M:EvilDICOM.Core.IO.Reading.SequenceItemReader.ReadBigEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader,EvilDICOM.Core.Enums.TransferSyntax)
  id: ReadBigEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader,EvilDICOM.Core.Enums.TransferSyntax)
  parent: EvilDICOM.Core.IO.Reading.SequenceItemReader
  langs:
  - csharp
  - vb
  name: ReadBigEndian(DICOMBinaryReader, TransferSyntax)
  nameWithType: SequenceItemReader.ReadBigEndian(DICOMBinaryReader, TransferSyntax)
  fullName: EvilDICOM.Core.IO.Reading.SequenceItemReader.ReadBigEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader, EvilDICOM.Core.Enums.TransferSyntax)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Reading/SequenceItemReader.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: ReadBigEndian
    path: ../EvilDICOM/EvilDICOM/Core/IO/Reading/SequenceItemReader.cs
    startLine: 30
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Reading
  syntax:
    content: public static DICOMObject ReadBigEndian(DICOMBinaryReader dr, TransferSyntax syntax)
    parameters:
    - id: dr
      type: EvilDICOM.Core.IO.Reading.DICOMBinaryReader
    - id: syntax
      type: EvilDICOM.Core.Enums.TransferSyntax
    return:
      type: EvilDICOM.Core.DICOMObject
    content.vb: Public Shared Function ReadBigEndian(dr As DICOMBinaryReader, syntax As TransferSyntax) As DICOMObject
  overload: EvilDICOM.Core.IO.Reading.SequenceItemReader.ReadBigEndian*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Core.IO.Reading.SequenceItemReader.SkipItemLittleEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader,EvilDICOM.Core.Enums.TransferSyntax)
  commentId: M:EvilDICOM.Core.IO.Reading.SequenceItemReader.SkipItemLittleEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader,EvilDICOM.Core.Enums.TransferSyntax)
  id: SkipItemLittleEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader,EvilDICOM.Core.Enums.TransferSyntax)
  parent: EvilDICOM.Core.IO.Reading.SequenceItemReader
  langs:
  - csharp
  - vb
  name: SkipItemLittleEndian(DICOMBinaryReader, TransferSyntax)
  nameWithType: SequenceItemReader.SkipItemLittleEndian(DICOMBinaryReader, TransferSyntax)
  fullName: EvilDICOM.Core.IO.Reading.SequenceItemReader.SkipItemLittleEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader, EvilDICOM.Core.Enums.TransferSyntax)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Reading/SequenceItemReader.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: SkipItemLittleEndian
    path: ../EvilDICOM/EvilDICOM/Core/IO/Reading/SequenceItemReader.cs
    startLine: 48
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Reading
  syntax:
    content: public static void SkipItemLittleEndian(DICOMBinaryReader dr, TransferSyntax syntax)
    parameters:
    - id: dr
      type: EvilDICOM.Core.IO.Reading.DICOMBinaryReader
    - id: syntax
      type: EvilDICOM.Core.Enums.TransferSyntax
    content.vb: Public Shared Sub SkipItemLittleEndian(dr As DICOMBinaryReader, syntax As TransferSyntax)
  overload: EvilDICOM.Core.IO.Reading.SequenceItemReader.SkipItemLittleEndian*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Core.IO.Reading.SequenceItemReader.SkipItemBigEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  commentId: M:EvilDICOM.Core.IO.Reading.SequenceItemReader.SkipItemBigEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  id: SkipItemBigEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  parent: EvilDICOM.Core.IO.Reading.SequenceItemReader
  langs:
  - csharp
  - vb
  name: SkipItemBigEndian(DICOMBinaryReader)
  nameWithType: SequenceItemReader.SkipItemBigEndian(DICOMBinaryReader)
  fullName: EvilDICOM.Core.IO.Reading.SequenceItemReader.SkipItemBigEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Reading/SequenceItemReader.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: SkipItemBigEndian
    path: ../EvilDICOM/EvilDICOM/Core/IO/Reading/SequenceItemReader.cs
    startLine: 76
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Reading
  syntax:
    content: public static void SkipItemBigEndian(DICOMBinaryReader dr)
    parameters:
    - id: dr
      type: EvilDICOM.Core.IO.Reading.DICOMBinaryReader
    content.vb: Public Shared Sub SkipItemBigEndian(dr As DICOMBinaryReader)
  overload: EvilDICOM.Core.IO.Reading.SequenceItemReader.SkipItemBigEndian*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EvilDICOM.Core.IO.Reading
  commentId: N:EvilDICOM.Core.IO.Reading
  isExternal: false
  name: EvilDICOM.Core.IO.Reading
  nameWithType: EvilDICOM.Core.IO.Reading
  fullName: EvilDICOM.Core.IO.Reading
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EvilDICOM.Core.IO.Reading.SequenceItemReader.ReadLittleEndian*
  commentId: Overload:EvilDICOM.Core.IO.Reading.SequenceItemReader.ReadLittleEndian
  isExternal: false
  name: ReadLittleEndian
  nameWithType: SequenceItemReader.ReadLittleEndian
  fullName: EvilDICOM.Core.IO.Reading.SequenceItemReader.ReadLittleEndian
- uid: EvilDICOM.Core.IO.Reading.DICOMBinaryReader
  commentId: T:EvilDICOM.Core.IO.Reading.DICOMBinaryReader
  parent: EvilDICOM.Core.IO.Reading
  isExternal: false
  name: DICOMBinaryReader
  nameWithType: DICOMBinaryReader
  fullName: EvilDICOM.Core.IO.Reading.DICOMBinaryReader
- uid: EvilDICOM.Core.Enums.TransferSyntax
  commentId: T:EvilDICOM.Core.Enums.TransferSyntax
  parent: EvilDICOM.Core.Enums
  isExternal: false
  name: TransferSyntax
  nameWithType: TransferSyntax
  fullName: EvilDICOM.Core.Enums.TransferSyntax
- uid: EvilDICOM.Core.DICOMObject
  commentId: T:EvilDICOM.Core.DICOMObject
  parent: EvilDICOM.Core
  isExternal: false
  name: DICOMObject
  nameWithType: DICOMObject
  fullName: EvilDICOM.Core.DICOMObject
- uid: EvilDICOM.Core.Enums
  commentId: N:EvilDICOM.Core.Enums
  isExternal: false
  name: EvilDICOM.Core.Enums
  nameWithType: EvilDICOM.Core.Enums
  fullName: EvilDICOM.Core.Enums
- uid: EvilDICOM.Core
  commentId: N:EvilDICOM.Core
  isExternal: false
  name: EvilDICOM.Core
  nameWithType: EvilDICOM.Core
  fullName: EvilDICOM.Core
- uid: EvilDICOM.Core.IO.Reading.SequenceItemReader.ReadBigEndian*
  commentId: Overload:EvilDICOM.Core.IO.Reading.SequenceItemReader.ReadBigEndian
  isExternal: false
  name: ReadBigEndian
  nameWithType: SequenceItemReader.ReadBigEndian
  fullName: EvilDICOM.Core.IO.Reading.SequenceItemReader.ReadBigEndian
- uid: EvilDICOM.Core.IO.Reading.SequenceItemReader.SkipItemLittleEndian*
  commentId: Overload:EvilDICOM.Core.IO.Reading.SequenceItemReader.SkipItemLittleEndian
  isExternal: false
  name: SkipItemLittleEndian
  nameWithType: SequenceItemReader.SkipItemLittleEndian
  fullName: EvilDICOM.Core.IO.Reading.SequenceItemReader.SkipItemLittleEndian
- uid: EvilDICOM.Core.IO.Reading.SequenceItemReader.SkipItemBigEndian*
  commentId: Overload:EvilDICOM.Core.IO.Reading.SequenceItemReader.SkipItemBigEndian
  isExternal: false
  name: SkipItemBigEndian
  nameWithType: SequenceItemReader.SkipItemBigEndian
  fullName: EvilDICOM.Core.IO.Reading.SequenceItemReader.SkipItemBigEndian
