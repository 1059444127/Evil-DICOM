### YamlMime:ManagedReference
items:
- uid: EvilDICOM.Network.Extensions.IIODExtensions
  commentId: T:EvilDICOM.Network.Extensions.IIODExtensions
  id: IIODExtensions
  parent: EvilDICOM.Network.Extensions
  children:
  - EvilDICOM.Network.Extensions.IIODExtensions.GetLogString(EvilDICOM.Core.Interfaces.IIOD)
  langs:
  - csharp
  - vb
  name: IIODExtensions
  nameWithType: IIODExtensions
  fullName: EvilDICOM.Network.Extensions.IIODExtensions
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Extensions/IIODExtensions.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: IIODExtensions
    path: ../EvilDICOM/EvilDICOM/Network/Extensions/IIODExtensions.cs
    startLine: 11
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.Extensions
  syntax:
    content: 'public static class IIODExtensions : object'
    content.vb: >-
      Public Module IIODExtensions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: EvilDICOM.Network.Extensions.IIODExtensions.GetLogString(EvilDICOM.Core.Interfaces.IIOD)
  commentId: M:EvilDICOM.Network.Extensions.IIODExtensions.GetLogString(EvilDICOM.Core.Interfaces.IIOD)
  id: GetLogString(EvilDICOM.Core.Interfaces.IIOD)
  isExtensionMethod: true
  parent: EvilDICOM.Network.Extensions.IIODExtensions
  langs:
  - csharp
  - vb
  name: GetLogString(IIOD)
  nameWithType: IIODExtensions.GetLogString(IIOD)
  fullName: EvilDICOM.Network.Extensions.IIODExtensions.GetLogString(EvilDICOM.Core.Interfaces.IIOD)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Extensions/IIODExtensions.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: GetLogString
    path: ../EvilDICOM/EvilDICOM/Network/Extensions/IIODExtensions.cs
    startLine: 13
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.Extensions
  syntax:
    content: public static string GetLogString(this IIOD iod)
    parameters:
    - id: iod
      type: EvilDICOM.Core.Interfaces.IIOD
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetLogString(iod As IIOD) As String
  overload: EvilDICOM.Network.Extensions.IIODExtensions.GetLogString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EvilDICOM.Network.Extensions
  commentId: N:EvilDICOM.Network.Extensions
  isExternal: false
  name: EvilDICOM.Network.Extensions
  nameWithType: EvilDICOM.Network.Extensions
  fullName: EvilDICOM.Network.Extensions
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EvilDICOM.Network.Extensions.IIODExtensions.GetLogString*
  commentId: Overload:EvilDICOM.Network.Extensions.IIODExtensions.GetLogString
  isExternal: false
  name: GetLogString
  nameWithType: IIODExtensions.GetLogString
  fullName: EvilDICOM.Network.Extensions.IIODExtensions.GetLogString
- uid: EvilDICOM.Core.Interfaces.IIOD
  commentId: T:EvilDICOM.Core.Interfaces.IIOD
  parent: EvilDICOM.Core.Interfaces
  isExternal: false
  name: IIOD
  nameWithType: IIOD
  fullName: EvilDICOM.Core.Interfaces.IIOD
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EvilDICOM.Core.Interfaces
  commentId: N:EvilDICOM.Core.Interfaces
  isExternal: false
  name: EvilDICOM.Core.Interfaces
  nameWithType: EvilDICOM.Core.Interfaces
  fullName: EvilDICOM.Core.Interfaces
