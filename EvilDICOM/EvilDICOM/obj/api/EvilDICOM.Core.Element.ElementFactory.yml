items:
- uid: EvilDICOM.Core.Element.ElementFactory
  id: ElementFactory
  parent: EvilDICOM.Core.Element
  children:
  - EvilDICOM.Core.Element.ElementFactory.GenerateElement(EvilDICOM.Core.Element.Tag,EvilDICOM.Core.Enums.VR,System.Object,EvilDICOM.Core.Enums.TransferSyntax)
  - EvilDICOM.Core.Element.ElementFactory.GenerateElementFromStringData(EvilDICOM.Core.Element.Tag,EvilDICOM.Core.Enums.VR,System.String[])
  langs:
  - csharp
  - vb
  name: ElementFactory
  fullName: EvilDICOM.Core.Element.ElementFactory
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Element/_ElementFactory.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/Element/_ElementFactory.cs
    startLine: 13
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Element
  summary: Responsible for building concrete elements from element pieces
  example: []
  syntax:
    content: public class ElementFactory
    content.vb: Public Class ElementFactory
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: EvilDICOM.Core.Element.ElementFactory.GenerateElement(EvilDICOM.Core.Element.Tag,EvilDICOM.Core.Enums.VR,System.Object,EvilDICOM.Core.Enums.TransferSyntax)
  id: GenerateElement(EvilDICOM.Core.Element.Tag,EvilDICOM.Core.Enums.VR,System.Object,EvilDICOM.Core.Enums.TransferSyntax)
  parent: EvilDICOM.Core.Element.ElementFactory
  langs:
  - csharp
  - vb
  name: GenerateElement(Tag, VR, Object, TransferSyntax)
  fullName: EvilDICOM.Core.Element.ElementFactory.GenerateElement(EvilDICOM.Core.Element.Tag, EvilDICOM.Core.Enums.VR, System.Object, EvilDICOM.Core.Enums.TransferSyntax)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Element/_ElementFactory.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/Element/_ElementFactory.cs
    startLine: 24
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Element
  summary: >-
    Generates a concrete element class from the VR, tag, data and syntax. Also directs the appropriate data

    interpretation.
  example: []
  syntax:
    content: public static IDICOMElement GenerateElement(Tag tag, VR vr, object data, TransferSyntax syntax)
    content.vb: Public Shared Function GenerateElement(tag As Tag, vr As VR, data As Object, syntax As TransferSyntax) As IDICOMElement
    parameters:
    - id: tag
      type: EvilDICOM.Core.Element.Tag
      description: the tag of the element to be generated
    - id: vr
      type: EvilDICOM.Core.Enums.VR
      description: the VR of the element to be generated
    - id: data
      type: System.Object
      description: the raw data to be procesed (byte array)
    - id: syntax
      type: EvilDICOM.Core.Enums.TransferSyntax
      description: the transfer syntax by which to interepret the data
    return:
      type: EvilDICOM.Core.Interfaces.IDICOMElement
      description: a concrete DICOM element that uses the interface IDICOMElement
- uid: EvilDICOM.Core.Element.ElementFactory.GenerateElementFromStringData(EvilDICOM.Core.Element.Tag,EvilDICOM.Core.Enums.VR,System.String[])
  id: GenerateElementFromStringData(EvilDICOM.Core.Element.Tag,EvilDICOM.Core.Enums.VR,System.String[])
  parent: EvilDICOM.Core.Element.ElementFactory
  langs:
  - csharp
  - vb
  name: GenerateElementFromStringData(Tag, VR, String[])
  name.vb: GenerateElementFromStringData(Tag, VR, String())
  fullName: EvilDICOM.Core.Element.ElementFactory.GenerateElementFromStringData(EvilDICOM.Core.Element.Tag, EvilDICOM.Core.Enums.VR, System.String[])
  fullName.vb: EvilDICOM.Core.Element.ElementFactory.GenerateElementFromStringData(EvilDICOM.Core.Element.Tag, EvilDICOM.Core.Enums.VR, System.String())
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Element/_ElementFactory.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/Element/_ElementFactory.cs
    startLine: 113
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Element
  summary: Generates a concrete element class from the VR, tag, data and string data (from XML).
  example: []
  syntax:
    content: public static IDICOMElement GenerateElementFromStringData(Tag tag, VR vr, string[] data)
    content.vb: Public Shared Function GenerateElementFromStringData(tag As Tag, vr As VR, data As String()) As IDICOMElement
    parameters:
    - id: tag
      type: EvilDICOM.Core.Element.Tag
      description: the tag of the element to be generated
    - id: vr
      type: EvilDICOM.Core.Enums.VR
      description: the VR of the element to be generated
    - id: data
      type: System.String[]
      description: the string data of the element
    return:
      type: EvilDICOM.Core.Interfaces.IDICOMElement
      description: a concrete DICOM element that uses the interface IDICOMElement
references:
- uid: EvilDICOM.Core.Element
  isExternal: false
  name: EvilDICOM.Core.Element
  fullName: EvilDICOM.Core.Element
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: EvilDICOM.Core.Element.Tag
  parent: EvilDICOM.Core.Element
  isExternal: false
  name: Tag
  fullName: EvilDICOM.Core.Element.Tag
- uid: EvilDICOM.Core.Enums.VR
  parent: EvilDICOM.Core.Enums
  isExternal: false
  name: VR
  fullName: EvilDICOM.Core.Enums.VR
- uid: EvilDICOM.Core.Enums.TransferSyntax
  parent: EvilDICOM.Core.Enums
  isExternal: false
  name: TransferSyntax
  fullName: EvilDICOM.Core.Enums.TransferSyntax
- uid: EvilDICOM.Core.Interfaces.IDICOMElement
  parent: EvilDICOM.Core.Interfaces
  isExternal: false
  name: IDICOMElement
  fullName: EvilDICOM.Core.Interfaces.IDICOMElement
- uid: EvilDICOM.Core.Enums
  isExternal: false
  name: EvilDICOM.Core.Enums
  fullName: EvilDICOM.Core.Enums
- uid: EvilDICOM.Core.Interfaces
  isExternal: false
  name: EvilDICOM.Core.Interfaces
  fullName: EvilDICOM.Core.Interfaces
- uid: System.String[]
  isExternal: true
  name: String[]
  fullName: System.String[]
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ()
    fullName: ()
