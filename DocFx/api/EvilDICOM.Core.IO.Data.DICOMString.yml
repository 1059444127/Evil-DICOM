### YamlMime:ManagedReference
items:
- uid: EvilDICOM.Core.IO.Data.DICOMString
  commentId: T:EvilDICOM.Core.IO.Data.DICOMString
  id: DICOMString
  parent: EvilDICOM.Core.IO.Data
  children:
  - EvilDICOM.Core.IO.Data.DICOMString.Read(System.Byte[])
  - EvilDICOM.Core.IO.Data.DICOMString.SetEncoder(Encoding)
  - EvilDICOM.Core.IO.Data.DICOMString.Write(System.String)
  langs:
  - csharp
  - vb
  name: DICOMString
  nameWithType: DICOMString
  fullName: EvilDICOM.Core.IO.Data.DICOMString
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Data/DICOMString.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: DICOMString
    path: ../EvilDICOM/EvilDICOM/Core/IO/Data/DICOMString.cs
    startLine: 4
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Data
  syntax:
    content: 'public class DICOMString : object'
    content.vb: >-
      Public Class DICOMString
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EvilDICOM.Core.IO.Data.DICOMString.Read(System.Byte[])
  commentId: M:EvilDICOM.Core.IO.Data.DICOMString.Read(System.Byte[])
  id: Read(System.Byte[])
  parent: EvilDICOM.Core.IO.Data.DICOMString
  langs:
  - csharp
  - vb
  name: Read(Byte[])
  nameWithType: DICOMString.Read(Byte[])
  fullName: EvilDICOM.Core.IO.Data.DICOMString.Read(System.Byte[])
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Data/DICOMString.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: Read
    path: ../EvilDICOM/EvilDICOM/Core/IO/Data/DICOMString.cs
    startLine: 8
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Data
  syntax:
    content: public static string Read(byte[] data)
    parameters:
    - id: data
      type: System.Byte[]
    return:
      type: System.String
    content.vb: Public Shared Function Read(data As Byte()) As String
  overload: EvilDICOM.Core.IO.Data.DICOMString.Read*
  nameWithType.vb: DICOMString.Read(Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EvilDICOM.Core.IO.Data.DICOMString.Read(System.Byte())
  name.vb: Read(Byte())
- uid: EvilDICOM.Core.IO.Data.DICOMString.Write(System.String)
  commentId: M:EvilDICOM.Core.IO.Data.DICOMString.Write(System.String)
  id: Write(System.String)
  parent: EvilDICOM.Core.IO.Data.DICOMString
  langs:
  - csharp
  - vb
  name: Write(String)
  nameWithType: DICOMString.Write(String)
  fullName: EvilDICOM.Core.IO.Data.DICOMString.Write(System.String)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Data/DICOMString.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: Write
    path: ../EvilDICOM/EvilDICOM/Core/IO/Data/DICOMString.cs
    startLine: 13
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Data
  syntax:
    content: public static byte[] Write(string data)
    parameters:
    - id: data
      type: System.String
    return:
      type: System.Byte[]
    content.vb: Public Shared Function Write(data As String) As Byte()
  overload: EvilDICOM.Core.IO.Data.DICOMString.Write*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Core.IO.Data.DICOMString.SetEncoder(Encoding)
  commentId: M:EvilDICOM.Core.IO.Data.DICOMString.SetEncoder(Encoding)
  id: SetEncoder(Encoding)
  parent: EvilDICOM.Core.IO.Data.DICOMString
  langs:
  - csharp
  - vb
  name: SetEncoder(Encoding)
  nameWithType: DICOMString.SetEncoder(Encoding)
  fullName: EvilDICOM.Core.IO.Data.DICOMString.SetEncoder(Encoding)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Data/DICOMString.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: SetEncoder
    path: ../EvilDICOM/EvilDICOM/Core/IO/Data/DICOMString.cs
    startLine: 32
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Data
  syntax:
    content: public void SetEncoder(Encoding enc)
    parameters:
    - id: enc
      type: Encoding
    content.vb: Public Sub SetEncoder(enc As Encoding)
  overload: EvilDICOM.Core.IO.Data.DICOMString.SetEncoder*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EvilDICOM.Core.IO.Data
  commentId: N:EvilDICOM.Core.IO.Data
  isExternal: false
  name: EvilDICOM.Core.IO.Data
  nameWithType: EvilDICOM.Core.IO.Data
  fullName: EvilDICOM.Core.IO.Data
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EvilDICOM.Core.IO.Data.DICOMString.Read*
  commentId: Overload:EvilDICOM.Core.IO.Data.DICOMString.Read
  isExternal: false
  name: Read
  nameWithType: DICOMString.Read
  fullName: EvilDICOM.Core.IO.Data.DICOMString.Read
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EvilDICOM.Core.IO.Data.DICOMString.Write*
  commentId: Overload:EvilDICOM.Core.IO.Data.DICOMString.Write
  isExternal: false
  name: Write
  nameWithType: DICOMString.Write
  fullName: EvilDICOM.Core.IO.Data.DICOMString.Write
- uid: EvilDICOM.Core.IO.Data.DICOMString.SetEncoder*
  commentId: Overload:EvilDICOM.Core.IO.Data.DICOMString.SetEncoder
  isExternal: false
  name: SetEncoder
  nameWithType: DICOMString.SetEncoder
  fullName: EvilDICOM.Core.IO.Data.DICOMString.SetEncoder
- uid: Encoding
  commentId: '!:Encoding'
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: Encoding
