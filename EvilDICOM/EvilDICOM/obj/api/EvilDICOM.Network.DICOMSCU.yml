items:
- uid: EvilDICOM.Network.DICOMSCU
  id: DICOMSCU
  parent: EvilDICOM.Network
  children:
  - EvilDICOM.Network.DICOMSCU.#ctor(EvilDICOM.Network.Entity)
  - EvilDICOM.Network.DICOMSCU.GenerateCStoreRequest(EvilDICOM.Core.DICOMObject,System.UInt16)
  - EvilDICOM.Network.DICOMSCU.GetResponse(EvilDICOM.Network.DIMSE.CFindRequest,EvilDICOM.Network.Entity)
  - EvilDICOM.Network.DICOMSCU.GetResponse(EvilDICOM.Network.DIMSE.CMoveRequest,EvilDICOM.Network.Entity)
  - EvilDICOM.Network.DICOMSCU.SendMessage(EvilDICOM.Network.DIMSE.AbstractDIMSERequest,EvilDICOM.Network.Entity)
  langs:
  - csharp
  - vb
  name: DICOMSCU
  fullName: EvilDICOM.Network.DICOMSCU
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
    startLine: 13
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: 'public class DICOMSCU : DICOMServiceClass'
    content.vb: Public Class DICOMSCU Inherits DICOMServiceClass
  inheritance:
  - System.Object
  - EvilDICOM.Network.DICOMServiceClass
  inheritedMembers:
  - EvilDICOM.Network.DICOMServiceClass.AssociationService
  - EvilDICOM.Network.DICOMServiceClass.DIMSEService
  - EvilDICOM.Network.DICOMServiceClass.ApplicationEntity
  - EvilDICOM.Network.DICOMServiceClass.SupportedTransferSyntaxes
  - EvilDICOM.Network.DICOMServiceClass.SupportedAbstractSyntaxes
  - EvilDICOM.Network.DICOMServiceClass.Logger
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: EvilDICOM.Network.DICOMSCU.#ctor(EvilDICOM.Network.Entity)
  id: '#ctor(EvilDICOM.Network.Entity)'
  parent: EvilDICOM.Network.DICOMSCU
  langs:
  - csharp
  - vb
  name: DICOMSCU(Entity)
  fullName: EvilDICOM.Network.DICOMSCU.DICOMSCU(EvilDICOM.Network.Entity)
  type: Constructor
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
    startLine: 15
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public DICOMSCU(Entity ae)
    content.vb: Public Sub New(ae As Entity)
    parameters:
    - id: ae
      type: EvilDICOM.Network.Entity
- uid: EvilDICOM.Network.DICOMSCU.SendMessage(EvilDICOM.Network.DIMSE.AbstractDIMSERequest,EvilDICOM.Network.Entity)
  id: SendMessage(EvilDICOM.Network.DIMSE.AbstractDIMSERequest,EvilDICOM.Network.Entity)
  parent: EvilDICOM.Network.DICOMSCU
  langs:
  - csharp
  - vb
  name: SendMessage(AbstractDIMSERequest, Entity)
  fullName: EvilDICOM.Network.DICOMSCU.SendMessage(EvilDICOM.Network.DIMSE.AbstractDIMSERequest, EvilDICOM.Network.Entity)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
    startLine: 17
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public void SendMessage(AbstractDIMSERequest dimse, Entity ae)
    content.vb: Public Sub SendMessage(dimse As AbstractDIMSERequest, ae As Entity)
    parameters:
    - id: dimse
      type: EvilDICOM.Network.DIMSE.AbstractDIMSERequest
    - id: ae
      type: EvilDICOM.Network.Entity
- uid: EvilDICOM.Network.DICOMSCU.GetResponse(EvilDICOM.Network.DIMSE.CFindRequest,EvilDICOM.Network.Entity)
  id: GetResponse(EvilDICOM.Network.DIMSE.CFindRequest,EvilDICOM.Network.Entity)
  parent: EvilDICOM.Network.DICOMSCU
  langs:
  - csharp
  - vb
  name: GetResponse(CFindRequest, Entity)
  fullName: EvilDICOM.Network.DICOMSCU.GetResponse(EvilDICOM.Network.DIMSE.CFindRequest, EvilDICOM.Network.Entity)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
    startLine: 26
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public IEnumerable<CFindResponse> GetResponse(CFindRequest cFind, Entity ae)
    content.vb: Public Function GetResponse(cFind As CFindRequest, ae As Entity) As IEnumerable(Of CFindResponse)
    parameters:
    - id: cFind
      type: EvilDICOM.Network.DIMSE.CFindRequest
    - id: ae
      type: EvilDICOM.Network.Entity
    return:
      type: System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.CFindResponse}
- uid: EvilDICOM.Network.DICOMSCU.GetResponse(EvilDICOM.Network.DIMSE.CMoveRequest,EvilDICOM.Network.Entity)
  id: GetResponse(EvilDICOM.Network.DIMSE.CMoveRequest,EvilDICOM.Network.Entity)
  parent: EvilDICOM.Network.DICOMSCU
  langs:
  - csharp
  - vb
  name: GetResponse(CMoveRequest, Entity)
  fullName: EvilDICOM.Network.DICOMSCU.GetResponse(EvilDICOM.Network.DIMSE.CMoveRequest, EvilDICOM.Network.Entity)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
    startLine: 48
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public IEnumerable<CMoveResponse> GetResponse(CMoveRequest cMove, Entity ae)
    content.vb: Public Function GetResponse(cMove As CMoveRequest, ae As Entity) As IEnumerable(Of CMoveResponse)
    parameters:
    - id: cMove
      type: EvilDICOM.Network.DIMSE.CMoveRequest
    - id: ae
      type: EvilDICOM.Network.Entity
    return:
      type: System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.CMoveResponse}
- uid: EvilDICOM.Network.DICOMSCU.GenerateCStoreRequest(EvilDICOM.Core.DICOMObject,System.UInt16)
  id: GenerateCStoreRequest(EvilDICOM.Core.DICOMObject,System.UInt16)
  parent: EvilDICOM.Network.DICOMSCU
  langs:
  - csharp
  - vb
  name: GenerateCStoreRequest(DICOMObject, UInt16)
  fullName: EvilDICOM.Network.DICOMSCU.GenerateCStoreRequest(EvilDICOM.Core.DICOMObject, System.UInt16)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
    startLine: 70
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public CStoreRequest GenerateCStoreRequest(DICOMObject toSend, ushort messageId = 1)
    content.vb: Public Function GenerateCStoreRequest(toSend As DICOMObject, messageId As UShort = 1) As CStoreRequest
    parameters:
    - id: toSend
      type: EvilDICOM.Core.DICOMObject
    - id: messageId
      type: System.UInt16
    return:
      type: EvilDICOM.Network.DIMSE.CStoreRequest
references:
- uid: EvilDICOM.Network
  isExternal: false
  name: EvilDICOM.Network
  fullName: EvilDICOM.Network
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: EvilDICOM.Network.DICOMServiceClass
  parent: EvilDICOM.Network
  isExternal: false
  name: DICOMServiceClass
  fullName: EvilDICOM.Network.DICOMServiceClass
- uid: EvilDICOM.Network.DICOMServiceClass.AssociationService
  parent: EvilDICOM.Network.DICOMServiceClass
  isExternal: false
  name: AssociationService
  fullName: EvilDICOM.Network.DICOMServiceClass.AssociationService
- uid: EvilDICOM.Network.DICOMServiceClass.DIMSEService
  parent: EvilDICOM.Network.DICOMServiceClass
  isExternal: false
  name: DIMSEService
  fullName: EvilDICOM.Network.DICOMServiceClass.DIMSEService
- uid: EvilDICOM.Network.DICOMServiceClass.ApplicationEntity
  parent: EvilDICOM.Network.DICOMServiceClass
  isExternal: false
  name: ApplicationEntity
  fullName: EvilDICOM.Network.DICOMServiceClass.ApplicationEntity
- uid: EvilDICOM.Network.DICOMServiceClass.SupportedTransferSyntaxes
  parent: EvilDICOM.Network.DICOMServiceClass
  isExternal: false
  name: SupportedTransferSyntaxes
  fullName: EvilDICOM.Network.DICOMServiceClass.SupportedTransferSyntaxes
- uid: EvilDICOM.Network.DICOMServiceClass.SupportedAbstractSyntaxes
  parent: EvilDICOM.Network.DICOMServiceClass
  isExternal: false
  name: SupportedAbstractSyntaxes
  fullName: EvilDICOM.Network.DICOMServiceClass.SupportedAbstractSyntaxes
- uid: EvilDICOM.Network.DICOMServiceClass.Logger
  parent: EvilDICOM.Network.DICOMServiceClass
  isExternal: false
  name: Logger
  fullName: EvilDICOM.Network.DICOMServiceClass.Logger
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: EvilDICOM.Network.Entity
  parent: EvilDICOM.Network
  isExternal: false
  name: Entity
  fullName: EvilDICOM.Network.Entity
- uid: EvilDICOM.Network.DIMSE.AbstractDIMSERequest
  parent: EvilDICOM.Network.DIMSE
  isExternal: false
  name: AbstractDIMSERequest
  fullName: EvilDICOM.Network.DIMSE.AbstractDIMSERequest
- uid: EvilDICOM.Network.DIMSE
  isExternal: false
  name: EvilDICOM.Network.DIMSE
  fullName: EvilDICOM.Network.DIMSE
- uid: EvilDICOM.Network.DIMSE.CFindRequest
  parent: EvilDICOM.Network.DIMSE
  isExternal: false
  name: CFindRequest
  fullName: EvilDICOM.Network.DIMSE.CFindRequest
- uid: System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.CFindResponse}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<CFindResponse>
  fullName: System.Collections.Generic.IEnumerable<EvilDICOM.Network.DIMSE.CFindResponse>
  fullname.vb: System.Collections.Generic.IEnumerable(Of EvilDICOM.Network.DIMSE.CFindResponse)
  name.vb: IEnumerable(Of CFindResponse)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: EvilDICOM.Network.DIMSE.CFindResponse
    name: CFindResponse
    fullName: EvilDICOM.Network.DIMSE.CFindResponse
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: EvilDICOM.Network.DIMSE.CFindResponse
    name: CFindResponse
    fullName: EvilDICOM.Network.DIMSE.CFindResponse
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: EvilDICOM.Network.DIMSE.CMoveRequest
  parent: EvilDICOM.Network.DIMSE
  isExternal: false
  name: CMoveRequest
  fullName: EvilDICOM.Network.DIMSE.CMoveRequest
- uid: System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.CMoveResponse}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<CMoveResponse>
  fullName: System.Collections.Generic.IEnumerable<EvilDICOM.Network.DIMSE.CMoveResponse>
  fullname.vb: System.Collections.Generic.IEnumerable(Of EvilDICOM.Network.DIMSE.CMoveResponse)
  name.vb: IEnumerable(Of CMoveResponse)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: EvilDICOM.Network.DIMSE.CMoveResponse
    name: CMoveResponse
    fullName: EvilDICOM.Network.DIMSE.CMoveResponse
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: EvilDICOM.Network.DIMSE.CMoveResponse
    name: CMoveResponse
    fullName: EvilDICOM.Network.DIMSE.CMoveResponse
  - name: )
    fullName: )
- uid: EvilDICOM.Core.DICOMObject
  parent: EvilDICOM.Core
  isExternal: false
  name: DICOMObject
  fullName: EvilDICOM.Core.DICOMObject
- uid: System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  fullName: System.UInt16
- uid: EvilDICOM.Network.DIMSE.CStoreRequest
  parent: EvilDICOM.Network.DIMSE
  isExternal: false
  name: CStoreRequest
  fullName: EvilDICOM.Network.DIMSE.CStoreRequest
- uid: EvilDICOM.Core
  isExternal: false
  name: EvilDICOM.Core
  fullName: EvilDICOM.Core
