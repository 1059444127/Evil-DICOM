### YamlMime:ManagedReference
items:
- uid: EvilDICOM.Core.IO.Reading.DICOMPreambleReader
  commentId: T:EvilDICOM.Core.IO.Reading.DICOMPreambleReader
  id: DICOMPreambleReader
  parent: EvilDICOM.Core.IO.Reading
  children:
  - EvilDICOM.Core.IO.Reading.DICOMPreambleReader.Read(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  langs:
  - csharp
  - vb
  name: DICOMPreambleReader
  nameWithType: DICOMPreambleReader
  fullName: EvilDICOM.Core.IO.Reading.DICOMPreambleReader
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Reading/DICOMPreambleReader.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: DICOMPreambleReader
    path: ../EvilDICOM/EvilDICOM/Core/IO/Reading/DICOMPreambleReader.cs
    startLine: 9
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Reading
  summary: "\nThis class can read the DICOM preamble consisting of 128 null bits followed by the ASCII characters DICM.\n"
  example: []
  syntax:
    content: 'public static class DICOMPreambleReader : object'
    content.vb: >-
      Public Module DICOMPreambleReader
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: EvilDICOM.Core.IO.Reading.DICOMPreambleReader.Read(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  commentId: M:EvilDICOM.Core.IO.Reading.DICOMPreambleReader.Read(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  id: Read(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  parent: EvilDICOM.Core.IO.Reading.DICOMPreambleReader
  langs:
  - csharp
  - vb
  name: Read(DICOMBinaryReader)
  nameWithType: DICOMPreambleReader.Read(DICOMBinaryReader)
  fullName: EvilDICOM.Core.IO.Reading.DICOMPreambleReader.Read(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Reading/DICOMPreambleReader.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: Read
    path: ../EvilDICOM/EvilDICOM/Core/IO/Reading/DICOMPreambleReader.cs
    startLine: 16
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Reading
  summary: "\nReads the first 132 bits of a file to check if it contains the DICOM preamble.\n"
  example: []
  syntax:
    content: public static bool Read(DICOMBinaryReader dr)
    parameters:
    - id: dr
      type: EvilDICOM.Core.IO.Reading.DICOMBinaryReader
      description: a stream containing the bits of the file
    return:
      type: System.Boolean
      description: a boolean indicating whether or not the DICOM preamble was in the file
    content.vb: Public Shared Function Read(dr As DICOMBinaryReader) As Boolean
  overload: EvilDICOM.Core.IO.Reading.DICOMPreambleReader.Read*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EvilDICOM.Core.IO.Reading
  commentId: N:EvilDICOM.Core.IO.Reading
  isExternal: false
  name: EvilDICOM.Core.IO.Reading
  nameWithType: EvilDICOM.Core.IO.Reading
  fullName: EvilDICOM.Core.IO.Reading
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EvilDICOM.Core.IO.Reading.DICOMPreambleReader.Read*
  commentId: Overload:EvilDICOM.Core.IO.Reading.DICOMPreambleReader.Read
  isExternal: false
  name: Read
  nameWithType: DICOMPreambleReader.Read
  fullName: EvilDICOM.Core.IO.Reading.DICOMPreambleReader.Read
- uid: EvilDICOM.Core.IO.Reading.DICOMBinaryReader
  commentId: T:EvilDICOM.Core.IO.Reading.DICOMBinaryReader
  parent: EvilDICOM.Core.IO.Reading
  isExternal: false
  name: DICOMBinaryReader
  nameWithType: DICOMBinaryReader
  fullName: EvilDICOM.Core.IO.Reading.DICOMBinaryReader
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
