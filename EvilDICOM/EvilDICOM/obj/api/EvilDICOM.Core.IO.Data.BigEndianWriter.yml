items:
- uid: EvilDICOM.Core.IO.Data.BigEndianWriter
  id: BigEndianWriter
  parent: EvilDICOM.Core.IO.Data
  children:
  - EvilDICOM.Core.IO.Data.BigEndianWriter.WriteDoublePrecision(EvilDICOM.Core.DICOMData{System.Double})
  - EvilDICOM.Core.IO.Data.BigEndianWriter.WriteDoublePrecisionSingle(System.Double)
  - EvilDICOM.Core.IO.Data.BigEndianWriter.WriteSignedLong(EvilDICOM.Core.DICOMData{System.Int32})
  - EvilDICOM.Core.IO.Data.BigEndianWriter.WriteSignedLongSingle(System.Int32)
  - EvilDICOM.Core.IO.Data.BigEndianWriter.WriteSignedShort(EvilDICOM.Core.DICOMData{System.Int16})
  - EvilDICOM.Core.IO.Data.BigEndianWriter.WriteSignedShortSingle(System.Int16)
  - EvilDICOM.Core.IO.Data.BigEndianWriter.WriteSinglePrecision(EvilDICOM.Core.DICOMData{System.Single})
  - EvilDICOM.Core.IO.Data.BigEndianWriter.WriteSinglePrecisionSingle(System.Single)
  - EvilDICOM.Core.IO.Data.BigEndianWriter.WriteTag(EvilDICOM.Core.DICOMData{EvilDICOM.Core.Element.Tag})
  - EvilDICOM.Core.IO.Data.BigEndianWriter.WriteTagSingle(EvilDICOM.Core.Element.Tag)
  - EvilDICOM.Core.IO.Data.BigEndianWriter.WriteUnsignedLong(EvilDICOM.Core.DICOMData{System.UInt32})
  - EvilDICOM.Core.IO.Data.BigEndianWriter.WriteUnsignedLongSingle(System.UInt32)
  - EvilDICOM.Core.IO.Data.BigEndianWriter.WriteUnsignedShort(EvilDICOM.Core.DICOMData{System.UInt16})
  - EvilDICOM.Core.IO.Data.BigEndianWriter.WriteUnsignedShortSingle(System.UInt16)
  langs:
  - csharp
  - vb
  name: BigEndianWriter
  fullName: EvilDICOM.Core.IO.Data.BigEndianWriter
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Data/BigEndianWriter.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/IO/Data/BigEndianWriter.cs
    startLine: 7
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Data
  syntax:
    content: public class BigEndianWriter
    content.vb: Public Class BigEndianWriter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: EvilDICOM.Core.IO.Data.BigEndianWriter.WriteTag(EvilDICOM.Core.DICOMData{EvilDICOM.Core.Element.Tag})
  id: WriteTag(EvilDICOM.Core.DICOMData{EvilDICOM.Core.Element.Tag})
  parent: EvilDICOM.Core.IO.Data.BigEndianWriter
  langs:
  - csharp
  - vb
  name: WriteTag(DICOMData<Tag>)
  name.vb: WriteTag(DICOMData(Of Tag))
  fullName: EvilDICOM.Core.IO.Data.BigEndianWriter.WriteTag(EvilDICOM.Core.DICOMData<EvilDICOM.Core.Element.Tag>)
  fullName.vb: EvilDICOM.Core.IO.Data.BigEndianWriter.WriteTag(EvilDICOM.Core.DICOMData(Of EvilDICOM.Core.Element.Tag))
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Data/BigEndianWriter.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/IO/Data/BigEndianWriter.cs
    startLine: 9
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Data
  syntax:
    content: public static byte[] WriteTag(DICOMData<Tag> data)
    content.vb: Public Shared Function WriteTag(data As DICOMData(Of Tag)) As Byte()
    parameters:
    - id: data
      type: EvilDICOM.Core.DICOMData{EvilDICOM.Core.Element.Tag}
    return:
      type: System.Byte[]
- uid: EvilDICOM.Core.IO.Data.BigEndianWriter.WriteSinglePrecision(EvilDICOM.Core.DICOMData{System.Single})
  id: WriteSinglePrecision(EvilDICOM.Core.DICOMData{System.Single})
  parent: EvilDICOM.Core.IO.Data.BigEndianWriter
  langs:
  - csharp
  - vb
  name: WriteSinglePrecision(DICOMData<Single>)
  name.vb: WriteSinglePrecision(DICOMData(Of Single))
  fullName: EvilDICOM.Core.IO.Data.BigEndianWriter.WriteSinglePrecision(EvilDICOM.Core.DICOMData<System.Single>)
  fullName.vb: EvilDICOM.Core.IO.Data.BigEndianWriter.WriteSinglePrecision(EvilDICOM.Core.DICOMData(Of System.Single))
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Data/BigEndianWriter.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/IO/Data/BigEndianWriter.cs
    startLine: 14
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Data
  syntax:
    content: public static byte[] WriteSinglePrecision(DICOMData<float> data)
    content.vb: Public Shared Function WriteSinglePrecision(data As DICOMData(Of Single)) As Byte()
    parameters:
    - id: data
      type: EvilDICOM.Core.DICOMData{System.Single}
    return:
      type: System.Byte[]
- uid: EvilDICOM.Core.IO.Data.BigEndianWriter.WriteDoublePrecision(EvilDICOM.Core.DICOMData{System.Double})
  id: WriteDoublePrecision(EvilDICOM.Core.DICOMData{System.Double})
  parent: EvilDICOM.Core.IO.Data.BigEndianWriter
  langs:
  - csharp
  - vb
  name: WriteDoublePrecision(DICOMData<Double>)
  name.vb: WriteDoublePrecision(DICOMData(Of Double))
  fullName: EvilDICOM.Core.IO.Data.BigEndianWriter.WriteDoublePrecision(EvilDICOM.Core.DICOMData<System.Double>)
  fullName.vb: EvilDICOM.Core.IO.Data.BigEndianWriter.WriteDoublePrecision(EvilDICOM.Core.DICOMData(Of System.Double))
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Data/BigEndianWriter.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/IO/Data/BigEndianWriter.cs
    startLine: 19
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Data
  syntax:
    content: public static byte[] WriteDoublePrecision(DICOMData<double> data)
    content.vb: Public Shared Function WriteDoublePrecision(data As DICOMData(Of Double)) As Byte()
    parameters:
    - id: data
      type: EvilDICOM.Core.DICOMData{System.Double}
    return:
      type: System.Byte[]
- uid: EvilDICOM.Core.IO.Data.BigEndianWriter.WriteSignedLong(EvilDICOM.Core.DICOMData{System.Int32})
  id: WriteSignedLong(EvilDICOM.Core.DICOMData{System.Int32})
  parent: EvilDICOM.Core.IO.Data.BigEndianWriter
  langs:
  - csharp
  - vb
  name: WriteSignedLong(DICOMData<Int32>)
  name.vb: WriteSignedLong(DICOMData(Of Int32))
  fullName: EvilDICOM.Core.IO.Data.BigEndianWriter.WriteSignedLong(EvilDICOM.Core.DICOMData<System.Int32>)
  fullName.vb: EvilDICOM.Core.IO.Data.BigEndianWriter.WriteSignedLong(EvilDICOM.Core.DICOMData(Of System.Int32))
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Data/BigEndianWriter.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/IO/Data/BigEndianWriter.cs
    startLine: 24
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Data
  syntax:
    content: public static byte[] WriteSignedLong(DICOMData<int> data)
    content.vb: Public Shared Function WriteSignedLong(data As DICOMData(Of Integer)) As Byte()
    parameters:
    - id: data
      type: EvilDICOM.Core.DICOMData{System.Int32}
    return:
      type: System.Byte[]
- uid: EvilDICOM.Core.IO.Data.BigEndianWriter.WriteUnsignedLong(EvilDICOM.Core.DICOMData{System.UInt32})
  id: WriteUnsignedLong(EvilDICOM.Core.DICOMData{System.UInt32})
  parent: EvilDICOM.Core.IO.Data.BigEndianWriter
  langs:
  - csharp
  - vb
  name: WriteUnsignedLong(DICOMData<UInt32>)
  name.vb: WriteUnsignedLong(DICOMData(Of UInt32))
  fullName: EvilDICOM.Core.IO.Data.BigEndianWriter.WriteUnsignedLong(EvilDICOM.Core.DICOMData<System.UInt32>)
  fullName.vb: EvilDICOM.Core.IO.Data.BigEndianWriter.WriteUnsignedLong(EvilDICOM.Core.DICOMData(Of System.UInt32))
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Data/BigEndianWriter.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/IO/Data/BigEndianWriter.cs
    startLine: 29
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Data
  syntax:
    content: public static byte[] WriteUnsignedLong(DICOMData<uint> data)
    content.vb: Public Shared Function WriteUnsignedLong(data As DICOMData(Of UInteger)) As Byte()
    parameters:
    - id: data
      type: EvilDICOM.Core.DICOMData{System.UInt32}
    return:
      type: System.Byte[]
- uid: EvilDICOM.Core.IO.Data.BigEndianWriter.WriteSignedShort(EvilDICOM.Core.DICOMData{System.Int16})
  id: WriteSignedShort(EvilDICOM.Core.DICOMData{System.Int16})
  parent: EvilDICOM.Core.IO.Data.BigEndianWriter
  langs:
  - csharp
  - vb
  name: WriteSignedShort(DICOMData<Int16>)
  name.vb: WriteSignedShort(DICOMData(Of Int16))
  fullName: EvilDICOM.Core.IO.Data.BigEndianWriter.WriteSignedShort(EvilDICOM.Core.DICOMData<System.Int16>)
  fullName.vb: EvilDICOM.Core.IO.Data.BigEndianWriter.WriteSignedShort(EvilDICOM.Core.DICOMData(Of System.Int16))
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Data/BigEndianWriter.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/IO/Data/BigEndianWriter.cs
    startLine: 34
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Data
  syntax:
    content: public static byte[] WriteSignedShort(DICOMData<short> data)
    content.vb: Public Shared Function WriteSignedShort(data As DICOMData(Of Short)) As Byte()
    parameters:
    - id: data
      type: EvilDICOM.Core.DICOMData{System.Int16}
    return:
      type: System.Byte[]
- uid: EvilDICOM.Core.IO.Data.BigEndianWriter.WriteUnsignedShort(EvilDICOM.Core.DICOMData{System.UInt16})
  id: WriteUnsignedShort(EvilDICOM.Core.DICOMData{System.UInt16})
  parent: EvilDICOM.Core.IO.Data.BigEndianWriter
  langs:
  - csharp
  - vb
  name: WriteUnsignedShort(DICOMData<UInt16>)
  name.vb: WriteUnsignedShort(DICOMData(Of UInt16))
  fullName: EvilDICOM.Core.IO.Data.BigEndianWriter.WriteUnsignedShort(EvilDICOM.Core.DICOMData<System.UInt16>)
  fullName.vb: EvilDICOM.Core.IO.Data.BigEndianWriter.WriteUnsignedShort(EvilDICOM.Core.DICOMData(Of System.UInt16))
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Data/BigEndianWriter.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/IO/Data/BigEndianWriter.cs
    startLine: 39
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Data
  syntax:
    content: public static byte[] WriteUnsignedShort(DICOMData<ushort> data)
    content.vb: Public Shared Function WriteUnsignedShort(data As DICOMData(Of UShort)) As Byte()
    parameters:
    - id: data
      type: EvilDICOM.Core.DICOMData{System.UInt16}
    return:
      type: System.Byte[]
- uid: EvilDICOM.Core.IO.Data.BigEndianWriter.WriteTagSingle(EvilDICOM.Core.Element.Tag)
  id: WriteTagSingle(EvilDICOM.Core.Element.Tag)
  parent: EvilDICOM.Core.IO.Data.BigEndianWriter
  langs:
  - csharp
  - vb
  name: WriteTagSingle(Tag)
  fullName: EvilDICOM.Core.IO.Data.BigEndianWriter.WriteTagSingle(EvilDICOM.Core.Element.Tag)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Data/BigEndianWriter.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/IO/Data/BigEndianWriter.cs
    startLine: 46
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Data
  syntax:
    content: public static byte[] WriteTagSingle(Tag tag)
    content.vb: Public Shared Function WriteTagSingle(tag As Tag) As Byte()
    parameters:
    - id: tag
      type: EvilDICOM.Core.Element.Tag
    return:
      type: System.Byte[]
- uid: EvilDICOM.Core.IO.Data.BigEndianWriter.WriteSinglePrecisionSingle(System.Single)
  id: WriteSinglePrecisionSingle(System.Single)
  parent: EvilDICOM.Core.IO.Data.BigEndianWriter
  langs:
  - csharp
  - vb
  name: WriteSinglePrecisionSingle(Single)
  fullName: EvilDICOM.Core.IO.Data.BigEndianWriter.WriteSinglePrecisionSingle(System.Single)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Data/BigEndianWriter.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/IO/Data/BigEndianWriter.cs
    startLine: 51
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Data
  syntax:
    content: public static byte[] WriteSinglePrecisionSingle(float data)
    content.vb: Public Shared Function WriteSinglePrecisionSingle(data As Single) As Byte()
    parameters:
    - id: data
      type: System.Single
    return:
      type: System.Byte[]
- uid: EvilDICOM.Core.IO.Data.BigEndianWriter.WriteDoublePrecisionSingle(System.Double)
  id: WriteDoublePrecisionSingle(System.Double)
  parent: EvilDICOM.Core.IO.Data.BigEndianWriter
  langs:
  - csharp
  - vb
  name: WriteDoublePrecisionSingle(Double)
  fullName: EvilDICOM.Core.IO.Data.BigEndianWriter.WriteDoublePrecisionSingle(System.Double)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Data/BigEndianWriter.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/IO/Data/BigEndianWriter.cs
    startLine: 56
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Data
  syntax:
    content: public static byte[] WriteDoublePrecisionSingle(double data)
    content.vb: Public Shared Function WriteDoublePrecisionSingle(data As Double) As Byte()
    parameters:
    - id: data
      type: System.Double
    return:
      type: System.Byte[]
- uid: EvilDICOM.Core.IO.Data.BigEndianWriter.WriteSignedLongSingle(System.Int32)
  id: WriteSignedLongSingle(System.Int32)
  parent: EvilDICOM.Core.IO.Data.BigEndianWriter
  langs:
  - csharp
  - vb
  name: WriteSignedLongSingle(Int32)
  fullName: EvilDICOM.Core.IO.Data.BigEndianWriter.WriteSignedLongSingle(System.Int32)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Data/BigEndianWriter.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/IO/Data/BigEndianWriter.cs
    startLine: 61
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Data
  syntax:
    content: public static byte[] WriteSignedLongSingle(int data)
    content.vb: Public Shared Function WriteSignedLongSingle(data As Integer) As Byte()
    parameters:
    - id: data
      type: System.Int32
    return:
      type: System.Byte[]
- uid: EvilDICOM.Core.IO.Data.BigEndianWriter.WriteUnsignedLongSingle(System.UInt32)
  id: WriteUnsignedLongSingle(System.UInt32)
  parent: EvilDICOM.Core.IO.Data.BigEndianWriter
  langs:
  - csharp
  - vb
  name: WriteUnsignedLongSingle(UInt32)
  fullName: EvilDICOM.Core.IO.Data.BigEndianWriter.WriteUnsignedLongSingle(System.UInt32)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Data/BigEndianWriter.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/IO/Data/BigEndianWriter.cs
    startLine: 66
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Data
  syntax:
    content: public static byte[] WriteUnsignedLongSingle(uint data)
    content.vb: Public Shared Function WriteUnsignedLongSingle(data As UInteger) As Byte()
    parameters:
    - id: data
      type: System.UInt32
    return:
      type: System.Byte[]
- uid: EvilDICOM.Core.IO.Data.BigEndianWriter.WriteSignedShortSingle(System.Int16)
  id: WriteSignedShortSingle(System.Int16)
  parent: EvilDICOM.Core.IO.Data.BigEndianWriter
  langs:
  - csharp
  - vb
  name: WriteSignedShortSingle(Int16)
  fullName: EvilDICOM.Core.IO.Data.BigEndianWriter.WriteSignedShortSingle(System.Int16)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Data/BigEndianWriter.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/IO/Data/BigEndianWriter.cs
    startLine: 71
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Data
  syntax:
    content: public static byte[] WriteSignedShortSingle(short data)
    content.vb: Public Shared Function WriteSignedShortSingle(data As Short) As Byte()
    parameters:
    - id: data
      type: System.Int16
    return:
      type: System.Byte[]
- uid: EvilDICOM.Core.IO.Data.BigEndianWriter.WriteUnsignedShortSingle(System.UInt16)
  id: WriteUnsignedShortSingle(System.UInt16)
  parent: EvilDICOM.Core.IO.Data.BigEndianWriter
  langs:
  - csharp
  - vb
  name: WriteUnsignedShortSingle(UInt16)
  fullName: EvilDICOM.Core.IO.Data.BigEndianWriter.WriteUnsignedShortSingle(System.UInt16)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Data/BigEndianWriter.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Core/IO/Data/BigEndianWriter.cs
    startLine: 76
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Data
  syntax:
    content: public static byte[] WriteUnsignedShortSingle(ushort data)
    content.vb: Public Shared Function WriteUnsignedShortSingle(data As UShort) As Byte()
    parameters:
    - id: data
      type: System.UInt16
    return:
      type: System.Byte[]
references:
- uid: EvilDICOM.Core.IO.Data
  isExternal: false
  name: EvilDICOM.Core.IO.Data
  fullName: EvilDICOM.Core.IO.Data
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: EvilDICOM.Core.DICOMData{EvilDICOM.Core.Element.Tag}
  parent: EvilDICOM.Core
  definition: EvilDICOM.Core.DICOMData`1
  name: DICOMData<Tag>
  fullName: EvilDICOM.Core.DICOMData<EvilDICOM.Core.Element.Tag>
  fullname.vb: EvilDICOM.Core.DICOMData(Of EvilDICOM.Core.Element.Tag)
  name.vb: DICOMData(Of Tag)
  spec.csharp:
  - uid: EvilDICOM.Core.DICOMData`1
    name: DICOMData
    fullName: EvilDICOM.Core.DICOMData
  - name: <
    fullName: <
  - uid: EvilDICOM.Core.Element.Tag
    name: Tag
    fullName: EvilDICOM.Core.Element.Tag
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: EvilDICOM.Core.DICOMData`1
    name: DICOMData
    fullName: EvilDICOM.Core.DICOMData
  - name: '(Of '
    fullName: '(Of '
  - uid: EvilDICOM.Core.Element.Tag
    name: Tag
    fullName: EvilDICOM.Core.Element.Tag
  - name: )
    fullName: )
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
- uid: EvilDICOM.Core.DICOMData`1
  parent: EvilDICOM.Core
  isExternal: false
  name: DICOMData<T>
  fullName: EvilDICOM.Core.DICOMData<T>
  fullname.vb: EvilDICOM.Core.DICOMData(Of T)
  name.vb: DICOMData(Of T)
  spec.csharp:
  - uid: EvilDICOM.Core.DICOMData`1
    name: DICOMData
    fullName: EvilDICOM.Core.DICOMData
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: EvilDICOM.Core.DICOMData`1
    name: DICOMData
    fullName: EvilDICOM.Core.DICOMData
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: EvilDICOM.Core
  isExternal: false
  name: EvilDICOM.Core
  fullName: EvilDICOM.Core
- uid: EvilDICOM.Core.DICOMData{System.Single}
  parent: EvilDICOM.Core
  definition: EvilDICOM.Core.DICOMData`1
  name: DICOMData<Single>
  fullName: EvilDICOM.Core.DICOMData<System.Single>
  fullname.vb: EvilDICOM.Core.DICOMData(Of System.Single)
  name.vb: DICOMData(Of Single)
  spec.csharp:
  - uid: EvilDICOM.Core.DICOMData`1
    name: DICOMData
    fullName: EvilDICOM.Core.DICOMData
  - name: <
    fullName: <
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: EvilDICOM.Core.DICOMData`1
    name: DICOMData
    fullName: EvilDICOM.Core.DICOMData
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: )
    fullName: )
- uid: EvilDICOM.Core.DICOMData{System.Double}
  parent: EvilDICOM.Core
  definition: EvilDICOM.Core.DICOMData`1
  name: DICOMData<Double>
  fullName: EvilDICOM.Core.DICOMData<System.Double>
  fullname.vb: EvilDICOM.Core.DICOMData(Of System.Double)
  name.vb: DICOMData(Of Double)
  spec.csharp:
  - uid: EvilDICOM.Core.DICOMData`1
    name: DICOMData
    fullName: EvilDICOM.Core.DICOMData
  - name: <
    fullName: <
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: EvilDICOM.Core.DICOMData`1
    name: DICOMData
    fullName: EvilDICOM.Core.DICOMData
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
- uid: EvilDICOM.Core.DICOMData{System.Int32}
  parent: EvilDICOM.Core
  definition: EvilDICOM.Core.DICOMData`1
  name: DICOMData<Int32>
  fullName: EvilDICOM.Core.DICOMData<System.Int32>
  fullname.vb: EvilDICOM.Core.DICOMData(Of System.Int32)
  name.vb: DICOMData(Of Int32)
  spec.csharp:
  - uid: EvilDICOM.Core.DICOMData`1
    name: DICOMData
    fullName: EvilDICOM.Core.DICOMData
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: EvilDICOM.Core.DICOMData`1
    name: DICOMData
    fullName: EvilDICOM.Core.DICOMData
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: EvilDICOM.Core.DICOMData{System.UInt32}
  parent: EvilDICOM.Core
  definition: EvilDICOM.Core.DICOMData`1
  name: DICOMData<UInt32>
  fullName: EvilDICOM.Core.DICOMData<System.UInt32>
  fullname.vb: EvilDICOM.Core.DICOMData(Of System.UInt32)
  name.vb: DICOMData(Of UInt32)
  spec.csharp:
  - uid: EvilDICOM.Core.DICOMData`1
    name: DICOMData
    fullName: EvilDICOM.Core.DICOMData
  - name: <
    fullName: <
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: EvilDICOM.Core.DICOMData`1
    name: DICOMData
    fullName: EvilDICOM.Core.DICOMData
  - name: '(Of '
    fullName: '(Of '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    fullName: )
- uid: EvilDICOM.Core.DICOMData{System.Int16}
  parent: EvilDICOM.Core
  definition: EvilDICOM.Core.DICOMData`1
  name: DICOMData<Int16>
  fullName: EvilDICOM.Core.DICOMData<System.Int16>
  fullname.vb: EvilDICOM.Core.DICOMData(Of System.Int16)
  name.vb: DICOMData(Of Int16)
  spec.csharp:
  - uid: EvilDICOM.Core.DICOMData`1
    name: DICOMData
    fullName: EvilDICOM.Core.DICOMData
  - name: <
    fullName: <
  - uid: System.Int16
    name: Int16
    fullName: System.Int16
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: EvilDICOM.Core.DICOMData`1
    name: DICOMData
    fullName: EvilDICOM.Core.DICOMData
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int16
    name: Int16
    fullName: System.Int16
    isExternal: true
  - name: )
    fullName: )
- uid: EvilDICOM.Core.DICOMData{System.UInt16}
  parent: EvilDICOM.Core
  definition: EvilDICOM.Core.DICOMData`1
  name: DICOMData<UInt16>
  fullName: EvilDICOM.Core.DICOMData<System.UInt16>
  fullname.vb: EvilDICOM.Core.DICOMData(Of System.UInt16)
  name.vb: DICOMData(Of UInt16)
  spec.csharp:
  - uid: EvilDICOM.Core.DICOMData`1
    name: DICOMData
    fullName: EvilDICOM.Core.DICOMData
  - name: <
    fullName: <
  - uid: System.UInt16
    name: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: EvilDICOM.Core.DICOMData`1
    name: DICOMData
    fullName: EvilDICOM.Core.DICOMData
  - name: '(Of '
    fullName: '(Of '
  - uid: System.UInt16
    name: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    fullName: )
- uid: EvilDICOM.Core.Element.Tag
  parent: EvilDICOM.Core.Element
  isExternal: false
  name: Tag
  fullName: EvilDICOM.Core.Element.Tag
- uid: EvilDICOM.Core.Element
  isExternal: false
  name: EvilDICOM.Core.Element
  fullName: EvilDICOM.Core.Element
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  fullName: System.Single
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  fullName: System.Double
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  fullName: System.UInt32
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  fullName: System.Int16
- uid: System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  fullName: System.UInt16
