### YamlMime:ManagedReference
items:
- uid: EvilDICOM.Network.Readers.DIMSEReader
  commentId: T:EvilDICOM.Network.Readers.DIMSEReader
  id: DIMSEReader
  parent: EvilDICOM.Network.Readers
  children:
  - EvilDICOM.Network.Readers.DIMSEReader.CreateDICOMObject(System.Byte[],EvilDICOM.Core.Enums.TransferSyntax)
  - EvilDICOM.Network.Readers.DIMSEReader.MergePDataTFData(List{EvilDICOM.Network.PDUs.PDataTF})
  - EvilDICOM.Network.Readers.DIMSEReader.TryReadDIMSE(EvilDICOM.Core.DICOMObject,EvilDICOM.Network.DIMSE.AbstractDIMSE@)
  langs:
  - csharp
  - vb
  name: DIMSEReader
  nameWithType: DIMSEReader
  fullName: EvilDICOM.Network.Readers.DIMSEReader
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Readers/DIMSEReader.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: DIMSEReader
    path: ../EvilDICOM/EvilDICOM/Network/Readers/DIMSEReader.cs
    startLine: 15
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.Readers
  syntax:
    content: 'public class DIMSEReader : object'
    content.vb: >-
      Public Class DIMSEReader
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EvilDICOM.Network.Readers.DIMSEReader.CreateDICOMObject(System.Byte[],EvilDICOM.Core.Enums.TransferSyntax)
  commentId: M:EvilDICOM.Network.Readers.DIMSEReader.CreateDICOMObject(System.Byte[],EvilDICOM.Core.Enums.TransferSyntax)
  id: CreateDICOMObject(System.Byte[],EvilDICOM.Core.Enums.TransferSyntax)
  parent: EvilDICOM.Network.Readers.DIMSEReader
  langs:
  - csharp
  - vb
  name: CreateDICOMObject(Byte[], TransferSyntax)
  nameWithType: DIMSEReader.CreateDICOMObject(Byte[], TransferSyntax)
  fullName: EvilDICOM.Network.Readers.DIMSEReader.CreateDICOMObject(System.Byte[], EvilDICOM.Core.Enums.TransferSyntax)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Readers/DIMSEReader.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: CreateDICOMObject
    path: ../EvilDICOM/EvilDICOM/Network/Readers/DIMSEReader.cs
    startLine: 17
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.Readers
  syntax:
    content: public static DICOMObject CreateDICOMObject(byte[] dimse, TransferSyntax syntax = TransferSyntax.IMPLICIT_VR_LITTLE_ENDIAN)
    parameters:
    - id: dimse
      type: System.Byte[]
    - id: syntax
      type: EvilDICOM.Core.Enums.TransferSyntax
    return:
      type: EvilDICOM.Core.DICOMObject
    content.vb: Public Shared Function CreateDICOMObject(dimse As Byte(), syntax As TransferSyntax = TransferSyntax.IMPLICIT_VR_LITTLE_ENDIAN) As DICOMObject
  overload: EvilDICOM.Network.Readers.DIMSEReader.CreateDICOMObject*
  nameWithType.vb: DIMSEReader.CreateDICOMObject(Byte(), TransferSyntax)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EvilDICOM.Network.Readers.DIMSEReader.CreateDICOMObject(System.Byte(), EvilDICOM.Core.Enums.TransferSyntax)
  name.vb: CreateDICOMObject(Byte(), TransferSyntax)
- uid: EvilDICOM.Network.Readers.DIMSEReader.MergePDataTFData(List{EvilDICOM.Network.PDUs.PDataTF})
  commentId: M:EvilDICOM.Network.Readers.DIMSEReader.MergePDataTFData(List{EvilDICOM.Network.PDUs.PDataTF})
  id: MergePDataTFData(List{EvilDICOM.Network.PDUs.PDataTF})
  parent: EvilDICOM.Network.Readers.DIMSEReader
  langs:
  - csharp
  - vb
  name: MergePDataTFData(List<PDataTF>)
  nameWithType: DIMSEReader.MergePDataTFData(List<PDataTF>)
  fullName: EvilDICOM.Network.Readers.DIMSEReader.MergePDataTFData(List<EvilDICOM.Network.PDUs.PDataTF>)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Readers/DIMSEReader.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: MergePDataTFData
    path: ../EvilDICOM/EvilDICOM/Network/Readers/DIMSEReader.cs
    startLine: 31
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.Readers
  summary: "\nTakes a list of PData transfer objects and writes them to a byte array for outgoing messaging\n"
  example: []
  syntax:
    content: public static byte[] MergePDataTFData(List<PDataTF> data)
    parameters:
    - id: data
      type: List{EvilDICOM.Network.PDUs.PDataTF}
      description: the PData transfer objects to be sent
    return:
      type: System.Byte[]
      description: a byte array containing the PData objects
    content.vb: Public Shared Function MergePDataTFData(data As List(Of PDataTF)) As Byte()
  overload: EvilDICOM.Network.Readers.DIMSEReader.MergePDataTFData*
  nameWithType.vb: DIMSEReader.MergePDataTFData(List(Of PDataTF))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EvilDICOM.Network.Readers.DIMSEReader.MergePDataTFData(List(Of EvilDICOM.Network.PDUs.PDataTF))
  name.vb: MergePDataTFData(List(Of PDataTF))
- uid: EvilDICOM.Network.Readers.DIMSEReader.TryReadDIMSE(EvilDICOM.Core.DICOMObject,EvilDICOM.Network.DIMSE.AbstractDIMSE@)
  commentId: M:EvilDICOM.Network.Readers.DIMSEReader.TryReadDIMSE(EvilDICOM.Core.DICOMObject,EvilDICOM.Network.DIMSE.AbstractDIMSE@)
  id: TryReadDIMSE(EvilDICOM.Core.DICOMObject,EvilDICOM.Network.DIMSE.AbstractDIMSE@)
  parent: EvilDICOM.Network.Readers.DIMSEReader
  langs:
  - csharp
  - vb
  name: TryReadDIMSE(DICOMObject, out AbstractDIMSE)
  nameWithType: DIMSEReader.TryReadDIMSE(DICOMObject, out AbstractDIMSE)
  fullName: EvilDICOM.Network.Readers.DIMSEReader.TryReadDIMSE(EvilDICOM.Core.DICOMObject, out EvilDICOM.Network.DIMSE.AbstractDIMSE)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Readers/DIMSEReader.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    id: TryReadDIMSE
    path: ../EvilDICOM/EvilDICOM/Network/Readers/DIMSEReader.cs
    startLine: 48
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.Readers
  syntax:
    content: public static bool TryReadDIMSE(DICOMObject dcm, out AbstractDIMSE dimse)
    parameters:
    - id: dcm
      type: EvilDICOM.Core.DICOMObject
    - id: dimse
      type: EvilDICOM.Network.DIMSE.AbstractDIMSE
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryReadDIMSE(dcm As DICOMObject, ByRef dimse As AbstractDIMSE) As Boolean
  overload: EvilDICOM.Network.Readers.DIMSEReader.TryReadDIMSE*
  nameWithType.vb: DIMSEReader.TryReadDIMSE(DICOMObject, ByRef AbstractDIMSE)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EvilDICOM.Network.Readers.DIMSEReader.TryReadDIMSE(EvilDICOM.Core.DICOMObject, ByRef EvilDICOM.Network.DIMSE.AbstractDIMSE)
  name.vb: TryReadDIMSE(DICOMObject, ByRef AbstractDIMSE)
references:
- uid: EvilDICOM.Network.Readers
  commentId: N:EvilDICOM.Network.Readers
  isExternal: false
  name: EvilDICOM.Network.Readers
  nameWithType: EvilDICOM.Network.Readers
  fullName: EvilDICOM.Network.Readers
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EvilDICOM.Network.Readers.DIMSEReader.CreateDICOMObject*
  commentId: Overload:EvilDICOM.Network.Readers.DIMSEReader.CreateDICOMObject
  isExternal: false
  name: CreateDICOMObject
  nameWithType: DIMSEReader.CreateDICOMObject
  fullName: EvilDICOM.Network.Readers.DIMSEReader.CreateDICOMObject
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EvilDICOM.Core.Enums.TransferSyntax
  commentId: T:EvilDICOM.Core.Enums.TransferSyntax
  parent: EvilDICOM.Core.Enums
  isExternal: false
  name: TransferSyntax
  nameWithType: TransferSyntax
  fullName: EvilDICOM.Core.Enums.TransferSyntax
- uid: EvilDICOM.Core.DICOMObject
  commentId: T:EvilDICOM.Core.DICOMObject
  parent: EvilDICOM.Core
  isExternal: false
  name: DICOMObject
  nameWithType: DICOMObject
  fullName: EvilDICOM.Core.DICOMObject
- uid: EvilDICOM.Core.Enums
  commentId: N:EvilDICOM.Core.Enums
  isExternal: false
  name: EvilDICOM.Core.Enums
  nameWithType: EvilDICOM.Core.Enums
  fullName: EvilDICOM.Core.Enums
- uid: EvilDICOM.Core
  commentId: N:EvilDICOM.Core
  isExternal: false
  name: EvilDICOM.Core
  nameWithType: EvilDICOM.Core
  fullName: EvilDICOM.Core
- uid: EvilDICOM.Network.Readers.DIMSEReader.MergePDataTFData*
  commentId: Overload:EvilDICOM.Network.Readers.DIMSEReader.MergePDataTFData
  isExternal: false
  name: MergePDataTFData
  nameWithType: DIMSEReader.MergePDataTFData
  fullName: EvilDICOM.Network.Readers.DIMSEReader.MergePDataTFData
- uid: List{EvilDICOM.Network.PDUs.PDataTF}
  commentId: '!:List{EvilDICOM.Network.PDUs.PDataTF}'
  definition: List`1
  name: List<PDataTF>
  nameWithType: List<PDataTF>
  fullName: List<EvilDICOM.Network.PDUs.PDataTF>
  nameWithType.vb: List(Of PDataTF)
  fullName.vb: List(Of EvilDICOM.Network.PDUs.PDataTF)
  name.vb: List(Of PDataTF)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EvilDICOM.Network.PDUs.PDataTF
    name: PDataTF
    nameWithType: PDataTF
    fullName: EvilDICOM.Network.PDUs.PDataTF
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EvilDICOM.Network.PDUs.PDataTF
    name: PDataTF
    nameWithType: PDataTF
    fullName: EvilDICOM.Network.PDUs.PDataTF
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Network.Readers.DIMSEReader.TryReadDIMSE*
  commentId: Overload:EvilDICOM.Network.Readers.DIMSEReader.TryReadDIMSE
  isExternal: false
  name: TryReadDIMSE
  nameWithType: DIMSEReader.TryReadDIMSE
  fullName: EvilDICOM.Network.Readers.DIMSEReader.TryReadDIMSE
- uid: EvilDICOM.Network.DIMSE.AbstractDIMSE
  commentId: T:EvilDICOM.Network.DIMSE.AbstractDIMSE
  parent: EvilDICOM.Network.DIMSE
  isExternal: false
  name: AbstractDIMSE
  nameWithType: AbstractDIMSE
  fullName: EvilDICOM.Network.DIMSE.AbstractDIMSE
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EvilDICOM.Network.DIMSE
  commentId: N:EvilDICOM.Network.DIMSE
  isExternal: false
  name: EvilDICOM.Network.DIMSE
  nameWithType: EvilDICOM.Network.DIMSE
  fullName: EvilDICOM.Network.DIMSE
