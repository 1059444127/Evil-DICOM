items:
- uid: EvilDICOM.Anonymization.Anonymizers.StudyIdAnonymizer
  id: StudyIdAnonymizer
  parent: EvilDICOM.Anonymization.Anonymizers
  children:
  - EvilDICOM.Anonymization.Anonymizers.StudyIdAnonymizer.#ctor
  - EvilDICOM.Anonymization.Anonymizers.StudyIdAnonymizer.AddDICOMObject(EvilDICOM.Core.DICOMObject)
  - EvilDICOM.Anonymization.Anonymizers.StudyIdAnonymizer.Anonymize(EvilDICOM.Core.DICOMObject)
  - EvilDICOM.Anonymization.Anonymizers.StudyIdAnonymizer.FinalizeDictionary
  - EvilDICOM.Anonymization.Anonymizers.StudyIdAnonymizer.GenerateNames
  - EvilDICOM.Anonymization.Anonymizers.StudyIdAnonymizer.GenerateNamesByType
  - EvilDICOM.Anonymization.Anonymizers.StudyIdAnonymizer.GetFileType(EvilDICOM.Core.DICOMObject)
  - EvilDICOM.Anonymization.Anonymizers.StudyIdAnonymizer.Name
  - EvilDICOM.Anonymization.Anonymizers.StudyIdAnonymizer.StudyDictionary
  langs:
  - csharp
  - vb
  name: StudyIdAnonymizer
  fullName: EvilDICOM.Anonymization.Anonymizers.StudyIdAnonymizer
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Anonymization/Anonymizers/StudyIdAnonymizer.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Anonymization/Anonymizers/StudyIdAnonymizer.cs
    startLine: 13
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Anonymization.Anonymizers
  syntax:
    content: 'public class StudyIdAnonymizer : IAnonymizer'
    content.vb: Public Class StudyIdAnonymizer Implements IAnonymizer
  inheritance:
  - System.Object
  implements:
  - EvilDICOM.Anonymization.IAnonymizer
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: EvilDICOM.Anonymization.Anonymizers.StudyIdAnonymizer.StudyDictionary
  id: StudyDictionary
  parent: EvilDICOM.Anonymization.Anonymizers.StudyIdAnonymizer
  langs:
  - csharp
  - vb
  name: StudyDictionary
  fullName: EvilDICOM.Anonymization.Anonymizers.StudyIdAnonymizer.StudyDictionary
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Anonymization/Anonymizers/StudyIdAnonymizer.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Anonymization/Anonymizers/StudyIdAnonymizer.cs
    startLine: 16
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Anonymization.Anonymizers
  syntax:
    content: public Dictionary<string, string> StudyDictionary { get; set; }
    content.vb: Public Property StudyDictionary As Dictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
- uid: EvilDICOM.Anonymization.Anonymizers.StudyIdAnonymizer.#ctor
  id: '#ctor'
  parent: EvilDICOM.Anonymization.Anonymizers.StudyIdAnonymizer
  langs:
  - csharp
  - vb
  name: StudyIdAnonymizer()
  fullName: EvilDICOM.Anonymization.Anonymizers.StudyIdAnonymizer.StudyIdAnonymizer()
  type: Constructor
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Anonymization/Anonymizers/StudyIdAnonymizer.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Anonymization/Anonymizers/StudyIdAnonymizer.cs
    startLine: 18
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Anonymization.Anonymizers
  syntax:
    content: public StudyIdAnonymizer()
    content.vb: Public Sub New
- uid: EvilDICOM.Anonymization.Anonymizers.StudyIdAnonymizer.FinalizeDictionary
  id: FinalizeDictionary
  parent: EvilDICOM.Anonymization.Anonymizers.StudyIdAnonymizer
  langs:
  - csharp
  - vb
  name: FinalizeDictionary()
  fullName: EvilDICOM.Anonymization.Anonymizers.StudyIdAnonymizer.FinalizeDictionary()
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Anonymization/Anonymizers/StudyIdAnonymizer.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Anonymization/Anonymizers/StudyIdAnonymizer.cs
    startLine: 27
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Anonymization.Anonymizers
  summary: This method is to be called once all DICOM objects are added. It then remaps study ids in a private dictionary
  example: []
  syntax:
    content: public void FinalizeDictionary()
    content.vb: Public Sub FinalizeDictionary
- uid: EvilDICOM.Anonymization.Anonymizers.StudyIdAnonymizer.GenerateNames
  id: GenerateNames
  parent: EvilDICOM.Anonymization.Anonymizers.StudyIdAnonymizer
  langs:
  - csharp
  - vb
  name: GenerateNames()
  fullName: EvilDICOM.Anonymization.Anonymizers.StudyIdAnonymizer.GenerateNames()
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Anonymization/Anonymizers/StudyIdAnonymizer.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Anonymization/Anonymizers/StudyIdAnonymizer.cs
    startLine: 32
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Anonymization.Anonymizers
  syntax:
    content: public void GenerateNames()
    content.vb: Public Sub GenerateNames
- uid: EvilDICOM.Anonymization.Anonymizers.StudyIdAnonymizer.GenerateNamesByType
  id: GenerateNamesByType
  parent: EvilDICOM.Anonymization.Anonymizers.StudyIdAnonymizer
  langs:
  - csharp
  - vb
  name: GenerateNamesByType()
  fullName: EvilDICOM.Anonymization.Anonymizers.StudyIdAnonymizer.GenerateNamesByType()
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Anonymization/Anonymizers/StudyIdAnonymizer.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Anonymization/Anonymizers/StudyIdAnonymizer.cs
    startLine: 43
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Anonymization.Anonymizers
  syntax:
    content: public void GenerateNamesByType()
    content.vb: Public Sub GenerateNamesByType
- uid: EvilDICOM.Anonymization.Anonymizers.StudyIdAnonymizer.AddDICOMObject(EvilDICOM.Core.DICOMObject)
  id: AddDICOMObject(EvilDICOM.Core.DICOMObject)
  parent: EvilDICOM.Anonymization.Anonymizers.StudyIdAnonymizer
  langs:
  - csharp
  - vb
  name: AddDICOMObject(DICOMObject)
  fullName: EvilDICOM.Anonymization.Anonymizers.StudyIdAnonymizer.AddDICOMObject(EvilDICOM.Core.DICOMObject)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Anonymization/Anonymizers/StudyIdAnonymizer.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Anonymization/Anonymizers/StudyIdAnonymizer.cs
    startLine: 79
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Anonymization.Anonymizers
  syntax:
    content: public void AddDICOMObject(DICOMObject d)
    content.vb: Public Sub AddDICOMObject(d As DICOMObject)
    parameters:
    - id: d
      type: EvilDICOM.Core.DICOMObject
- uid: EvilDICOM.Anonymization.Anonymizers.StudyIdAnonymizer.Anonymize(EvilDICOM.Core.DICOMObject)
  id: Anonymize(EvilDICOM.Core.DICOMObject)
  parent: EvilDICOM.Anonymization.Anonymizers.StudyIdAnonymizer
  langs:
  - csharp
  - vb
  name: Anonymize(DICOMObject)
  fullName: EvilDICOM.Anonymization.Anonymizers.StudyIdAnonymizer.Anonymize(EvilDICOM.Core.DICOMObject)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Anonymization/Anonymizers/StudyIdAnonymizer.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Anonymization/Anonymizers/StudyIdAnonymizer.cs
    startLine: 98
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Anonymization.Anonymizers
  syntax:
    content: public void Anonymize(DICOMObject d)
    content.vb: Public Sub Anonymize(d As DICOMObject)
    parameters:
    - id: d
      type: EvilDICOM.Core.DICOMObject
- uid: EvilDICOM.Anonymization.Anonymizers.StudyIdAnonymizer.GetFileType(EvilDICOM.Core.DICOMObject)
  id: GetFileType(EvilDICOM.Core.DICOMObject)
  parent: EvilDICOM.Anonymization.Anonymizers.StudyIdAnonymizer
  langs:
  - csharp
  - vb
  name: GetFileType(DICOMObject)
  fullName: EvilDICOM.Anonymization.Anonymizers.StudyIdAnonymizer.GetFileType(EvilDICOM.Core.DICOMObject)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Anonymization/Anonymizers/StudyIdAnonymizer.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Anonymization/Anonymizers/StudyIdAnonymizer.cs
    startLine: 113
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Anonymization.Anonymizers
  syntax:
    content: public static DICOMFileType GetFileType(DICOMObject d)
    content.vb: Public Shared Function GetFileType(d As DICOMObject) As DICOMFileType
    parameters:
    - id: d
      type: EvilDICOM.Core.DICOMObject
    return:
      type: EvilDICOM.Anonymization.Anonymizers.DICOMFileType
- uid: EvilDICOM.Anonymization.Anonymizers.StudyIdAnonymizer.Name
  id: Name
  parent: EvilDICOM.Anonymization.Anonymizers.StudyIdAnonymizer
  langs:
  - csharp
  - vb
  name: Name
  fullName: EvilDICOM.Anonymization.Anonymizers.StudyIdAnonymizer.Name
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Anonymization/Anonymizers/StudyIdAnonymizer.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM.git
    path: EvilDICOM/EvilDICOM/Anonymization/Anonymizers/StudyIdAnonymizer.cs
    startLine: 134
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Anonymization.Anonymizers
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
references:
- uid: EvilDICOM.Anonymization.Anonymizers
  isExternal: false
  name: EvilDICOM.Anonymization.Anonymizers
  fullName: EvilDICOM.Anonymization.Anonymizers
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: EvilDICOM.Anonymization.IAnonymizer
  parent: EvilDICOM.Anonymization
  isExternal: false
  name: IAnonymizer
  fullName: EvilDICOM.Anonymization.IAnonymizer
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: EvilDICOM.Anonymization
  isExternal: false
  name: EvilDICOM.Anonymization
  fullName: EvilDICOM.Anonymization
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  fullname.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: EvilDICOM.Core.DICOMObject
  parent: EvilDICOM.Core
  isExternal: false
  name: DICOMObject
  fullName: EvilDICOM.Core.DICOMObject
- uid: EvilDICOM.Core
  isExternal: false
  name: EvilDICOM.Core
  fullName: EvilDICOM.Core
- uid: EvilDICOM.Anonymization.Anonymizers.DICOMFileType
  parent: EvilDICOM.Anonymization.Anonymizers
  isExternal: false
  name: DICOMFileType
  fullName: EvilDICOM.Anonymization.Anonymizers.DICOMFileType
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
